# A subset of the FireCloud API spec that we use to generate Java client libraries. The
# original API spec can be found here:
# https://github.com/broadinstitute/firecloud-orchestration/blob/develop/src/main/resources/swagger/api-docs.yaml
# WorkspaceResponse and its children are not in the current FC API spec and can be found in the
# Rawls spec here:
# https://github.com/broadinstitute/rawls/blob/develop/core/src/main/resources/swagger/rawls.yaml#L5034

openapi: 3.0.1
info:
  title: FireCloud
  description: |
    Genome analysis execution service.
  termsOfService: https://github.com/broadinstitute/firecloud-orchestration
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  version: "0.1"
servers:
  - url: https://api.firecloud.org/
security:
  - googleoauth:
      - openid
      - email
      - profile
      - https://www.googleapis.com/auth/devstorage.full_control
paths:
  /status:
    get:
      tags:
        - status
      summary: |
        An orchestrated status check for underlying systems: Agora, Thurloe, Elasticsearch, Rawls
      operationId: status
      responses:
        200:
          description: All systems OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
        500:
          description: Problem with one or more systems. See response for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
  /api/billing:
    post:
      tags:
        - Billing
      summary: create billing project in FireCloud and google
      operationId: createBillingProjectFull
      requestBody:
        description: create project request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'
        required: true
      responses:
        204:
          description: Successfully Created Billing Project in FireCloud and Google
          content: {}
        400:
          description: FireCloud billing user must be an admin of the billing account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        403:
          description: You must be an admin of the google billing account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        409:
          description: project already exists in FireCloud or google
          content: {}
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing
      x-codegen-request-body-name: createProjectRequest
  /api/billing/v2:
    post:
      tags:
        - billing_v2
      summary: create billing project in rawls
      description: create new billing project in rawls
      operationId: createBillingProjectFullV2
      requestBody:
        description: create project request
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'
        required: true
      responses:
        201:
          description: Successfully Created Billing Project in Rawls
        400:
          description: both you and firecloud billing user must be a user of the billing account
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        409:
          description: project already exists in rawls
          content: { }
        500:
          description: Rawls Internal Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing
      x-codegen-request-body-name: createProjectRequest

  /api/billing/{projectId}/members:
    get:
      tags:
        - Billing
      summary: list members of billing project the caller owns
      operationId: listBillingProjectMembers
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingProjectMember'
        403:
          description: You must be a project owner to view the members of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/billing/v2/{projectId}/members:
    get:
      tags:
        - billing_v2
      summary: list members of billing project the caller owns
      description: list members of billing project the caller owns
      operationId: listBillingProjectMembers
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingProjectMember'
        403:
          description: You must be a project owner to view the members of a project
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'

  /api/billing/{projectId}/{role}/{email}:
    put:
      tags:
        - Billing
      summary: add user to billing project the caller owns
      operationId: addUserToBillingProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
        - name: role
          in: path
          description: role of user for project
          required: true
          schema:
            type: string
            enum:
              - user
              - owner
        - name: email
          in: path
          description: email of user or group to add
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Added User To Billing Project
          content: {}
        403:
          description: You must be a project owner to add a user to a billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
    delete:
      tags:
        - billing
      summary: remove user or group from billing project the caller owns
      description: remove user or group from billing project the caller owns
      operationId: removeUserFromBillingProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
        - name: role
          in: path
          description: role of user for project
          required: true
          schema:
            type: string
            enum:
              - user
              - owner
        - name: email
          in: path
          description: email of user or group to remove
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Removed User From Billing Project
          content: {}
        403:
          description: You must be a project owner to add a user to a billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/billing/v2/{projectId}/members/{workbenchRole}/{email}:
    put:
      tags:
        - billing_v2
      summary: add user or group to billing project the caller owns
      description: add user or group to billing project the caller owns
      operationId: addUserToBillingProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
        - name: workbenchRole
          in: path
          description: role of user for project
          required: true
          schema:
            type: string
            enum:
              - user
              - owner
        - name: email
          in: path
          description: email of user or group to add
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Added User/Group To Billing Project
        403:
          description: You must be a project owner to add a user to a billing project
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: User not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      tags:
        - billing_v2
      summary: remove user or group from billing project the caller owns
      description: remove user or group from billing project the caller owns
      operationId: removeUserFromBillingProject
      parameters:
        - name: projectId
          in: path
          description: Project ID
          required: true
          schema:
            type: string
        - name: workbenchRole
          in: path
          description: role of user for project
          required: true
          schema:
            type: string
            enum:
              - user
              - owner
        - name: email
          in: path
          description: email of user or group to remove
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Removed User From Billing Project
        403:
          description: You must be a project owner to add a user to a billing project
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: User not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'

  /api/user/billing/{projectName}:
    delete:
      tags:
        - Billing
      summary: delete billing project
      description: |
        Immediately delete the Billing Project and all of its resources, as well as the underlying Google Project. Requires that there are no Workspaces associated with this Project.
      operationId: deleteBillingProject
      parameters:
        - name: projectName
          in: path
          description: Name of the billing project
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully delete billing project
          content: {}
        400:
          description: Project cannot be deleted because it contains workspaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        403:
          description: You must be a project owner to delete billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/billing/v2/{projectId}:
    get:
      tags:
        - billing_v2
      summary: get billing project
      description: get billing project
      operationId: getBillingProject
      parameters:
        - name: projectId
          in: path
          description: Id of the billing project
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BillingProjectResponse'
        404:
          description: Project Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      tags:
        - billing_v2
      summary: delete billing project
      description: delete billing project
      operationId: deleteBillingProject
      parameters:
        - name: projectId
          in: path
          description: Id of the billing project
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
        404:
          description: Project Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'

  /api/billing/v2/{projectId}/billingAccount:
    put:
      tags:
        - BillingV2
      summary: update billing account on billing project
      description: Update the Billing Account on the Billing Project and on each Workspace in the Billing Project
      operationId: updateBillingProjectBillingAccount
      parameters:
        - name: projectId
          in: path
          description: Id of the billing project
          required: true
          schema:
            type: string
      requestBody:
        description: update billing account request
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UpdateRawlsBillingAccountRequest'
        required: true
      responses:
        200:
          description: Billing Account on Billing Project is successfully updated and process is started to update the Billing Account on each Workspace in the Billing Project
        400:
          description: Billing account not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: Billing Project Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-passthrough: true
      x-passthrough-target: rawls
    delete:
      tags:
        - BillingV2
      summary: deletes the billing account on billing project
      description: Clears the Billing Account on the Billing Project and on each Workspace in the Billing Project
      operationId: deleteBillingProjectBillingAccount
      parameters:
        - name: projectId
          in: path
          description: Id of the billing project
          required: true
          schema:
            type: string
      responses:
        200:
          description: Billing account successfully removed
        404:
          description: Billing project Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-passthrough: true
      x-passthrough-target: rawls

  /api/nih/status:
    get:
      tags:
        - Nih
      summary: Get the current NIH status for a user
      operationId: nihStatus
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NihStatus'
        404:
          description: linkedNihUsername key missing from status
          content: {}
        500:
          description: Internal server error retrieving NIH status
          content: {}
  /api/profile/billing:
    get:
      tags:
        - Profile
      summary: List billing projects for a user
      operationId: billing
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingProjectMembership'
        404:
          description: User Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /api/profile/billing/{projectName}:
    get:
      tags:
        - billing
      summary: billing project status
      description: billing project status
      operationId: billingProjectStatus
      parameters:
        - name: projectName
          in: path
          description: Name of the billing project
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingProjectStatus'
        404:
          description: Project Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /api/workspaces:
    get:
      tags:
        - Workspaces
      summary: |
        Lists workspaces.
      operationId: listWorkspaces
      parameters:
        - name: fields
          in: query
          description: |
            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {"workspace": {"attributes": {}}}, specify "workspace.attributes". Legal values are any first-level key in the response, any first-level key inside the {"workspace": {}} object, and any first-level key inside the {"workspace": {"attributes": {}}} object. If omitted, will return the full response payload.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: List of workspaces.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceResponse'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceResponse'
    post:
      tags:
        - Workspaces
      summary: Create workspace
      operationId: createWorkspace
      requestBody:
        description: New workspace information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIngest'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        403:
          description: Unable to create bucket for workspace
          content: {}
        409:
          description: Workspace by that name already exists
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: workspace
  /api/workspaces/{workspaceNamespace}/{workspaceName}:
    get:
      tags:
        - Workspaces
      summary: Get workspace
      operationId: getWorkspace
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: |
            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {"workspace": {"attributes": {}}}, specify "workspace.attributes". Legal values are any first-level key in the response, any first-level key inside the {"workspace": {}} object, and any first-level key inside the {"workspace": {"attributes": {}}} object. If omitted, will return the full response payload.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
        404:
          description: Workspace does not exist
          content: {}
        500:
          description: Internal Server Error
          content: {}
    delete:
      tags:
        - Workspaces
      summary: Delete workspace
      operationId: deleteWorkspace
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
      responses:
        202:
          description: Request Accepted
          content: {}
        403:
          description: User does not have correct permissions to delete a published
            workspace
          content: {}
        404:
          description: Workspace does not exist
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:
    get:
      tags:
        - Workspaces
      summary: Get workspace ACL
      operationId: getWorkspaceAcl
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceACL'
        400:
          description: Can't retrieve ACL for workspace
          content: {}
        404:
          description: Workspace not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
        - Workspaces
      summary: Update workspace ACL
      operationId: updateWorkspaceACL
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
        - name: inviteUsersNotFound
          in: query
          description: true to invite unregistered users, false to ignore
          required: true
          schema:
            type: boolean
            default: false
      requestBody:
        description: Series of ACL updates for workspace
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkspaceACLUpdate'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceACLUpdateResponseList'
        400:
          description: Can't set ACL for workspace
          content: {}
        404:
          description: Workspace not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: aclUpdates
  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:
    post:
      tags:
        - Workspaces
      summary: Clone Workspace
      operationId: cloneWorkspace
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
      requestBody:
        description: Cloned workspace information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequestClone'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        400:
          description: Unable to create resources for workspace
          content: {}
        404:
          description: Source workspace not found
          content: {}
        409:
          description: Destination workspace already exists
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: workspace
  /api/staticNotebooks/convert:
    post:
      tags:
        - Static Notebooks
      summary: Convert a Notebook ipynb file to a static HTML representation
      description: Convert a Notebook ipynb file to a static HTML representation
      operationId: convertNotebook
      requestBody:
        description: Notebook ipynb file
        content:
          'application/json':
            schema:
              type: object
        required: true
      responses:
        200:
          description: Success
          content:
            text/html:
              schema:
                type: string
        500:
          description: Internal Error
          content: {}
      x-codegen-request-body-name: notebook
  /me:
    get:
      tags:
        - Profile
      summary: Returns registration and activation status for the current user
      operationId: me
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        401:
          description: Unauthorized. User is not allowed in FireCloud or has not signed
            in.
          content: {}
        403:
          description: Forbidden. User is registered in FireCloud, but not activated.
          content: {}
        404:
          description: Not Found. User is authenticated to Google but not a FireCloud
            member.
          content: {}
        500:
          description: Internal Server Error determining user status.
          content: {}
        503:
          description: Service Unavailable. Could not reach underlying services to
            determine user status.
          content: {}
  /register/profile:
    post:
      tags:
        - Profile
      summary: Sets a profile object in the user profile service for the currently
        logged-in user.
      operationId: setProfile
      requestBody:
        description: A complete profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: false
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad request
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: profile
  /api/groups:
    get:
      tags:
        - Groups
      summary: get the list of the groups that the caller is a member of
      operationId: getGroups
      responses:
        200:
          description: Successfully listed group membership
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagedGroupAccessResponse'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
  /api/groups/{groupName}:
    get:
      tags:
        - Groups
      summary: view the members in a group
      operationId: getGroup
      parameters:
        - name: groupName
          in: path
          description: Group name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully loaded group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGroupWithMembers'
        403:
          description: You must be an admin of this group in order to view members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
    post:
      tags:
        - Groups
      summary: create a new group
      operationId: createGroup
      parameters:
        - name: groupName
          in: path
          description: Group name
          required: true
          schema:
            type: string
      responses:
        201:
          description: Successfully created group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedGroupWithMembers'
        409:
          description: Group already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
  /api/groups/{groupName}/{role}/{email}:
    put:
      tags:
        - Groups
      summary: add a user to a group the caller owns
      operationId: addUserToGroup
      parameters:
        - name: groupName
          in: path
          description: Group name
          required: true
          schema:
            type: string
        - name: role
          in: path
          description: role of user for group
          required: true
          schema:
            type: string
            enum:
              - member
              - admin
        - name: email
          in: path
          description: email of user or group to add
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully Added User To Group
          content: {}
        403:
          description: You must be an admin of this group in order to add members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
    delete:
      tags:
        - Groups
      summary: remove a user from a group the caller owns
      operationId: removeUserFromGroup
      parameters:
        - name: groupName
          in: path
          description: Group name
          required: true
          schema:
            type: string
        - name: role
          in: path
          description: role of user for group
          required: true
          schema:
            type: string
            enum:
              - member
              - admin
        - name: email
          in: path
          description: email of user or group to add
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully Removed User From Group
          content: {}
        403:
          description: You must be an admin of this group in order to remove members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      security:
        - googleoauth:
            - openid
            - email
            - profile
  /api/proxyGroup/{email}:
    get:
      tags:
        - Profile
      summary: Returns the proxy group email for the current user
      operationId: getProxyGroup
      parameters:
        - name: email
          in: path
          description: User email whose proxy group to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: user proxy group
          content:
            application/json:
              schema:
                type: string
        404:
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: FireCloud Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:
    post:
      tags:
        - Submissions
      summary: |
        Create a submission.
      operationId: createSubmission
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
      requestBody:
        description: Submission Request
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SubmissionRequest'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResponse'
        400:
          description: Expression eval failed or entities are not of type required
            by method config
          content: {}
        404:
          description: Method Configuration or Entity not found
          content: {}
        409:
          description: Method Configuration failed to resolve input expressions with
            the supplied Entity
          content: {}
        500:
          description: Internal Error
          content: {}
      x-codegen-request-body-name: submissionRequest
  /api/methods:
    get:
      tags:
        - methodRepository
      summary: |
        Lists Method Repository methods.
      operationId: listMethodRepositoryMethods
      parameters:
        - name: namespace
          in: query
          description: Namespace of method.
          schema:
            type: string
        - name: name
          in: query
          description: Name of method.
          schema:
            type: string
        - name: snapshotId
          in: query
          description: Snapshot ID of method.
          schema:
            type: integer
            format: int32
        - name: snapshotComment
          in: query
          description: Snapshot comment of AgoraEntity
          schema:
            type: string
        - name: synopsis
          in: query
          description: Synopsis of method.
          schema:
            type: string
        - name: documentation
          in: query
          description: Documentation of method.
          schema:
            type: string
        - name: owner
          in: query
          description: Owner of method.
          schema:
            type: string
        - name: payload
          in: query
          description: Payload of method in WDL.
          schema:
            type: string
        - name: entityType
          in: query
          description: Type of Method - Task or Workflow
          schema:
            type: string
      responses:
        200:
          description: List of methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MethodResponse'
        400:
          description: Invalid arguments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    post:
      tags:
        - methodRepository
      summary: Add a Method.
      description: |
        Inserts a method into the method repository and
        gives the owner full access permissions. Must supply a namespace
        name, payload, and entityType. Cannot supply a snapshotId
      operationId: createMethod
      requestBody:
        description: Method Query
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MethodQuery'
        required: true
      responses:
        201:
          description: Method successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        400:
          description: Malformed input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: methodQuery
  /api/methods/{namespace}/{name}/{snapshotId}:
    post:
      tags:
        - methodRepository
      summary: Create a new snapshot of an existing Method.
      description: |
        Inserts a new snapshot of the method into the method repository and
        copies access permissions from previous snapshot, optionally redacting
        the source snapshot. Documentation, synopsis, and payload are the only
        arguments considered for the new snapshot; everything else is copied
        from the source.
      operationId: createMethodSnapshot
      parameters:
        - name: namespace
          in: path
          description: Method Namespace
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Method Name
          required: true
          schema:
            type: string
        - name: snapshotId
          in: path
          description: Method snapshot ID
          required: true
          schema:
            type: string
        - name: redact
          in: query
          description: Should the source method be redacted?
          schema:
            type: boolean
            default: false
      requestBody:
        description: Method Query
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MethodQuery'
        required: true
      responses:
        200:
          description: Method successfully copied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        206:
          description: Method successfully copied, but error while redacting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        400:
          description: Malformed input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        403:
          description: Forbidden to create copy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: Source snapshot not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: methodQuery
  /api/inputsOutputs:
    post:
      tags:
        - methodRepository
      summary: Get information about a method's inputs and outputs
      operationId: getMethodIO
      requestBody:
        description: Method ID
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MethodID'
        required: true
      responses:
        200:
          description: Method Configuration inputs and outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodIO'
        400:
          description: Method WDL can't be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        404:
          description: No Such Method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: methodId
  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:
    post:
      tags:
        - methodConfigurations
      summary: Create a Method Configuration in a workspace
      operationId: createWorkspaceMethodConfig
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
      requestBody:
        description: Method Configuration contents
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MethodConfiguration'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatedMethodConfiguration'
        404:
          description: Workspace not found
          content: {}
        409:
          description: Method Configuration already exists
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: newMethodConfigIngest
  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}:
    delete:
      tags:
        - methodConfigurations
      summary: Delete a method configuration in a workspace
      operationId: deleteWorkspaceMethodConfig
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
        - name: configNamespace
          in: path
          description: Configuration Namespace
          required: true
          schema:
            type: string
        - name: configName
          in: path
          description: Configuration Name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful request
          content: {}
        404:
          description: Workspace or Method Configuration not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}:
    get:
      tags:
        - submissions
      summary: |
        Monitor submission status
      operationId: getSubmission
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        404:
          description: Submission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      tags:
        - Submissions
      summary: Abort a running submission.
      operationId: abortSubmission
      parameters:
        - name: workspaceNamespace
          in: path
          description: Workspace Namespace
          required: true
          schema:
            type: string
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successful request
          content: {}
        404:
          description: Submission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
components:
  schemas:
    BillingProjectMember:
      required:
        - email
        - role
      type: object
      properties:
        email:
          type: string
          description: the email of the user
        role:
          type: string
          description: the role of the user in the project
    BillingProjectMembership:
      required:
        - projectName
        - role
      type: object
      properties:
        projectName:
          type: string
          description: the name of the project to create
        role:
          type: string
          description: the role of the current user in the project
        creationStatus:
          type: string
          enum:
            - Creating
            - Ready
            - Error
      description: ""
    BillingProjectStatus:
      required:
        - creationStatus
        - projectName
      type: object
      properties:
        projectName:
          type: string
          description: the name of the billing project
        creationStatus:
          type: string
          enum:
            - Creating
            - AddingToPerimeter
            - Ready
            - Error
      description: a billing project status
    CreateRawlsBillingProjectFullRequest:
      required:
        - billingAccount
        - projectName
      type: object
      properties:
        projectName:
          type: string
          description: the name of the project to create
        billingAccount:
          type: string
          description: the id of the billing account to use, must start with 'billingAccounts/'
        highSecurityNetwork:
          type: boolean
          description: Optional, false if not specified. If true, spin up all compute
            in a VPC network.
        enableFlowLogs:
          type: boolean
          description: Optional, false if not specified. If true, enable flow logs
            within the high security network. Requires highSecurityNetwork = true.
        privateIpGoogleAccess:
          type: boolean
          description: Optional, false if not specified. If true, it configures the
            VPC network to only allow access to GCP APIs that are protected by the
            project's service perimeter and routes all allowed API traffic through
            a narrow IP range. Requires highSecurityNetwork = true.
        servicePerimeter:
          type: string
          description: The fully qualified name of the GCP service perimeter to put
            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].
            Caller must have the add_project action for this service perimeter in
            Sam.
      description: ""
    Enabled:
      type: object
      properties:
        google:
          type: boolean
          description: User enabled via Google?
        ldap:
          type: boolean
          description: User enabled in LDAP?
        allUsersGroup:
          type: boolean
          description: User is a member of the "All Users" group?
    ErrorReport:
      required:
        - causes
        - message
        - source
        - stackTrace
      type: object
      properties:
        source:
          type: string
          description: service causing error
        message:
          type: string
          description: what went wrong
        statusCode:
          type: integer
          description: HTTP status code
        causes:
          type: array
          description: errors triggering this one
          items:
            $ref: '#/components/schemas/ErrorReport'
        stackTrace:
          type: array
          description: stack trace
          items:
            $ref: '#/components/schemas/StackTraceElement'
      description: ""
    ManagedGroupRef:
      required:
        - membersGroupName
      type: object
      properties:
        membersGroupName:
          type: string
      description: a reference to a group that can be managed by users
    Me:
      type: object
      properties:
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        enabled:
          $ref: '#/components/schemas/Enabled'
    NihStatus:
      required:
        - linkedNihUsername
      type: object
      properties:
        linkedNihUsername:
          type: string
          description: The user's NIH username
        datasetPermissions:
          type: array
          description: Array of FireCloud dataset permissions
          items:
            type: object
            properties: {}
        linkExpireTime:
          type: integer
          description: The FireCloud-calculated expiration time, in Epoch seconds
          format: int64
          default: 0
    Profile:
      required:
        - firstName
        - institute
        - institutionalProgram
        - lastName
        - nonProfitStatus
        - pi
        - programLocationCity
        - programLocationCountry
        - programLocationState
        - title
      type: object
      properties:
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        title:
          type: string
          description: User's title
        contactEmail:
          type: string
          description: User's contact email (if different from account email)
        institute:
          type: string
          description: User's home institution
        institutionalProgram:
          type: string
          description: User's institutional program
        programLocationCity:
          type: string
          description: User's program location city
        programLocationState:
          type: string
          description: User's program location state
        programLocationCountry:
          type: string
          description: User's program location country
        pi:
          type: string
          description: Principal Investigator
        nonProfitStatus:
          type: string
          description: User's program non-profit status
    StackTraceElement:
      required:
        - className
        - fileName
        - lineNumber
        - methodName
      type: object
      properties:
        className:
          type: string
          description: class name
        methodName:
          type: string
          description: method name
        fileName:
          type: string
          description: source file name
        lineNumber:
          type: integer
          description: line number
      description: ""
    UserInfo:
      type: object
      properties:
        userSubjectId:
          type: string
          description: Subject ID (from Google)
        userEmail:
          type: string
          description: User's email
    Workspace:
      required:
        - accessLevels
        - attributes
        - authDomainACLs
        - authorizationDomain
        - bucketName
        - createdBy
        - createdDate
        - googleProject
        - isLocked
        - lastModified
        - name
        - namespace
        - workspaceId
      type: object
      properties:
        namespace:
          type: string
          description: The namespace the workspace belongs to
        name:
          type: string
          description: The name of the workspace
        authorizationDomain:
          type: array
          description: The list of groups to form the Authorization Domain (empty
            if no Authorization Domain is set)
          items:
            $ref: '#/components/schemas/ManagedGroupRef'
        workspaceId:
          type: string
          description: A UUID associated with the workspace
        bucketName:
          type: string
          description: The name of the bucket associated with the workspace
        createdDate:
          type: string
          description: The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ
            format
          format: date-time
        lastModified:
          type: string
          description: The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ
            format
          format: date-time
        createdBy:
          type: string
          description: The user who created the workspace
        attributes:
          type: object
          properties: {}
          description: Map[String, Attribute]
        accessLevels:
          type: object
          properties: {}
          description: Map[String, RawlsGroupRef]
        authDomainACLs:
          type: object
          properties: {}
          description: Map[String, RawlsGroupRef]
        isLocked:
          type: boolean
          description: Can the Workspace currently be modified?
        googleProject:
          type: string
          description: the google project used by the workspace for compute and storage
      description: ""
    WorkspaceAccessLevel:
      type: object
      properties:
        name:
          type: string
          description: Workspace Access Level
      description: The level of access a user or group has on a Workspace. NoAccess,
        Read, Write, Owner, ProjectOwner
    WorkspaceIngest:
      required:
        - attributes
        - name
        - namespace
      type: object
      properties:
        namespace:
          type: string
          description: New workspace namespace
        name:
          type: string
          description: New workspace name
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Map of attributes
        authorizationDomain:
          type: array
          description: The list of groups to form the Authorization Domain (empty
            if no Authorization Domain is set)
          items:
            $ref: '#/components/schemas/ManagedGroupRef'
    WorkspaceRequestClone:
      required:
        - attributes
        - name
        - namespace
      type: object
      properties:
        namespace:
          type: string
          description: The namespace (billing project) the workspace belongs to
        name:
          type: string
          description: The name of the workspace
        authorizationDomain:
          type: array
          description: The list of groups in the Authorization Domain (empty if no
            AD is set)
          items:
            $ref: '#/components/schemas/ManagedGroupRef'
        attributes:
          type: object
          additionalProperties:
            type: string
        copyFilesWithPrefix:
          type: string
          description: Used for clone operations only; the prefix for files to copy
            between source and destination workspace buckets
      description: ""
    WorkspaceResponse:
      type: object
      properties:
        accessLevel:
          type: string
        canShare:
          type: boolean
        catalog:
          type: boolean
        workspace:
          $ref: '#/components/schemas/Workspace'
        workspaceSubmissionStats:
          $ref: '#/components/schemas/WorkspaceSubmissionStats'
        owners:
          type: array
          items:
            type: string
      description: ""
    WorkspaceSubmissionStats:
      required:
        - runningSubmissionsCount
      type: object
      properties:
        lastSuccessDate:
          type: string
          description: The date of the last successful submission
          format: date-time
        lastFailureDate:
          type: string
          description: The date of the last failed submission
          format: date-time
        runningSubmissionsCount:
          type: integer
          description: Count of all the running submissions
      description: Statistics about submissions in a workspace
    WorkspaceACL:
      required:
        - acl
      type: object
      properties:
        acl:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/WorkspaceAccessEntry'
          description: Map[String, WorkspaceAccessEntry]
      description: ""
    WorkspaceACLUpdate:
      required:
        - accessLevel
        - email
      type: object
      properties:
        email:
          type: string
          description: email address of the user or group whose permissions will be
            changed
        accessLevel:
          type: string
          description: The access level to grant to this user or group (OWNER, READER,
            WRITER, NO ACCESS)
        canShare:
          type: boolean
          description: Set to true if you want this user to be able to share the workspace
            with other users, only meaningful for readers and writers, default false
        canCompute:
          type: boolean
          description: Set to true if you want this user to be able to launch compute
            in this workspace, may not be true for readers, default false for reader,
            true otherwise
      description: ""
    WorkspaceACLUpdateResponse:
      required:
        - accessLevel
        - subjectId
      type: object
      properties:
        subjectId:
          type: string
          description: id of the user or group whose permissions will be changed
        accessLevel:
          type: string
          description: The access level granted to this user or group (OWNER, READER,
            WRITER, NO ACCESS)
      description: ""
    WorkspaceACLUpdateResponseList:
      required:
        - invitesSent
        - invitesUpdated
        - usersNotFound
        - usersUpdated
      type: object
      properties:
        usersUpdated:
          type: array
          description: the users or groups who were updated
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdateResponse'
        invitesSent:
          type: array
          description: the list of invites that were sent
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
        invitesUpdated:
          type: array
          description: the list of invites that were updated
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
        usersNotFound:
          type: array
          description: the users or groups who were not found
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
      description: ""
    WorkspaceAccessEntry:
      required:
        - accessLevel
        - canCompute
        - canShare
        - pending
      type: object
      properties:
        accessLevel:
          type: string
          description: The access level granted to this user or group (OWNER, READER,
            WRITER, NO ACCESS)
        pending:
          type: boolean
          description: The status of the users access
        canShare:
          type: boolean
          description: True if the user can share the workspace with others, false
            otherwise
        canCompute:
          type: boolean
          description: True if the user can launch compute in this workspace, false
            otherwise
      description: ""
    ManagedGroupAccessResponse:
      required:
        - groupEmail
        - groupName
        - role
      type: object
      properties:
        groupName:
          type: string
        groupEmail:
          type: string
        role:
          type: string
      description: an element of a list of groups a user has access to
    ManagedGroupWithMembers:
      required:
        - adminsEmails
        - membersEmails
      type: object
      properties:
        groupEmail:
          type: string
        membersEmails:
          type: array
          items:
            type: string
        adminsEmails:
          type: array
          items:
            type: string
      description: a group with all of its members
    RawlsGroupShort:
      type: object
      properties:
        groupName:
          type: string
          description: the name of the group
        groupEmail:
          type: string
          description: the email associated with the group
      description: a reference to a group
    SystemStatus:
      required:
        - ok
        - systems
      type: object
      properties:
        ok:
          type: boolean
          description: whether any system(s) need attention
          example: false
        systems:
          type: object
          properties: {}
          description: Map[String, SubsystemStatus]
          example:
            Agora:
              ok: true
            Google:
              ok: true
            Consent:
              ok: false
              messages:
                - ClusterHealth is RED
            Rawls:
              ok: true
            Ontology:
              ok: true
            Search:
              ok: true
            Thurloe:
              ok: false
              messages:
                - Thurloe misbehavior message
      description: report status of systems Orchestration calls out to
    Submission:
      type: object
      properties:
        submissionId:
          type: string
          description: SubmissionRequest unique identifier
        submissionDate:
          type: string
          description: SubmissionRequest date
          format: date-time
        submitter:
          type: string
          description: user that created the submission
        methodConfigurationNamespace:
          type: string
          description: Method configuration namespace
        methodConfigurationName:
          type: string
          description: Method configuration name
        workflows:
          type: array
          description: Status of Workflow(s)
          items:
            $ref: '#/components/schemas/Workflow'
        status:
          $ref: '#/components/schemas/SubmissionStatus'
        cost:
          type: number
          description: The compute cost of this submission
          format: float
        useCallCache:
          type: boolean
          description: Whether or not to read from cache for this submission
        deleteIntermediateOutputFiles:
          type: boolean
          description: Whether or not to delete intermediate output files when the
            workflow completes. See Cromwell docs for more information.
        workflowFailureMode:
          type: string
          description: What happens after a task fails. Choose from ContinueWhilePossible
            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
            docs for more information.
          default: NoNewCalls
          enum:
            - NoNewCalls
            - ContinueWhilePossible
      description: ""
    SubmissionStatus:
      type: string
      description: submission status
      enum:
        - Accepted
        - Evaluating
        - Submitting
        - Submitted
        - Aborting
        - Aborted
        - Done
    Workflow:
      type: object
      properties:
        workflowId:
          type: string
          description: Workflow unique identifier
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        statusLastChangedDate:
          type: string
          description: Status last-changed date
          format: date-time
        messages:
          type: array
          description: List of messages about this workflow
          items:
            type: string
        cost:
          type: number
          description: The run cost of this workflow
          format: float
      description: ""
    WorkflowStatus:
      type: string
      description: workflow status
      enum:
        - Queued
        - Launching
        - Submitted
        - Running
        - Failed
        - Succeeded
        - Aborting
        - Aborted
        - Unknown
    SubmissionRequest:
      required:
        - methodConfigurationName
        - methodConfigurationNamespace
        - useCallCache
      type: object
      properties:
        methodConfigurationNamespace:
          type: string
          description: Namespace of the method configuration to execute.
        methodConfigurationName:
          type: string
          description: Name of the method configuration to execute.
        entityType:
          type: string
          description: Type of root entity for expression. Optional if the method
            configuration has no root entity.
        entityName:
          type: string
          description: Name of root entity for expression. Optional if the method
            configuration has no root entity.
        expression:
          type: string
          description: Expression that resolves to one or more entities matching the
            entity type in the method configuration. Optional if the method configuration
            has no root entity.
        useCallCache:
          type: boolean
          description: Whether or not to read from cache for this submission.
        deleteIntermediateOutputFiles:
          type: boolean
          description: Whether or not to delete intermediate output files when the
            workflow completes. See Cromwell docs for more information.
        useReferenceDisks:
          type: boolean
          description: Whether or not to use pre-built disks for common genome references
        workflowFailureMode:
          type: string
          description: What happens after a task fails. Choose from ContinueWhilePossible
            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
            docs for more information.
          default: NoNewCalls
          enum:
            - NoNewCalls
            - ContinueWhilePossible
      description: If the referenced method configuration takes no root entity, do
        not define `entityType`, `entityName` and `expression`.
    SubmissionResponse:
      required:
        - submissionId
      type: object
      properties:
        submissionId:
          type: string
          description: Submission Id
        submissionDate:
          type: string
          description: SubmissionRequest date
          format: date-time
    MethodConfiguration:
      required:
        - deleted
        - inputs
        - methodConfigVersion
        - methodRepoMethod
        - name
        - namespace
        - outputs
        - prerequisites
        - rootEntityType
      type: object
      properties:
        namespace:
          type: string
          description: Method configuration namespace
        name:
          type: string
          description: Method configuration name
        rootEntityType:
          type: string
          description: Method configuration root entity type
        inputs:
          type: object
          additionalProperties:
            type: string
          description: Input map - Map[string, string]
        outputs:
          type: object
          additionalProperties:
            type: string
          description: Output map - Map[string, string]
        prerequisites:
          type: object
          additionalProperties:
            type: string
          description: Prerequisites map - Map[string, string]
        methodRepoMethod:
          type: object
          additionalProperties:
            type: string
          description: Method ID - Map
        methodConfigVersion:
          type: integer
          description: Version number, incremented on edit
          format: int32
        deleted:
          type: boolean
          description: Is this config marked as deleted?
          default: false
    ValidatedMethodConfiguration:
      required:
        - extraInputs
        - invalidInputs
        - invalidOutputs
        - methodConfiguration
        - missingInputs
        - validInputs
        - validOutputs
      type: object
      properties:
        validInputs:
          type: array
          items:
            type: string
        invalidInputs:
          type: object
          additionalProperties:
            type: object
            properties: {}
        missingInputs:
          type: array
          items:
            type: string
        extraInputs:
          type: array
          items:
            type: string
        validOutputs:
          type: array
          items:
            type: string
        invalidOutputs:
          type: object
          additionalProperties:
            type: object
            properties: {}
        methodConfiguration:
          $ref: '#/components/schemas/MethodConfiguration'
      description: Information about the validity of a method configuration's expressions
        relative to the method itself
    MethodResponse:
      required:
        - managers
        - name
        - namespace
        - snapshotId
      type: object
      properties:
        managers:
          type: array
          description: List of Owners.
          items:
            type: string
        namespace:
          type: string
          description: Namespace which contains AgoraEntity.
          default: YOUR_NAMESPACE
        name:
          type: string
          description: Name of the AgoraEntity.
          default: BWA
        snapshotId:
          type: integer
          description: SnapshotId of AgoraEntity
          format: int32
        snapshotComment:
          type: string
          description: Snapshot comment of AgoraEntity
          default: Improved spline reticulation
        synopsis:
          type: string
          description: Synopsis which contains AgoraEntity.
          default: Quickly aligns short nucleotide sequences.
        documentation:
          type: string
          description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.
          default: |
            BWA is a software package for mapping low-divergent sequences
            against a large reference genome, such as the human genome.
            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
        createDate:
          type: string
          description: Timestamp of creation
        url:
          type: string
          description: URL where resource can be accessed.
        payload:
          type: string
          description: Payload of method -- must be in WDL format. MUST BE REQUESTED
            EXPLICITLY.
          default: |
            task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}
        entityType:
          type: string
          description: Type of the AgoraEntity -- Task or Workflow.
          default: Task
    MethodQuery:
      type: object
      properties:
        namespace:
          type: string
          description: Namespace which contains AgoraEntity.
          default: YOUR_NAMESPACE
        name:
          type: string
          description: Name of the AgoraEntity.
          default: BWA
        synopsis:
          type: string
          description: Synopsis which contains AgoraEntity.
          default: Quickly aligns short nucleotide sequences.
        snapshotComment:
          type: string
          description: Snapshot comment of AgoraEntity
          default: Improved spline reticulation
        documentation:
          type: string
          description: Documentation of the AgoraEntity.
          default: |
            BWA is a software package for mapping low-divergent sequences
            against a large reference genome, such as the human genome.
            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
        payload:
          type: string
          description: Payload of method -- must be in WDL format
          default: |
            task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}
        entityType:
          type: string
          description: Type of the AgoraEntity -- Task or Workflow.
          default: Task
    MethodID:
      type: object
      properties:
        methodNamespace:
          type: string
          description: Method namespace
        methodName:
          type: string
          description: Method name
        methodVersion:
          type: integer
          description: Method version
          format: int32
          default: 0
    MethodIO:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/MethodInput'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/MethodOutput'
    MethodInput:
      type: object
      properties:
        inputType:
          type: string
        name:
          type: string
        optional:
          type: boolean
    MethodOutput:
      type: object
      properties:
        outputType:
          type: string
        name:
          type: string
    BillingProjectResponse:
      required:
        - projectName
        - invalidBillingAccount
        - roles
      type: object
      properties:
        projectName:
          type: string
          description: the name of the project
        billingAccount:
          type: string
          description: the billing account to use in google projects
        servicePerimeter:
          type: string
          description: the name of the service permeters for google project
        invalidBillingAccount:
          type: boolean
          description: whether or not the billing account is usable by Terra
        roles:
          type: array
          items:
            type: string
          description: the roles the caller has on the project
    UpdateRawlsBillingAccountRequest:
      required:
        - billingAccount
      type: object
      properties:
        billingAccount:
          type: string
          description: The name of the billing account to use
  parameters:
    workspaceNamespaceParam:
      name: workspaceNamespace
      in: path
      description: Workspace Namespace
      required: true
      schema:
        type: string
    workspaceNameParam:
      name: workspaceName
      in: path
      description: Workspace Name
      required: true
      schema:
        type: string
  securitySchemes:
    googleoauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
            https://www.googleapis.com/auth/devstorage.full_control: GCS storage
            https://www.googleapis.com/auth/cloud-billing: GCS billing
