---
swagger: '2.0'
x-aou-note: |
  This file is for endpoints we do NOT intend to generate client libraries for
  and advertise to notebook developers. Endpoints we DO want notebook developers to use should
  go in client_api.yaml.

  This file references parameters, paths, and definitions specified in
  client_api.yaml; the two files get merged together into a merged.yaml file at build time.

  If validation fails, gradle:generateWorkbenchApi fails claiming this file does not exist.

  For separate validation (with some false positives), do:
  ./project.rb validate-swagger
info:
  version: 0.1.0
  title: AllOfUs Workbench API
  description: |
    The API for the AllOfUs workbench.

    Throughout, we use integer/int64 in preference to string/date-time because Swagger's
    date formatting is inconsistent between server and client. Time values are stored as
    milliseconds since the UNIX epoch.

    Note: all requests tagged as "cron" must have the header X-Appengine-Cron:
    true, which app engine itself only sets when invoking as a cronjob.
    See https://cloud.google.com/appengine/docs/standard/java/config/cron#securing_urls_for_cron
    and o.p.w.interceptors.CronInterceptor which implements the header check.
  termsOfService: http://www.pmi-ops.org/terms_of_service.html
  contact:
    name: developer_help@pmi-ops.org
  license:
    name: BSD
host: api.pmi-ops.org
securityDefinitions:
  aou_oauth:
    x-aou-note: |
      Establish the fact that *some endpoints* are OAuth protected
      by defining an `aou_oauth` security mode, which we'll assigning
      to any protected endpoints below.

      TODO: Vet/fix this token and/or authorization URL to work in practice.
      These are currently included simply to satisfy the Swagger specification,
      as this is not directly used to dictate oauth details (just used to
      annotate which methods require oauth).

      The aou_auth entry under security (below) serves to establish the fact
      that all endpoints are protected: this annotation ensures that client
      libraries know to send bearer tokens when calling
    authorizationUrl: ''
    tokenUrl: ''
    type: oauth2
    flow: accessCode
schemes:
- https
produces:
- application/json
security:
- aou_oauth: []

# Define an alias before using it. We can get rid of it after migrating to Swagger 3.0 definition.
# See https://precisionmedicineinitiative.atlassian.net/browse/RW-8978

parameters:
  userId:
    in: path
    name: userId
    type: integer
    format: int64
    required: true
  conceptSetId:
    in: path
    name: conceptSetId
    type: integer
    format: int64
    required: true
    description: Concept set ID
  dataSetId:
    in: path
    name: dataSetId
    type: integer
    format: int64
    required: true
    description: Data set ID
  workspaceNamespace:
    in: path
    name: workspaceNamespace
    type: string
    description: The Workspace namespace
    required: true
  workspaceId:
    in: path
    name: workspaceId
    type: string
    description: The Workspace ID (a.k.a. the workspace's Firecloud name)
    required: true
  cohortId:
    in: path
    name: cohortId
    type: integer
    format: int64
    required: true
    description: Cohort ID
  cohortReviewId:
    in: path
    name: cohortReviewId
    type: integer
    format: int64
    required: true
    description: Cohort Review ID
  cdrVersionId:
    in: path
    name: cdrVersionId
    type: integer
    format: int64
    required: true
    description: specifies which cdr version
  participantId:
    in: path
    name: participantId
    type: integer
    format: int64
    required: true
    description: specifies which participant
paths:
  "/v1/status":
    get:
      tags:
      - status
      description: Returns the status of the various services and integrations
      operationId: getStatus
      security: []
      responses:
        200:
          description: A map of system name to status.
          schema:
            "$ref": "#/definitions/StatusResponse"
  "/v1/config":
    get:
      tags:
      - config
      description: Returns some server configuration data.
      operationId: getConfig
      security: []
      responses:
        200:
          description: Configuration data
          schema:
            "$ref": "#/definitions/ConfigResponse"
  "/v1/featured-workspace-config":
    get:
      tags:
      - featured-workspaces-config
      description: Returns the featured workspaces config
      operationId: getFeaturedWorkspacesConfig
      security: []
      responses:
        200:
          description: List of featured workspaces
          schema:
            "$ref": "#/definitions/FeaturedWorkspacesConfigResponse"
  "/v1/cdrVersionsByTier":
    get:
      tags:
        - cdrVersions
      description: >
        Returns all curated data repository (CDR) versions in all tiers
        that the user has access to
      operationId: getCdrVersionsByTier
      responses:
        200:
          description: A mapping of tiers to CDR versions.
          schema:
            "$ref": "#/definitions/CdrVersionTiersResponse"
  "/v1/status-alert":
    get:
      tags:
      - status-alert
      description: Returns status alert information if any exists.
      operationId: getStatusAlert
      responses:
        200:
          description: 'A status alert information object.'
          schema:
            "$ref": "#/definitions/StatusAlert"
    post:
      tags:
      - status-alert
      description: Pushes new status alert information to all users
      operationId: postStatusAlert
      parameters:
      - in: body
        name: statusAlert
        description: the new status alert to use
        schema:
          "$ref": "#/definitions/StatusAlert"
      responses:
        200:
          description: 'A status alert information object.'
          schema:
            "$ref": "#/definitions/StatusAlert"
  "/v1/profile":
    get:
      tags:
      - profile
      description: Returns the user's profile information
      operationId: getMe
      responses:
        200:
          description: The user's profile.
          schema:
            "$ref": "#/definitions/Profile"
    patch:
      tags:
      - profile
      consumes:
      - application/json
      description: Updates a users profile
      operationId: updateProfile
      parameters:
      - in: body
        name: updatedProfile
        description: the new profile to use
        schema:
          "$ref": "#/definitions/Profile"
      responses:
        204:
          description: Request received.
        400:
          description: Bad request
          schema:
            "$ref": "#/definitions/ErrorResponse"
    delete:
      tags:
      - profile
      description: Deletes the user's profile and gsuite account, does not clean up
        in firecloud.
      operationId: deleteProfile
      responses:
        204:
          description: Request Received.

  "/v1/getUserTermsOfServiceStatus":
    get:
      tags:
        - profile
      description: Returns if the logged in user has accepted the latest versions of the All of Us and Terra Terms of Service agreements
      operationId: getUserTermsOfServiceStatus
      responses:
        200:
          description: Returns true if user has accepted latest versions of the All of Us and Terra Terms of Service agreements
          schema:
            type: boolean

  "/v1/signOut":
    post:
      tags:
        - user
      description: SignOut user's gsuite account
      operationId: signOut
      responses:
        204:
          description: User signout success

  "/v1/acceptTermsOfService":
    post:
      tags:
        - profile
      description: User accepts current version of Terra and specific version Of All of Us Terms of Service
      operationId: acceptTermsOfService
      parameters:
      - in: query
        name: termsOfServiceVersion
        type: integer
        format: int32
        description: 'Version of the All of Us TOS that the user has acknowledged'
      responses:
        204:
          description: User has accepted AOU and Terra Terms of service.

  "/v1/confirmProfile":
    post:
      tags:
        - profile
      description: Used by users to confirm that their profile is up to date, as part of the
        annual renewal compliance process.
      operationId: confirmProfile
      responses:
        204:
          description: Profile Confirmed.
  "/v1/confirmPublications":
    post:
      tags:
        - profile
      description: Used by users to confirm that they have either reported any AoU-related
        publications, or they have none.
      operationId: confirmPublications
      responses:
        204:
          description: Publications Confirmed.
  "/v1/is-username-taken":
    get:
      tags:
      - profile
      description: Checks to see if the given username is not available.
      operationId: isUsernameTaken
      security: []
      parameters:
      - in: query
        name: username
        type: string
        required: true
      responses:
        200:
          description: The answer.
          schema:
            "$ref": "#/definitions/UsernameTakenResponse"
  "/v1/update-contact-email":
    post:
      tags:
      - profile
      consumes:
      - application/json
      description: Only for accounts that have not logged in yet, update contact email.
      operationId: updateContactEmail
      security: []
      parameters:
      - in: body
        name: updateContactEmailRequest
        schema:
          "$ref": "#/definitions/UpdateContactEmailRequest"
      responses:
        200:
          description: Contact Email Updated
        400:
          description: Invalid contact email address
        403:
          description: Unable to process this request
        500:
          description: Internal Server Error
  "/v1/resend-welcome-email":
    post:
      tags:
      - profile
      consumes:
      - application/json
      description: Resend welcome email
      operationId: resendWelcomeEmail
      security: []
      parameters:
      - in: body
        name: resendWelcomeEmail
        schema:
          "$ref": "#/definitions/ResendWelcomeEmailRequest"
      responses:
        200:
          description: Welcome Email sent.
        500:
          description: Internal Server Error
  "/v1/send-billing-setup-email":
    post:
      tags:
        - profile
      consumes:
        - application/json
      description: Send billing setup email to GCP partner
      operationId: sendBillingSetupEmail
      parameters:
        - in: body
          name: sendBillingSetupEmail
          schema:
            "$ref": "#/definitions/SendBillingSetupEmailRequest"
      responses:
        200:
          description: Billing setup email sent.
        403:
          description: Forbidden
        500:
          description: Internal Server Error
  "/v1/google-account":
    post:
      tags:
      - profile
      consumes:
      - application/json
      description: Creates an account in the researchallofus.org domain.
      operationId: createAccount
      security: []
      parameters:
      - in: body
        name: createAccountRequest
        schema:
          "$ref": "#/definitions/CreateAccountRequest"
      responses:
        200:
          description: Account created successfully.
          schema:
            "$ref": "#/definitions/Profile"
        400:
          description: Error occurred while creating account.
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/update-nih-token":
    post:
      tags:
      - profile
      consumes:
      - application/json
      description: Updates a users NIH token
      operationId: updateNihToken
      parameters:
      - in: body
        name: token
        description: the token retrieved from NIH
        schema:
          "$ref": "#/definitions/NihToken"
      responses:
        200:
          description: The user's updated profile.
          schema:
            "$ref": "#/definitions/Profile"
        400:
          description: Bad request
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/user/link-ras-account":
    post:
      tags:
      - profile
      consumes:
      - application/json
      description: Link user with a RAS account
      operationId: linkRasAccount
      parameters:
      - in: body
        name: rasLinkRequestBody
        description: The authorization code from RAS.
        schema:
          "$ref": "#/definitions/RasLinkRequestBody"
      responses:
        200:
          description: The user's account linking information.
          schema:
            "$ref": "#/definitions/Profile"
        400:
          description: Bad request
          schema:
            "$ref": "#/definitions/ErrorResponse"
        403:
          description: Forbidden
          schema:
            "$ref": "#/definitions/ErrorResponse"
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/page-visits":
    post:
      tags:
      - profile
      consumes:
      - application/json
      description: Updates a users page visits
      operationId: updatePageVisits
      parameters:
      - in: body
        name: pageVisit
        description: the users pageVisits
        schema:
          "$ref": "#/definitions/PageVisit"
      responses:
        200:
          description: The user's profile.
          schema:
            "$ref": "#/definitions/Profile"
        400:
          description: Bad request
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/account/submit-data-user-code-of-conduct":
    post:
      tags:
        - profile
      description: Submits consent to the Data User Code of Conduct for researchers.
      operationId: submitDUCC
      parameters:
        - in: query
          name: duccSignedVersion
          description: Version \# of the Data User Code of Conduct that was signed.
          type: integer
          required: true
        - in: query
          name: initials
          description: Initials of the user on the form.
          type: string
          required: true
      responses:
        200:
          description: The user's profile.
          schema:
            "$ref": "#/definitions/Profile"
  "/v1/account/sync-training-status":
    post:
      tags:
      - profile
      summary: Sync compliance training status
      description: Retrieves moodleId(either from DB or call from Moodle API) and
        gets Training status on the basis of that
      operationId: syncComplianceTrainingStatus
      responses:
        200:
          description: The user's profile.
          schema:
            "$ref": "#/definitions/Profile"
        404:
          description: User not found
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/account/sync-era-commons-status":
    post:
      tags:
      - profile
      summary: Sync eRA Commons status
      description: Retrieves and stores the current user's NIH / eRA Commons linkage
        status, fetched via the FireCloud API.
      operationId: syncEraCommonsStatus
      responses:
        200:
          description: The user's profile.
          schema:
            "$ref": "#/definitions/Profile"
        404:
          description: User not found
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/account/sync-two-factor-auth-status":
    post:
      tags:
      - profile
      summary: Sync two factor auth status
      description: Syncs a user's 2FA status from google
      operationId: syncTwoFactorAuthStatus
      responses:
        200:
          description: The user's profile.
          schema:
            "$ref": "#/definitions/Profile"
        404:
          description: User not found
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/auth-domain/{groupName}":
    post:
      tags:
      - authDomain
      description: This endpoint will create the registered auth domain.
      operationId: createAuthDomain
      parameters:
      - in: path
        name: groupName
        description: groupName
        required: true
        type: string
      responses:
        200:
          description: Successfully created auth domain
          schema:
            "$ref": "#/definitions/AuthDomainCreatedResponse"
  "/v1/userSearch/{accessTierShortName}/{term}":
    get:
      tags:
        - user
      description: >
        Return a page of users matching a search term and an access tier.
        Used by autocomplete for workspace sharing.
      operationId: userSearch
      responses:
        200:
          description: The user information matching supplied search terms
          schema:
            "$ref": "#/definitions/UserResponse"
      parameters:
        - in: path
          name: accessTierShortName
          description: The shortName corresponding to an access tier to search in. Requesting user
            must also be a member of this tier.
          required: true
          type: string
        - in: path
          name: term
          description: String to find in user's name or email address. Search is a case-insensitive
            substring match.
          required: true
          type: string
        - in: query
          name: pageToken
          description: 'Pagination token retrieved from a previous call to user; used
         for retrieving additional pages of results.'
          type: string
          required: false
        - in: query
          name: pageSize
          description: 'Maximum number of results to return in a response. Defaults
         to 10.'
          type: integer
          required: false
        - in: query
          name: sortOrder
          description: Sort order, either 'asc' or 'desc'. Defaults to 'asc' on the
            user's email.
          type: string
          required: false
  "/v1/user/billingAccounts":
    get:
      tags:
      - user
      description: Returns a list of billing accounts the caller can set a workspace's
        billing account to
      operationId: listBillingAccounts
      responses:
        200:
          description: List of billing accounts
          schema:
            "$ref": "#/definitions/WorkbenchListBillingAccountsResponse"
  "/v1/admin/security/workspaces/{workspaceNamespace}/delete-runtimes":
    post:
      summary: Delete specified (or all if no specified list) runtimes in given workspace namespace.
      description: 'An admin gated endpoint that deletes given runtimes in a given
        workspaace.'
      operationId: deleteRuntimesInWorkspace
      tags:
        - workspaceAdmin
      parameters:
        - in: path
          name: workspaceNamespace
          description: The workspace's workspace namespace.
            the runtimes
          required: true
          type: string
        - in: body
          name: runtimesToDelete
          description: A list of names of runtimes to delete. To delete all runtimes,
            use an empty object, without providing a list property at all (e.g., {})
            An empty list will delete no runtimes.
          required: true
          schema:
            "$ref": "#/definitions/ListRuntimeDeleteRequest"
      responses:
        200:
          description: Runtimes deleted
          schema:
            type: array
            items:
              "$ref": "#/definitions/ListRuntimeResponse"
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/runtimes/{workspaceNamespace}":
    get:
      summary: Get the user's workspace runtime.
      description: "Returns the current user's runtime, if any, which has been created
        for the given workspace."
      operationId: getRuntime
      tags:
      - runtime
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      responses:
        200:
          description: The runtime for this user and workspace.
          schema:
            "$ref": "#/definitions/Runtime"
        404:
          description: No runtime exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    post:
      summary: Create a workspace runtime.
      description: |
        Creates a new runtime for the current user in the given billing project. If a runtime already exists for the user in this billing project, a 409 conflict error is returned (even if the runtime is still initializing or is not in a ready state).
        TODO(RW-3697): Custom runtime creation params should be added as a body param here.
      operationId: createRuntime
      tags:
      - runtime
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - in: body
        name: runtime
        description: notebooks runtime definition
        required: true
        schema:
          "$ref": "#/definitions/Runtime"
      responses:
        200:
          description: Runtime was created successfully
          schema:
            "$ref": "#/definitions/EmptyResponse"
        409:
          description: A runtime for this user and workspace already exists.
          schema:
            "$ref": "#/definitions/EmptyResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    patch:
      summary: Updates the configuration of a runtime
      description: In order to update the configuration of a runtime, it must first be running or paused
      operationId: updateRuntime
      tags:
      - runtime
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: body
          name: runtime
          schema:
            "$ref": "#/definitions/UpdateRuntimeRequest"
      responses:
        202:
          description: Runtime update request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"
        400:
          description: Bad Request
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        500:
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
    delete:
      summary: Delete a workspace runtime.
      description: 'TODO(RW-3695): updateRuntime should be added as a PATCH endpoint
        here.'
      operationId: deleteRuntime
      tags:
      - runtime
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - in: query
        name: deleteDisk
        description: Whether or not disk should be deleted if the runtime is using persistent disk. Default to false if not specified
        required: false
        type: boolean
        default: false
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/EmptyResponse"
        404:
          description: No runtime exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/runtimes/{workspaceNamespace}/localize":
    post:
      summary: Localize files to the user's runtime.
      description: 'Localizes files to the runtime for the current user and given
        workspace. As a side-effect, JSON workspace environment files will also be
        localized to the runtime.'
      operationId: localize
      tags:
      - runtime
      consumes:
      - application/json
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - in: body
        name: body
        description: Localization request.
        schema:
          "$ref": "#/definitions/RuntimeLocalizeRequest"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/RuntimeLocalizeResponse"
        404:
          description: Runtime or Workspace not found
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"

  "/v1/workspaces/{workspaceNamespace}/apps":
    get:
      summary: List apps in workspace
      description: List apps the caller has access to, in given workspaces
      operationId: listAppsInWorkspace
      tags:
        - apps
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
      responses:
        "200":
          description: List of apps
          schema:
            "$ref": "#/definitions/ListAppsResponse"
        404:
          description: No app exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    post:
      summary: Create a workspace APP.
      description: |
        Creates a new app request is received the current user in the given workspace. If a app already exists for the user in this billing project, a 409 conflict error is returned (even if the app is still initializing or is not in a ready state).
      operationId: createApp
      tags:
        - apps
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: body
          name: app
          description: APP definition
          required: true
          schema:
            "$ref": "#/definitions/CreateAppRequest"
      responses:
        200:
          description: App was created successfully
          schema:
            "$ref": "#/definitions/EmptyResponse"
        404:
          description: The specified workspace was not found.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        409:
          description: A app for this user and workspace already exists.
          schema:
            "$ref": "#/definitions/EmptyResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"

  "/v1/workspaces/{workspaceNamespace}/apps/{appName}":
    get:
      summary: Get the user's app by name in a workspace.
      description: "Returns the current user's app by name in a workspace if exists."
      operationId: getApp
      tags:
        - apps
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: path
          name: appName
          description: The name of app.
          required: true
          type: string
      responses:
        200:
          description: The app for this user and workspace.
          schema:
            "$ref": "#/definitions/App"
        404:
          description: No app exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    patch:
      summary: Updates the configuration of a app
      description: In order to update the configuration of a app, it must first be running or paused
      operationId: updateApp
      tags:
        - apps
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: path
          name: appName
          description: The name of app.
          required: true
          type: string
        - in: body
          name: app
          schema:
            "$ref": "#/definitions/App"
      responses:
        202:
          description: App update request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"
        400:
          description: Bad Request
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        500:
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
    delete:
      summary: Delete a workspace app.
      operationId: deleteApp
      tags:
        - apps
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: path
          name: appName
          description: The name of app.
          required: true
          type: string
        - in: query
          name: deleteDisk
          description: Whether or not disk should be deleted if the app is using persistent disk. Default to false if not specified
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/EmptyResponse"
        404:
          description: No app exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
        412:
          description: Compute is temporarily suspended for security reasons.
          schema:
            "$ref": "#/definitions/ErrorResponse"

  "/v1/workspaces/{workspaceNamespace}/disks":
    get:
      summary: Lists persistent disks in the user's workspace. Only disks in READY/CREATING/RESTORING state will be returned.
      operationId: listDisksInWorkspace
      tags:
        - disks
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
      responses:
        200:
          description: The persistent disk for this user and workspace.
          schema:
            "$ref": "#/definitions/ListDisksResponse"
        404:
          description: No persistent disk exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"

  "/v1/workspaces/{workspaceNamespace}/disks/{diskName}":
    get:
      summary: Get the user's workspace persistent disk by name.
      operationId: getDisk
      tags:
        - disks
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: path
          name: diskName
          description: diskName
          type: string
          required: true
      responses:
        200:
          description: The persistent disk for this user and workspace.
          schema:
            "$ref": "#/definitions/Disk"
        404:
          description: No persistent disk exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    delete:
      summary: Delete a persistent disk.
      description: Delete the current user's latest created persistent disk
      operationId: deleteDisk
      tags:
        - disks
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: path
          name: diskName
          description: diskName
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/EmptyResponse"
        404:
          description: No persistent disk exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    patch:
      summary: Updates the configuration of a persistent disk
      description: In order to update the configuration of a persistent disk, it must first be ready
      operationId: updateDisk
      tags:
        - disks
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: path
          name: diskName
          description: diskName
          type: string
          required: true
        - in: query
          name: diskSize
          type: integer
          description: Update disk disk Size
          required: true
      responses:
        "200":
          description: Persistent disk update request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"
        "404":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"

  "/v1/disks/{workspaceNamespace}":
    get:
      summary: Get the user's workspace persistent disk.
      description: Returns the current user's latest created persistent disk, if any, which has been created
        for the given workspace.
      operationId: getDisk
      tags:
        - disk
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
      responses:
        200:
          description: The persistent disk for this user and workspace.
          schema:
            "$ref": "#/definitions/Disk"
        404:
          description: No persistent disk exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    delete:
      summary: Delete a persistent disk.
      description: Delete the current user's latest created persistent disk
      operationId: deleteDisk
      tags:
        - disk
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: query
          name: diskName
          description: diskName
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/EmptyResponse"
        404:
          description: No persistent disk exists for this user and workspace.
          schema:
            "$ref": "#/definitions/ErrorResponse"
    patch:
      summary: Updates the configuration of a persistent disk
      description: In order to update the configuration of a persistent disk, it must first be ready
      operationId: updateDisk
      tags:
        - disk
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - in: query
          name: diskName
          description: diskName
          type: string
          required: true
        - in: query
          name: diskSize
          type: integer
          description: Update disk disk Size
          required: true
      responses:
        "200":
          description: Persistent disk update request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"
        "404":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"

  "/v1/workspaces":
    get:
      tags:
      - workspaces
      description: Returns all workspaces that a user has access to
      operationId: getWorkspaces
      responses:
        200:
          description: A list of workspace definitions.
          schema:
            "$ref": "#/definitions/WorkspaceResponseListResponse"
    post:
      tags:
      - workspaces
      consumes:
      - application/json
      description: Creates a workspace
      operationId: createWorkspace
      parameters:
      - in: body
        name: workspace
        description: workspace definition
        schema:
          "$ref": "#/definitions/Workspace"
      responses:
        200:
          description: The workspace that was created.
          schema:
            "$ref": "#/definitions/Workspace"
  "/v1/workspaces/createAsync":
    post:
      tags:
      - workspaces
      consumes:
      - application/json
      description: Creates a workspace asynchronously
      operationId: createWorkspaceAsync
      parameters:
      - in: body
        name: workspace
        description: workspace definition
        schema:
          "$ref": "#/definitions/Workspace"
      responses:
        200:
          description: The workspace has been scheduled for creation.
          schema:
            "$ref": "#/definitions/WorkspaceOperation"
  "/v1/workspaces/operations/{id}":
    parameters:
    - in: path
      name: id
      type: integer
      format: int64
      description: The workspace operation ID
      required: true
    get:
      tags:
      - workspaces
      description: Returns a workspace operation, only accessible to the creator of the operation.
      operationId: getWorkspaceOperation
      responses:
        200:
          description: The asynchronous workspace operation.
          schema:
            "$ref": "#/definitions/WorkspaceOperation"
  "/v1/workspaces/published":
    get:
      tags:
      - workspaces
      description: Returns a list of published workspaces
      operationId: getPublishedWorkspaces
      responses:
        200:
          description: A list of workspace definitions.
          schema:
            "$ref": "#/definitions/WorkspaceResponseListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/isNotebookTransferComplete":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - workspaces
      description: Checks if the notebooks have been copied to the workspace
      operationId: notebookTransferComplete
      responses:
        200:
          description: Returns true if the notebooks have been copied to the workspace
          schema:
            type: boolean
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - workspaces
      description: Returns the workspace definition with the specified ID and namespace
      operationId: getWorkspace
      responses:
        200:
          description: A workspace response containing workspace and access level
          schema:
            "$ref": "#/definitions/WorkspaceResponse"
        403:
          description: User doesnt have access to the workspace's access tier
          schema:
            "$ref": "#/definitions/ErrorResponse"
    patch:
      tags:
      - workspaces
      consumes:
      - application/json
      description: 'Modifies the workspace definition with the specified ID and namespace;
        fields that are omitted will not be modified'
      operationId: updateWorkspace
      parameters:
      - in: body
        name: workspace
        description: workspace definition
        schema:
          "$ref": "#/definitions/UpdateWorkspaceRequest"
      responses:
        200:
          description: The updated workspace definition
          schema:
            "$ref": "#/definitions/Workspace"
    delete:
      tags:
      - workspaces
      description: Deletes the workspace definition with the specified ID and namespace
      operationId: deleteWorkspace
      responses:
        202:
          description: Workspace deletion request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"

  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/markResearchPurposeReviewed":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - workspaces
      description: Mark workspace owner has reviewed research purpose
      operationId: markResearchPurposeReviewed
      responses:
        200:
          description: The billing usage for a workspace
          schema:
            "$ref": "#/definitions/Workspace"

  "/v2/workspaces/{workspaceNamespace}/{workspaceId}/resources":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      parameters:
        - in: query
          name: resourceTypesToFetch
          description: Types of workspace resources to fetch. Currently only supports
            Cohorts, Cohort Reviews, Concept Sets, and Datasets
          type: array
          items:
            type: string
      tags:
      - workspaces
      description: Gets a user defined selection of objects contained within a workspace
      operationId: getWorkspaceResourcesV2
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/WorkspaceResourceResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/billing-usage":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - workspaces
      description: Gets the free tier billing spend for a specified workspace
      operationId: getBillingUsage
      responses:
        200:
          description: The billing usage for a workspace
          schema:
            "$ref":
              "#/definitions/WorkspaceBillingUsageResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/creator-free-credits-remaining":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - workspaces
      description: Gets the free credits remaining for the creator of a specified workspace
      operationId: getWorkspaceCreatorFreeCreditsRemaining
      responses:
        200:
          description: The free credits remaining for the creator of a workspace
          schema:
            "$ref":
              "#/definitions/WorkspaceCreatorFreeCreditsRemainingResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/share":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    patch:
      tags:
        - workspaces
      consumes:
        - application/json
      description: 'Shares/unshares a workspace with the given users and permissions. Use the
        WorkspaceAccessLevel enum value "NO ACCESS" to unshare.  All existing users and roles
        who are not specified in this request are not affected.'
      operationId: shareWorkspacePatch
      parameters:
        - in: body
          name: body
          description: users to share/unshare the workspace with
          schema:
            "$ref": "#/definitions/ShareWorkspaceRequest"
      responses:
        200:
          description: Successful share response
          schema:
            "$ref": "#/definitions/WorkspaceUserRolesResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/duplicate":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - workspaces
      consumes:
      - application/json
      description: |
        Duplicate an existing workspace, with given modifications to workspace metadata. Caller will own the newly duplicated workspace, and must have read access to the source workspace. In addition to workspace metadata, the following will also be duplicated:
          - the associated Firecloud workspace
          - cohorts, along with reviews and annotations
          - notebooks located in the default notebook directory for this workspace
      operationId: cloneWorkspace
      parameters:
      - in: body
        name: body
        schema:
          "$ref": "#/definitions/CloneWorkspaceRequest"
      responses:
        200:
          description: Successful duplicate response
          schema:
            "$ref": "#/definitions/CloneWorkspaceResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/duplicateAsync":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - workspaces
      consumes:
      - application/json
      description: |
        Asynchronously duplicate an existing workspace. Semantics otherwise match cloneWorkspace.
      operationId: duplicateWorkspaceAsync
      parameters:
      - in: body
        name: body
        schema:
          "$ref": "#/definitions/CloneWorkspaceRequest"
      responses:
        200:
          description: Successful duplicate response
          schema:
            "$ref": "#/definitions/WorkspaceOperation"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/userRoles":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - workspaces
      description: Returns the user roles for all collaborators on a workspace
      operationId: getFirecloudWorkspaceUserRoles
      responses:
        200:
          description: A list of workspace collaborators
          schema:
            "$ref": "#/definitions/WorkspaceUserRolesResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/publish":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - workspaceAdmin
      description: 'Makes a workspace public to all AoU registered users. Requires
        FEATURED_WORKSPACE_ADMIN authority.'
      operationId: publishWorkspace
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/unpublish":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - workspaceAdmin
      description: 'Makes a workspace public to all AoU registered users. Requires
        FEATURED_WORKSPACE_ADMIN authority.'
      operationId: unpublishWorkspace
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/admin/workspaces/{workspaceNamespace}/audit":
    get:
      tags:
        - workspaceAdmin
      description: >
        Fetch audit logs involving this workspace as either a subject or object. Requires the
        RESEARCHER_DATA_VIEW authority.
      operationId: getAuditLogEntries
      parameters:
        - name: workspaceNamespace
          in: path
          type: string
          required: true
          description: >
            Firecloud Namespace for the AoU workspace to be queried.
        - name: limit
          in: query
          type: integer
          required: false
          default: 100
          description: >
            Maximum number of entries to return, sorted by timestamp descending.
        - name: after
          description: >
            Earliest time matched by the query (inclusive). Epoch millis.

            Note that while Swagger allows a date-time formatted string query parameter,
            it appears Spring doesn't handle that well today. It gives the error message described
            at https://github.com/swagger-api/swagger-codegen/issues/4113.
          in: query
          type: integer
          format: int64
          required: false
          default: 0
        - name: before
          description: >
             Upper bound on timestamp of most recent result (exclusive). Specified as milliseconds
             since Epoch (though declared as a string). Defaults to current timestamp.
          in: query
          type: integer
          format: int64
          required: false
      responses:
        200:
          description: >
            List of rows matching the query result. queryMetadata contains
            the workspaceDatabaaseId (for post-processing) as well as the query actually
            executed (as a starting point for exploring manually in BigQuery).
          schema:
            "$ref": "#/definitions/WorkspaceAuditLogQueryResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebook-list":
    get:
      summary: Get details of Python files from google Bucket directory notebook
      description: 'Returns list of name and path of python files from google bucket,
        directory notebook.'
      operationId: getNoteBookList
      tags:
      - notebooks
      parameters:
      - in: path
        name: workspaceNamespace
        description: workspaceNamespace
        required: true
        type: string
      - in: path
        name: workspaceId
        description: workspaceId
        required: true
        type: string
      responses:
        200:
          description: List of files
          schema:
            type: array
            items:
              "$ref": "#/definitions/FileDetail"
        404:
          description: Workspace not found
          schema:
            "$ref": "#/definitions/ErrorResponse"
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/unsafe-self-bypass-access-requirements":
    post:
      tags:
        - userAdmin
      description: 'Updates the given user to bypass all access requirements'
      operationId: unsafeSelfBypassAccessRequirements
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/EmptyResponse"
        403:
          description: Self bypass is disallowed in this environment
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/users/{usernameWithoutGsuiteDomain}/audit":
    get:
      tags:
        - userAdmin
      description: >
        Fetch audit logs involving this user as either a subject or object. Requires the
        RESEARCHER_DATA_VIEW authority.
      operationId: getAuditLogEntries
      parameters:
        - name: usernameWithoutGsuiteDomain
          in: path
          type: string
          required: true
          description: >
            Username of user, not including the environment-specific domain, e.g.
            "@fake-research-aou.org".
        - name: limit
          in: query
          type: integer
          required: false
          default: 100
          description: >
            Maximum number of entries to return, sorted by timestamp descending. This entry count
            also determines (in a less predictable way) how many bundled actions are in the
            response.
        - name: after
          description: >
            Earliest time matched by the query (inclusive). Epoch millis.

            Note that while Swagger allows a date-time formatted string query parameter,
            it appears Spring doesn't handle that well today. It gives the error message described
            at https://github.com/swagger-api/swagger-codegen/issues/4113.
          in: query
          type: integer
          format: int64
          required: false
          default: 0
        - name: before
          description: >
            Upper bound on timestamp of most recent result (exclusive). Specified as milliseconds
            since Epoch (though declared as a string). Defaults to current timestamp.
          in: query
          type: integer
          format: int64
          required: false
      responses:
        200:
          description: >
            List of rows matching the query result. queryMetadata contains
            the workspaceDatabaaseId (for post-processing) as well as the query actually
            executed (as a starting point for exploring manually in BigQuery).
          schema:
            "$ref": "#/definitions/UserAuditLogQueryResponse"
  "/v1/admin/users/updateAccount":
    post:
      tags:
        - userAdmin
      consumes:
        - application/json
      description: 'Updates a subset of a user''s account metadata, as defined by the AccountPropertyUpdate object.  Requires ACCESS_CONTROL_ADMIN authority.'
      parameters:
        - in: body
          name: request
          description: The admin edit request to perform on a user
          schema:
            "$ref": "#/definitions/AccountPropertyUpdate"
      operationId: updateAccountProperties
      responses:
        200:
          description: 'The user''s updated profile'
          schema:
            "$ref": "#/definitions/Profile"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            "$ref": "#/definitions/ErrorResponse"
        404:
          description: User associated with request could not be found
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/users/getUserByUsername":
    get:
      tags:
        - userAdmin
      description: 'Returns a user''s profile for review. Requires ACCESS_CONTROL_ADMIN authority.'
      parameters:
        - in: query
          name: username
          type: string
          required: true
      operationId: getUserByUsername
      responses:
        200:
          description: A user's profile
          schema:
            "$ref": "#/definitions/Profile"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/users/list":
    get:
      tags:
      - userAdmin
      description: 'Returns a list of profiles for users to be reviewed. Requires
        ACCESS_CONTROL_ADMIN authority.'
      operationId: getAllUsers
      responses:
        200:
          description: A list of users
          schema:
            "$ref": "#/definitions/AdminUserListResponse"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/users/batchSyncAccess":
    post:
      tags:
        - userAdmin
      consumes:
        - application/json
      description: 'Batch sync user access modules, asynchronously. This is a work around until SAM
      supports batch update. See https://broadworkbench.atlassian.net/browse/CA-1504'
      parameters:
        - in: body
          name: request
          schema:
            "$ref": "#/definitions/BatchSyncAccessRequest"
      operationId: batchSyncAccess
      responses:
        200:
          description: 'The user''s updated profile'
          schema:
            "$ref": "#/definitions/BatchSyncAccessResponse"
        403:
          description: User doesn't have the ACCESS_CONTROL_ADMIN authority
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/workspaces/{workspaceNamespace}/locked":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
    post:
      tags:
        - workspaceAdmin
      consumes:
        - application/json
      description: Set admin locked state for the workspace
      operationId: setAdminLockedState
      parameters:
        - in: body
          name: AdminLockingRequest
          required: true
          schema:
            type: object
            required:
              - requestReason
              - requestDateInMillis
            properties:
              requestReason:
                type: string
              requestDateInMillis:
                type: integer
                format: int64
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/EmptyResponse"
        400:
          description: Bad request
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/workspaces/{workspaceNamespace}/unlocked":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
    post:
      tags:
        - workspaceAdmin
      description: Set admin unlocked state for the workspace
      operationId: setAdminUnlockedState
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/EmptyResponse"

  "/v1/admin/workspaces/{workspaceNamespace}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    get:
      tags:
      - workspaceAdmin
      description: 'Given a workspace namespace (Google Cloud Platform  Project ID),
        returns workspace details. Requires the RESEARCHER_DATA_VIEW authority.'
      operationId: getWorkspaceAdminView
      responses:
        200:
          description: Federated details about the workspace.
          schema:
            "$ref": "#/definitions/WorkspaceAdminView"
        404:
          description: Workspace not found for namespace
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/admin/workspaces/{workspaceNamespace}/cloudStorageTraffic":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    get:
      tags:
      - workspaceAdmin
      description: 'Returns a time series of cloud storage traffic for the given project.
        Requires the RESEARCHER_DATA_VIEW authority.'
      operationId: getCloudStorageTraffic
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/CloudStorageTraffic"
  "/v1/admin/workspaces/{workspaceNamespace}/notebooks/{notebookName}/readonly":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
    post:
      tags:
        - workspaceAdmin
      description: Get the HTML for a read only view of the notebook. RESEARCHER_DATA_VIEW authority required.
      operationId: adminReadOnlyNotebook
      parameters:
      - in: path
        name: notebookName
        required: true
        type: string
      - in: body
        name: accessReason
        required: true
        schema:
          "$ref": "#/definitions/AccessReason"
      responses:
        200:
          description: HTML Read Only version of the notebook
          schema:
            "$ref": "#/definitions/ReadOnlyNotebookResponse"
  "/v1/admin/workspaces/{workspaceNamespace}/files":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
    get:
      tags:
        - workspaceAdmin
      description: >
        Get a list of files corresponding to the storage objects associated with the Workspace.
        RESEARCHER_DATA_VIEW authority required.
      operationId: listFiles
      responses:
        200:
          description: List of files in this Workspace's storage bucket
          schema:
            type: array
            items:
              "$ref": "#/definitions/FileDetail"

  "/v1/admin/egressEvents":
    post:
      tags:
        - egressEventsAdmin
      description: >
        Administrative API to receive a paginated list of egress events. Optionally
        filtered by different criteria.
      operationId: listEgressEvents
      parameters:
        - in: body
          name: request
          schema:
            "$ref": "#/definitions/ListEgressEventsRequest"
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/ListEgressEventsResponse"
  "/v1/admin/egressEvents/{id}":
    patch:
      tags:
        - egressEventsAdmin
      description: >
        Administrative API to update an egress event. Currently, only the
        following fields can be updated - all other fields are ignored:
          - status (REMEDIATED or VERIFIED_FALSE_POSITIVE)
      operationId: updateEgressEvent
      parameters:
        - in: path
          name: id
          description: The egress event ID
          required: true
          type: string
        - in: body
          name: request
          schema:
            "$ref": "#/definitions/UpdateEgressEventRequest"
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/EgressEvent"
  "/v1/admin/egressEvents/{id}/audit":
    post:
      tags:
        - egressEventsAdmin
      description: >
        Administrative API to get audit details for an egress event.
      operationId: auditEgressEvent
      parameters:
        - in: path
          name: id
          description: The egress event ID
          required: true
          type: string
        - in: body
          description: Empty request object included for future extension.
          name: request
          schema:
            "$ref": "#/definitions/AuditEgressEventRequest"
      responses:
        200:
          description: success
          schema:
            "$ref": "#/definitions/AuditEgressEventResponse"
  "/v1/admin/sumo/egressEvent":
    post:
      tags:
      - sumoLogic
      description: 'Registers an egress event detected by SumoLogic with the Workbench.
        Forwards the event to Stackdriver for recording and potential alerting.'
      operationId: logEgressEvent
      security: []
      parameters:
      - in: body
        name: request
        description: Egress event request
        schema:
          "$ref": "#/definitions/SumologicEgressEventRequest"
      - in: header
        name: X-API-KEY
        description: 'Semi-secret API key sent by SumoLogic. This will be checked
          against the set of valid API keys stored in the per-environment credentials
          bucket.'
        required: true
        type: string
      responses:
        204:
          description: The egress event was successfully handled.
  "/v1/cron/checkRuntimes":
    get:
      security: []
      tags:
      - offlineRuntime
      - cron
      description: 'Endpoint meant to be called offline to trigger runtime checks
        and cleanup. Enforces upgrades for older runtime deployments. May be slow
        to execute. Only executable via App Engine cronjob.'
      operationId: checkRuntimes
      responses:
        204:
          description: Runtimes were checked and handled successfully.
  "/v1/cron/checkPersistentDisks":
    get:
      security: []
      tags:
      - offlineRuntime
      - cron
      description: 'Endpoint meant to be called offline to check for old / detached persistent disks.
        Notifies workspace owners at configurable intervals about old disks. Only executable via App Engine cronjob.
        Note: rerunning this out of band may result in the sending of duplicate emails.'
      operationId: checkPersistentDisks
      responses:
        204:
          description: Disks were checked and handled successfully.
  "/v1/cron/bulkAuditProjectAccess":
    get:
      security: []
      tags:
      - offlineUser
      - cron
      description: Audits project access for all users
      operationId: bulkAuditProjectAccess
      responses:
        204:
          description: All users' project access were audited.
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/exportToRdr":
    get:
      security: []
      tags:
      - offlineRdrExport
      - cron
      description: Send workbench data to RDR
      operationId: exportData
      responses:
        204:
          description: All modified/created workspaces and users were exported
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/checkFreeTierBillingUsage":
    get:
      security: []
      tags:
      - offlineBilling
      - cron
      description: Find and alert users that have exceeded their free tier billing
        usage
      operationId: checkFreeTierBillingUsage
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/synchronizeUserAccess":
    get:
      security: []
      tags:
      - offlineUser
      - cron
      description: Check each user to ensure they still meet compliance guidelines. If they do not, remove them from access tiers.
      operationId: synchronizeUserAccess
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/sendAccessExpirationEmails":
    get:
      security: []
      tags:
        - offlineUser
        - cron
      description: Check each user daily for access expiration (or approaching expiration) and
        send expiration or warning emails as appropriate.
      operationId: sendAccessExpirationEmails
      responses:
        204:
          description: No Error
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/monitoring/updateGaugeMetrics":
    get:
      tags:
      - offlineMonitoring
      - cron
      description: Trigger recording of all gauge metrics
      operationId: updateGaugeMetrics
      security: []
      responses:
        204:
          description: No content
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"

  "/v1/cron/uploadReportingSnapshot":
    get:
      tags:
        - offlineReporting
        - cron
      description: >
        Capture a reporting snapshot and begin the upload task to BigQuery reporting dataset.
      operationId: uploadReportingSnapshot
      security: []
      responses:
        204:
          description: No content
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/updateResearchPurposeReviewPrompt":
    get:
      tags:
      - offlineWorkspace
      - cron
      description: Show review research prompt if Workspace has been created 15 days/an year earlier
      operationId: updateResearchPurposeReviewPrompt
      security: []
      responses:
        204:
          description: No content
        500:
          description: Internal Error
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/cron/checkPendingEgressEvents":
    get:
      security: []
      tags:
      - offlineEgress
      - cron
      description: 'Endpoint meant to be called offline to trigger re-enqueueing of any pending
        egress events. Only executable via App Engine cronjob.'
      operationId: checkPendingEgressEvents
      responses:
        204:
          description: No content.
  "/v1/cron/checkObjectNameSize":
    get:
      security: []
      tags:
      - offlineObjectNameSize
      - cron
      description: ''
      operationId: checkObjectNameSize
      responses:
        204:
          description: No content.
  "/v1/cron/ensureTestUserTosCompliance":
    get:
      security: []
      tags:
        - offlineTestUsers
        - cron
      description: "Keep test users' TOS compliance statuses in the appropriate states"
      operationId: ensureTestUserTosCompliance
      responses:
        204:
          description: No content.

  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/readonly":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - notebooks
      description: Get the HTML for a read only view of the notebook
      operationId: readOnlyNotebook
      parameters:
      - in: path
        name: notebookName
        required: true
        type: string
      responses:
        200:
          description: HTML Read Only version of the notebook
          schema:
            "$ref": "#/definitions/ReadOnlyNotebookResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/rename":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - notebooks
      consumes:
      - application/json
      description: Renames specified notebook
      operationId: renameNotebook
      parameters:
      - in: body
        name: NotebookRename
        description: new name for notebook
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            newName:
              type: string
      responses:
        200:
          description: Successful rename
          schema:
            "$ref": "#/definitions/FileDetail"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/duplicate":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - notebooks
      description: Duplicates specified notebook
      operationId: cloneNotebook
      parameters:
      - in: path
        name: notebookName
        required: true
        type: string
      responses:
        200:
          description: Successful duplicate
          schema:
            "$ref": "#/definitions/FileDetail"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/copy":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - in: path
      name: notebookName
      required: true
      type: string
    post:
      tags:
      - notebooks
      description: Copy specified notebook in path to specified workspace in body
      operationId: copyNotebook
      parameters:
      - in: body
        name: copyNotebookRequest
        required: true
        schema:
          "$ref": "#/definitions/CopyRequest"
      responses:
        200:
          description: Successful copy
          schema:
            "$ref": "#/definitions/FileDetail"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/kernel":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - notebooks
      description: Get Kernel Type of notebook
      operationId: getNotebookKernel
      parameters:
        - in: path
          name: notebookName
          required: true
          type: string
      responses:
        200:
          description: Kernel Type
          schema:
            "$ref": "#/definitions/KernelTypeResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/delete":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    delete:
      tags:
      - notebooks
      description: Deletes specified notebook
      operationId: deleteNotebook
      parameters:
      - in: path
        name: notebookName
        required: true
        type: string
      responses:
        200:
          description: Successful delete
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/lockingMetadata":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - notebooks
      summary: Get the locking metadata for a notebook
      description: |
        Get the locking metadata for a notebook, if available.  If the notebook is not locked
        (e.g. at first creation) this may be empty.  Additionally, the caller of this endpoint
        may not have the appropriate permissions to determine who is locking this notebook.
        When this is the case, the lastLockedBy field is set to UNKNOWN.
      operationId: getNotebookLockingMetadata
      parameters:
      - in: path
        name: notebookName
        required: true
        type: string
      responses:
        200:
          description: The locking metadata fields for the notebook
          schema:
            "$ref": "#/definitions/NotebookLockingMetadataResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohort-reviews":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortReview
      description: Returns all cohort reviews in a workspace
      operationId: getCohortReviewsInWorkspace
      responses:
        200:
          description: A list of cohort definitions.
          schema:
            "$ref": "#/definitions/CohortReviewListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohort-reviews/{cohortId}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - in: path
        name: cohortId
        type: integer
        format: int64
        required: true
        description: cohort primary key
    get:
      tags:
        - cohortReview
      description: Returns all cohort reviews per cohortId
      operationId: getCohortReviewsByCohortId
      responses:
        200:
          description: A list of cohort reviews.
          schema:
            "$ref": "#/definitions/CohortReviewListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohort-reviews/{cohortReviewId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - in: path
      name: cohortReviewId
      type: integer
      format: int64
      required: true
      description: specifies which cohort review
    patch:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: 'Modifies the cohort review with the specified ID; fields that
        are omitted will not be modified'
      operationId: updateCohortReview
      parameters:
      - in: body
        name: cohortReview
        description: cohort review
        schema:
          "$ref": "#/definitions/CohortReview"
      responses:
        200:
          description: The updated cohort review
          schema:
            "$ref": "#/definitions/CohortReview"
    delete:
      tags:
      - cohortReview
      description: Deletes the cohort review with the specified ID
      operationId: deleteCohortReview
      responses:
        202:
          description: ACCEPTED
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohorts
      description: Returns all cohort definitions in a workspace
      operationId: getCohortsInWorkspace
      responses:
        200:
          description: A list of cohort definitions.
          schema:
            "$ref": "#/definitions/CohortListResponse"
    post:
      tags:
      - cohorts
      consumes:
      - application/json
      description: Creates a cohort definition in a workspace.
      operationId: createCohort
      parameters:
      - in: body
        name: cohort
        description: cohort definition
        schema:
          "$ref": "#/definitions/Cohort"
      responses:
        200:
          description: The cohort definition that was created.
          schema:
            "$ref": "#/definitions/Cohort"
        400:
          description: Bad Request. Cohort name already exists
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/duplicate":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - cohorts
      description: Creates a duplicate of the cohort specified by cohortId
      operationId: duplicateCohort
      parameters:
      - in: body
        name: DuplicateCohortRequest
        description: Duplicate Cohort Request
        schema:
          "$ref": "#/definitions/DuplicateCohortRequest"
      responses:
        200:
          description: The cohort definition that was created.
          schema:
            "$ref": "#/definitions/Cohort"
        400:
          description: Bad Request. Cohort name already exists
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/{cohortId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortId"
    get:
      tags:
      - cohorts
      description: Returns the cohort definition with the specified ID
      operationId: getCohort
      responses:
        200:
          description: A cohort definition
          schema:
            "$ref": "#/definitions/Cohort"
    patch:
      tags:
      - cohorts
      consumes:
      - application/json
      description: 'Modifies the cohort definition with the specified ID; fields that
        are omitted will not be modified'
      operationId: updateCohort
      parameters:
      - in: body
        name: cohort
        description: cohort definition
        schema:
          "$ref": "#/definitions/Cohort"
      responses:
        200:
          description: The updated cohort definition
          schema:
            "$ref": "#/definitions/Cohort"
    delete:
      tags:
      - cohorts
      description: Deletes the cohort definition with the specified ID
      operationId: deleteCohort
      responses:
        202:
          description: ACCEPTED
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/user-recent-resources":
    get:
      tags:
      - userMetrics
      description: Returns the resources accessed by user order by access time desc
      operationId: getUserRecentResources
      responses:
        200:
          description: A list of resources order by last access time desc order
          schema:
            "$ref": "#/definitions/WorkspaceResourceResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-resources/update":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - userMetrics
      consumes:
      - application/json
      description: Add/update user recent resource
      operationId: updateRecentResource
      parameters:
      - in: body
        name: RecentResourceRequest
        description: request object for updating recent resource
        required: true
        schema:
          "$ref": "#/definitions/RecentResourceRequest"
      x-aou-note: |
        this response type is currently only ever used by Notebooks because other
        resources are stored in our db, and therefore cache ops are
        done for them in the backend
      responses:
        200:
          description: Successfully added/updated
          schema:
            "$ref": "#/definitions/WorkspaceResource"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-resources/delete":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    delete:
      tags:
      - userMetrics
      description: Deletes entry from recent resource
      operationId: deleteRecentResource
      parameters:
      - in: body
        name: RecentResourceRequest
        description: request object for updating recent resource
        required: true
        schema:
          "$ref": "#/definitions/RecentResourceRequest"
      responses:
        200:
          description: Successfully deleted
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/user-recent-workspaces":
    get:
      tags:
      - workspaces
      description: Returns the workspaces edited by the user in descending order of
        update time
      operationId: getUserRecentWorkspaces
      responses:
        200:
          description: A list of workspaces order by last-updated time in descending
            order
          schema:
            "$ref": "#/definitions/RecentWorkspaceResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/user-recent-workspaces/update":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - workspaces
      description: Add/update user recent workspaces
      operationId: updateRecentWorkspaces
      responses:
        200:
          description: Successfully added/updated
          schema:
            "$ref": "#/definitions/RecentWorkspaceResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - conceptSets
      description: Returns all concept sets in a workspace
      operationId: getConceptSetsInWorkspace
      responses:
        200:
          description: A list of concept sets.
          schema:
            "$ref": "#/definitions/ConceptSetListResponse"
    post:
      tags:
      - conceptSets
      consumes:
      - application/json
      description: Creates a concept set in a workspace.
      operationId: createConceptSet
      parameters:
      - in: body
        name: request
        description: create concept set request
        schema:
          "$ref": "#/definitions/CreateConceptSetRequest"
      responses:
        200:
          description: The concept set that was created.
          schema:
            "$ref": "#/definitions/ConceptSet"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/conceptSetId"
    get:
      tags:
      - conceptSets
      description: Returns the concept set definition with the specified ID
      operationId: getConceptSet
      responses:
        200:
          description: A concept set definition
          schema:
            "$ref": "#/definitions/ConceptSet"
    patch:
      tags:
      - conceptSets
      consumes:
      - application/json
      description: 'Modifies the name or description of the concept set with the specified
        ID; fields that are omitted will not be modified'
      operationId: updateConceptSet
      parameters:
      - in: body
        name: conceptSet
        description: concept set definition
        schema:
          "$ref": "#/definitions/ConceptSet"
      responses:
        200:
          description: The updated concept set.
          schema:
            "$ref": "#/definitions/ConceptSet"
    delete:
      tags:
      - conceptSets
      description: Deletes the concept set with the specified ID
      operationId: deleteConceptSet
      responses:
        202:
          description: ACCEPTED
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}/concept-count":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/conceptSetId"
    get:
      tags:
      - conceptSets
      description: The number of concepts in this concept-set.
      operationId: countConceptsInConceptSet
      responses:
        200:
          description: A count of concepts
          schema:
            type: integer
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}/concepts":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/conceptSetId"
    post:
      tags:
      - conceptSets
      consumes:
      - application/json
      description: 'Adds or removes concepts from the concept set.'
      operationId: updateConceptSetConcepts
      parameters:
      - in: body
        name: request
        description: update concept set request
        schema:
          "$ref": "#/definitions/UpdateConceptSetRequest"
      responses:
        200:
          description: The updated concept set.
          schema:
            "$ref": "#/definitions/ConceptSet"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/concept-sets/{conceptSetId}/copy":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - in: path
      name: conceptSetId
      required: true
      type: string
    post:
      tags:
      - conceptSets
      description: Copy specified concept set in path to specified workspace in body
      operationId: copyConceptSet
      parameters:
      - in: body
        name: copyConceptSetRequest
        required: true
        schema:
          "$ref": "#/definitions/CopyRequest"
      responses:
        200:
          description: Successful copy
          schema:
            "$ref": "#/definitions/ConceptSet"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/data-set/generateCode/{kernelType}":
    post:
      tags:
        - dataSet
      description: 'Given a Data Set, return the SQL query built from it.'
      operationId: generateCode
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - "$ref": "#/parameters/workspaceId"
        - in: path
          name: kernelType
          required: true
          type: string
        - in: body
          name: dataSet
          required: true
          schema:
            "$ref": "#/definitions/DataSetRequest"
      responses:
        200:
          description: 'A SQL query for each domain in the Data Set'
          schema:
            "$ref": "#/definitions/DataSetCodeResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/data-sets":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - dataSet
      description: 'Creates Data Set'
      operationId: createDataSet
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - in: body
        name: dataSetRequest
        required: true
        schema:
          "$ref": "#/definitions/DataSetRequest"
      responses:
        200:
          description: Data set has been created successfully
          schema:
            "$ref": "#/definitions/DataSet"
        400:
          description: Invalid data set request
          schema:
            "$ref": "#/definitions/ErrorResponse"
        409:
          description: Data Set with the same name already exists
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/{workspaceNamespace}/{workspaceId}/data-sets/{dataSetId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/dataSetId"
    get:
      tags:
      - dataSet
      operationId: getDataSet
      responses:
        200:
          description: The data set with the specified ID
          schema:
            "$ref": "#/definitions/DataSet"
    patch:
      tags:
      - dataSet
      consumes:
      - application/json
      operationId: updateDataSet
      parameters:
      - in: body
        name: dataSet
        description: data set definition
        schema:
          "$ref": "#/definitions/DataSetRequest"
      responses:
        200:
          description: The updated data set.
          schema:
            "$ref": "#/definitions/DataSet"
        404:
          description: Data set to update does not exist.
          schema:
            "$ref": "#/definitions/DataSet"
        409:
          description: Data Set with the same name already exists
          schema:
            "$ref": "#/definitions/ErrorResponse"
    delete:
      tags:
      - dataSet
      description: Deletes the data set with the specified ID
      operationId: deleteDataSet
      responses:
        202:
          description: ACCEPTED
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/{workspaceNamespace}/{workspaceId}/data-sets/dataSetByResourceId":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      parameters:
      - in: body
        name: resourceType
        required: true
        schema:
          "$ref": "#/definitions/ResourceType"
      - in: query
        name: id
        type: integer
        format: int64
        required: true
      tags:
      - dataSet
      operationId: getDataSetByResourceId
      responses:
        200:
          description: A list of data sets containg cohort/concept Id passed.
          schema:
            "$ref": "#/definitions/DataSetListResponse"
  "/v1/{cdrVersionId}/dataDictionaryEntry/{domain}/{value}":
    get:
      parameters:
      - in: path
        name: cdrVersionId
        type: integer
        format: int64
        required: true
      - in: path
        name: domain
        required: true
        type: string
      - in: path
        name: value
        type: string
        required: true
      tags:
      - dataSet
      operationId: getDataDictionaryEntry
      responses:
        200:
          description: Detailed definition of a given domain value for the specified
            CDR Version
          schema:
            "$ref": "#/definitions/DataDictionaryEntry"
  "/v1/{workspaceNamespace}/{workspaceId}/data-set/markDirty":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    post:
      parameters:
      - in: body
        name: markDataSetRequest
        schema:
          "$ref": "#/definitions/MarkDataSetRequest"
      tags:
      - dataSet
      operationId: markDirty
      responses:
        200:
          description: Mark all dataset with cohort/concept id as dirty
          schema:
            type: boolean
            default: false
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/genomicExtractionJobs":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - dataSet
      description: 'Retrieve Job details for given ID.
       Requires READER access on the workspace.'
      operationId: getGenomicExtractionJobs
      responses:
        200:
          description: The Terra Job for the extraction workflow
          schema:
            "$ref": "#/definitions/GenomicExtractionJobListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/datasets/{dataSetId}/extractGenomicData":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - "$ref": "#/parameters/dataSetId"
    post:
      tags:
        - dataSet
      description: 'Initiates a Terra Cromwell job to extract genomes of the given dataset.
        Requires WRITER access on the workspace.
        Workspace CDR must also have an associated WGS dataset'
      operationId: extractGenomicData
      responses:
        200:
          description: The Terra Job for the extraction workflow
          schema:
            "$ref": "#/definitions/GenomicExtractionJob"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/genomicExtractionJobs/{jobId}/abort":
    post:
      parameters:
        - in: path
          name: workspaceNamespace
          description: workspaceNamespace
          required: true
          type: string
        - in: path
          name: workspaceId
          description: workspaceId
          required: true
          type: string
        - in: path
          name: jobId
          type: string
          required: true
      tags:
        - dataSet
      description: 'Aborts a running genome extract job. Requires WRITER access on the workspace.
        Workspace CDR must also have access to a Wgs dataset'
      operationId: abortGenomicExtractionJob
      responses:
        204:
          description: Successful request
          schema:
            $ref: '#/definitions/EmptyResponse'
        404:
          description: Submission not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/v1/{workspaceNamespace}/{workspaceId}/data-set/exportToNotebook":
    post:
      tags:
      - dataSet
      description: 'Exports a data set query to a notebook'
      operationId: exportToNotebook
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - in: body
        name: dataSetExportRequest
        required: true
        schema:
          "$ref": "#/definitions/DataSetExportRequest"
      responses:
        200:
          description: Data set has been exported correctly
          schema:
            "$ref": "#/definitions/EmptyResponse"
        400:
          description: Invalid data set request
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/{workspaceNamespace}/{workspaceId}/data-set/exportToNotebook/preview":
    post:
      tags:
        - dataSet
      description: 'Preview notebook code generation'
      operationId: previewExportToNotebook
      parameters:
        - "$ref": "#/parameters/workspaceNamespace"
        - "$ref": "#/parameters/workspaceId"
        - in: body
          name: dataSetExportRequest
          required: true
          schema:
            "$ref": "#/definitions/DataSetExportRequest"
      responses:
        200:
          description: HTML Read Only version of the the notebook cells to be exported
          schema:
            "$ref": "#/definitions/ReadOnlyNotebookResponse"
        400:
          description: Invalid data set export request
          schema:
            "$ref": "#/definitions/ErrorResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/data-set/preview":
    post:
      tags:
      - dataSet
      description: 'Preview data set'
      operationId: previewDataSetByDomain
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - in: body
        name: dataSetPreviewRequest
        required: true
        schema:
          "$ref": "#/definitions/DataSetPreviewRequest"
      responses:
        200:
          description: 'A SQL query for each domain in the Data Set'
          schema:
            "$ref": "#/definitions/DataSetPreviewResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/data-set/concept-sets/domainValues/{domain}":
    get:
      tags:
      - dataSet
      description: 'Returns all column names/values for a given domain.'
      operationId: getValuesFromDomain
      parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - in: query
        name: conceptSetId
        required: false
        type: integer
        format: int64
      - in: path
        name: domain
        required: true
        type: string
      responses:
        200:
          description: the values/column names in the domain.
          schema:
            "$ref": "#/definitions/DomainValuesResponse"
  "/v1/cloudTask/exportResearcherData":
    x-aou-note: |
      Endpoints for task in cloud task queue
      Note: all requests tagged as "cloudTask" must have the header X-AppEngine-QueueName:
      to the queue name, which app engine itself only sets (and overrides internally) when invoking
      cloud task. See
      https://cloud.google.com/tasks/docs/creating-appengine-handlers#reading_app_engine_task_request_headers
      and o.p.w.interceptors.CloudTaskInterceptor which implements the header check.

      Using body parameter ref ArrayOfLong instead of defining array of type long here because of
      bug in swagger version 2.3.0 https://github.com/swagger-api/swagger-codegen/issues/6745.2.2.3
    post:
      tags:
      - cloudTaskRdrExport
      - cloudTask
      security: []
      description: 'Task handler which handle request from cloud task queue rdrQueueTest
        to send Researcher data'
      operationId: exportResearcherData
      consumes:
      - application/json
      parameters:
      - in: query
        name: backfill
        type: boolean
        required: false
      - in: body
        name: researcherIds
        required: true
        description: The IDs of Users to be exported to Rdr.
        schema:
          "$ref": "#/definitions/ArrayOfLong"
      responses:
        200:
          description: 'A SQL query for each domain in the Data Set'
  "/v1/cloudTask/exportWorkspaceData":
    post:
      tags:
      - cloudTaskRdrExport
      - cloudTask
      security: []
      description: 'Task handler which handle request from cloud task queue rdrQueueTest
        to send Workspace data'
      operationId: exportWorkspaceData
      parameters:
      - in: query
        name: backfill
        type: boolean
        required: false
      - in: body
        name: researchIds
        required: true
        description: The IDs of workspace to be exported to Rdr.
        schema:
          "$ref": "#/definitions/ArrayOfLong"
      responses:
        200:
          description: 'A SQL query for each domain in the Data Set'
  "/v1/cloudTask/auditProjectAccess":
    post:
      tags:
      - cloudTaskUser
      - cloudTask
      security: []
      description: "Audits the provided user's access to GCP resources"
      operationId: auditProjectAccess
      consumes:
      - application/json
      parameters:
      - in: body
        name: request
        required: true
        description: Audit configuration to run.
        schema:
          "$ref": "#/definitions/AuditProjectAccessRequest"
      responses:
        200:
          description: 'Audit ran successfully (possibly with audit findings)'
  "/v1/cloudTask/synchronizeUserAccess":
    post:
      tags:
      - cloudTaskUser
      - cloudTask
      security: []
      description: "Audits the provided user's access to GCP resources"
      operationId: synchronizeUserAccess
      consumes:
      - application/json
      parameters:
      - in: body
        name: request
        required: true
        description: Users to synchronize.
        schema:
          "$ref": "#/definitions/SynchronizeUserAccessRequest"
      responses:
        200:
          description: 'User synchronization ran successfully'
  "/v1/cloudTask/processEgressEvent":
    post:
      tags:
      - cloudTaskEgress
      - cloudTask
      security: []
      description: "Processes and remediates the given PENDING egress event"
      operationId: processEgressEvent
      consumes:
      - application/json
      parameters:
      - in: body
        name: request
        required: true
        description: Event to be processed.
        schema:
          "$ref": "#/definitions/ProcessEgressEventRequest"
      responses:
        200:
          description: 'Egress event processed successfully'
  "/v1/cloudTask/createWorkspace":
    post:
      tags:
      - workspaces
      - cloudTask
      description: >
        Asynchronously creates a workspace. Note: unlike other cloud tasks,
        this task requires passing along the user's auth credential header.
      operationId: processCreateWorkspaceTask
      consumes:
      - application/json
      parameters:
      - in: body
        name: request
        required: true
        description: Workspace creation task to process.
        schema:
          "$ref": "#/definitions/CreateWorkspaceTaskRequest"
      responses:
        200:
          description: 'Workspace created'
  "/v1/cloudTask/duplicateWorkspace":
    post:
      tags:
        - workspaces
        - cloudTask
      description: >
        Asynchronously duplicates a workspace. Note: unlike other cloud tasks,
        this task requires passing along the user's auth credential header.
      operationId: processDuplicateWorkspaceTask
      consumes:
        - application/json
      parameters:
        - in: body
          name: request
          required: true
          description: Workspace duplication task to process.
          schema:
            "$ref": "#/definitions/DuplicateWorkspaceTaskRequest"
      responses:
        200:
          description: 'Workspace created'
  "/v1/institutions":
    x-aou-note: Institution endpoints, for Verified Institutional Affiliation
    get:
      tags:
      - institution
      description: 'Gets the list of all Institutions. Requires INSTITUTION_ADMIN
        authority.'
      operationId: getInstitutions
      responses:
        200:
          description: 'A list of all Institutions'
          schema:
            "$ref": "#/definitions/GetInstitutionsResponse"
    post:
      tags:
      - institution
      description: 'Create an Institution. Requires INSTITUTION_ADMIN authority.'
      operationId: createInstitution
      parameters:
      - in: body
        name: institutionToCreate
        required: true
        description: The Institution to be created by this operation.
        schema:
          "$ref": "#/definitions/Institution"
      responses:
        200:
          description: 'The Institution created by this operation.'
          schema:
            "$ref": "#/definitions/Institution"
        400:
          description: Bad request
          schema:
            "$ref": "#/definitions/ErrorResponse"
        409:
          description: DataIntegrityViolationException was thrown, possibly due to an attempt to create a duplicate Institution.
          schema:
            "$ref": "#/definitions/ErrorResponse"

  "/v1/institutions/publicDetails":
    get:
      tags:
      - institution
      description: 'Gets the public details for the list of all Institutions.'
      operationId: getPublicInstitutionDetails
      security: []
      responses:
        200:
          description: 'A list of all Institutions'
          schema:
            "$ref": "#/definitions/GetPublicInstitutionDetailsResponse"
  "/v1/institutions/{shortName}":
    parameters:
    - in: path
      name: shortName
      required: true
      type: string
      description: 'A short unique name for the Institution used as an identifier,
        such as "VUMC"'
    get:
      tags:
      - institution
      description: 'Gets the Institution corresponding to the shortName ID. Requires
        INSTITUTION_ADMIN authority.'
      operationId: getInstitution
      responses:
        200:
          description: 'The Institution corresponding to the shortName ID.'
          schema:
            "$ref": "#/definitions/Institution"
    delete:
      tags:
      - institution
      description: 'Deletes the Institution corresponding to the shortName ID. Requires
        INSTITUTION_ADMIN authority.'
      operationId: deleteInstitution
      responses:
        204:
          description: 'Successful deletion of the Institution corresponding to the
            shortName ID.'
        409:
          description: Could not delete the Institution because it has verified affiliations.
    patch:
      tags:
      - institution
      description: 'Updates an Institution. Requires INSTITUTION_ADMIN authority.'
      operationId: updateInstitution
      parameters:
      - in: body
        name: institutionToUpdate
        required: true
        description: The Institution to update.
        schema:
          "$ref": "#/definitions/Institution"
      responses:
        200:
          description: The updated Institution.
          schema:
            "$ref": "#/definitions/Institution"
  "/v1/institutions/{shortName}/checkEmail":
    parameters:
    - in: path
      name: shortName
      type: string
      description: 'The short name / key of the institution to check, e.g. "VUMC"'
      required: true
    post:
      tags:
        - institution
      operationId: checkEmail
      description: Checks whether the given email address is a verified member of an institution.
      x-aou-note: This endpoint is publicly-accessible and called by clients during user registration.
      security: []
      parameters:
      - in: body
        name: contactEmail
        description: Institutional contact email address to check.
        required: true
        schema:
          "$ref": "#/definitions/CheckEmailRequest"

      responses:
        200:
          description: Whether the email is a valid member of the institution.
          schema:
            "$ref": "#/definitions/CheckEmailResponse"
  "/v1/institutions/instructionsEmail":
    post:
      tags:
        - institution
      description: 'Sets or updates the Institution-specific user instructions to be sent
        by email after registration. Requires INSTITUTION_ADMIN authority.'
      operationId: setInstitutionUserInstructions
      parameters:
        - in: body
          name: userInstructions
          description: 'Text to include in an email sent to users for an Institution after they are registered.'
          schema:
            "$ref": "#/definitions/InstitutionUserInstructions"
      responses:
        200:
          description: 'Successfully set or updated the Institution-specific user instructions to be sent
            by email after registration.'
          schema:
            "$ref": "#/definitions/InstitutionUserInstructions"
  "/v1/institutions/instructionsEmail/{shortName}":
    parameters:
      - in: path
        name: shortName
        required: true
        type: string
        description: 'A short unique name for the Institution used as an identifier,
          such as "VUMC"'
    delete:
      tags:
        - institution
      description: 'Remove the Institution-specific user instructions to be sent
        by email after registration. Requires INSTITUTION_ADMIN authority.'
      operationId: deleteInstitutionUserInstructions
      responses:
        204:
          description: 'Successfully removed the Institution-specific user instructions to be sent
            by email after registration.'
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortId"
    post:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: 'This endpoint will create an cohort review which is a participant
        cohort sample specified by the review size parameter.'
      operationId: createCohortReview
      parameters:
      - in: body
        name: request
        required: true
        description: cohort review creation request body
        schema:
          "$ref": "#/definitions/CreateReviewRequest"
      responses:
        200:
          description: A cohortReviewId and cohort count
          schema:
            "$ref": "#/definitions/CohortReview"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortId}/cohort-count":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortId"
    get:
      tags:
      - cohortReview
      description: 'This endpoint will return the cohort total participant count.'
      operationId: cohortParticipantCount
      responses:
        200:
          description: A cohort total participant count
          schema:
            type: integer
            format: int64
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - "$ref": "#/parameters/cohortReviewId"
    post:
      tags:
        - cohortReview
      consumes:
        - application/json
      description: 'Returns a collection of participants for the specified cohortId.
          This endpoint does pagination based on page, limit, order and column.'
      operationId: getParticipantCohortStatuses
      parameters:
        - in: body
          name: request
          required: true
          description: request body for getting list of ParticipantCohortStatuses.
          schema:
            "$ref": "#/definitions/PageFilterRequest"
      responses:
        200:
          description: A collection of participants
          schema:
            "$ref": "#/definitions/CohortReviewWithCountResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants/{participantId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortReviewId"
    - "$ref": "#/parameters/participantId"
    get:
      tags:
      - cohortReview
      description: This endpoint will return a ParticipantCohortStatus
      operationId: getParticipantCohortStatus
      responses:
        200:
          description: The ParticipantCohortStatus definition
          schema:
            "$ref": "#/definitions/ParticipantCohortStatus"
    put:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: Modifies the ParticipantCohortStatus status
      operationId: updateParticipantCohortStatus
      parameters:
      - in: body
        name: cohortStatusRequest
        description: Contains the new review status
        schema:
          "$ref": "#/definitions/ModifyCohortStatusRequest"
      responses:
        200:
          description: The updated ParticipantCohortStatus definition
          schema:
            "$ref": "#/definitions/ParticipantCohortStatus"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants/{participantId}/charts/{domain}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortReviewId"
    - "$ref": "#/parameters/participantId"
    get:
      tags:
      - cohortReview
      description: This endpoint returns ParticipantChartDataListResponse containing list of ParticipantChartData objects
      operationId: getParticipantChartData
      parameters:
      - in: path
        name: domain
        type: string
        required: true
        description: specifies which domain the chart data should belong to.
      responses:
        200:
          description: The Participant Chart data
          schema:
            "$ref": "#/definitions/ParticipantChartDataListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants/{participantId}/annotations":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortReviewId"
    - "$ref": "#/parameters/participantId"
    post:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: This endpoint will create a ParticipantCohortAnnotation.
      operationId: createParticipantCohortAnnotation
      parameters:
      - in: body
        name: request
        required: true
        description: ParticipantCohortAnnotation creation request body
        schema:
          "$ref": "#/definitions/ParticipantCohortAnnotation"
      responses:
        200:
          description: A ParticipantCohortAnnotation.
          schema:
            "$ref": "#/definitions/ParticipantCohortAnnotation"
    get:
      tags:
      - cohortReview
      description: This endpoint will get a collection of ParticipantCohortAnnotations.
      operationId: getParticipantCohortAnnotations
      responses:
        200:
          description: A collection of ParticipantCohortAnnotation.
          schema:
            "$ref": "#/definitions/ParticipantCohortAnnotationListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants/{participantId}/data":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortReviewId"
    - "$ref": "#/parameters/participantId"
    post:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: 'Returns a collection of participant data for the specified params
        based off the PageFilterRequest. This endpoint does pagination based on page,
        limit, order and column.'
      operationId: getParticipantData
      parameters:
      - in: body
        name: request
        required: true
        description: request body for getting list of participant data.
        schema:
          "$ref": "#/definitions/PageFilterRequest"
      responses:
        200:
          description: A collection of ParticipantConditions.
          schema:
            "$ref": "#/definitions/ParticipantDataListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants/{participantId}/count":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortReviewId"
    - "$ref": "#/parameters/participantId"
    post:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: Returns a count based on page, limit, order, sort column and/or filter.
      operationId: getParticipantCount
      parameters:
      - in: body
        name: request
        required: true
        description: request body for getting list of participant data.
        schema:
          "$ref": "#/definitions/PageFilterRequest"
      responses:
        200:
          description: A count of Participants.
          schema:
            "$ref": "#/definitions/ParticipantDataCountResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/{cohortReviewId}/participants/{participantId}/annotations/{annotationId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortReviewId"
    - "$ref": "#/parameters/participantId"
    - in: path
      name: annotationId
      type: integer
      format: int64
      required: true
      description: specifies which annotation
    put:
      tags:
      - cohortReview
      consumes:
      - application/json
      description: This endpoint will modify a ParticipantCohortAnnotation.
      operationId: updateParticipantCohortAnnotation
      parameters:
      - in: body
        name: request
        required: true
        description: ParticipantCohortAnnotation modification request body
        schema:
          "$ref": "#/definitions/ModifyParticipantCohortAnnotationRequest"
      responses:
        200:
          description: A ParticipantCohortAnnotation.
          schema:
            "$ref": "#/definitions/ParticipantCohortAnnotation"
    delete:
      tags:
      - cohortReview
      description: Deletes the ParticipantCohortAnnotation with the specified ID
      operationId: deleteParticipantCohortAnnotation
      responses:
        202:
          description: ParticipantCohortAnnotation deletion request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/review/vocabularies":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortReview
      description: This endpoint will get a collection of OMOP vocabularies per cdrVersionId.
      operationId: getVocabularies
      responses:
        200:
          description: A collection of OMOP vocabularies.
          schema:
            "$ref": "#/definitions/VocabularyListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/chartinfo/{cohortReviewId}/demo":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - "$ref": "#/parameters/cohortReviewId"
    get:
      tags:
        - cohortReview
      description: Searches for demographic info about subjects.
      operationId: findCohortReviewDemoChartInfo
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/DemoChartInfoListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/top/chartinfo/{cohortReviewId}/{domain}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
      - "$ref": "#/parameters/cohortReviewId"
    get:
      tags:
        - cohortReview
      description: Returns a collection of CohortChartData for UI charting in cohort.
      operationId: getCohortReviewChartData
      parameters:
        - in: path
          name: domain
          type: string
          required: true
          description: represents text domain
      responses:
        200:
          description: A collection of CohortChartData
          schema:
            "$ref": "#/definitions/CohortChartDataListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/{cohortId}/annotationdefinitions":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortId"
    post:
      tags:
      - cohortAnnotationDefinition
      consumes:
      - application/json
      description: This endpoint will create a CohortAnnotationDefinition.
      operationId: createCohortAnnotationDefinition
      parameters:
      - in: body
        name: request
        required: true
        description: CohortAnnotationDefinition creation request body
        schema:
          "$ref": "#/definitions/CohortAnnotationDefinition"
      responses:
        200:
          description: A CohortAnnotationDefinition.
          schema:
            "$ref": "#/definitions/CohortAnnotationDefinition"
    get:
      tags:
      - cohortAnnotationDefinition
      description: Returns a collection of CohortAnnotationDefinition.
      operationId: getCohortAnnotationDefinitions
      responses:
        200:
          description: A collection of CohortAnnotationDefinition
          schema:
            "$ref": "#/definitions/CohortAnnotationDefinitionListResponse"
  "/v1/workspaces/{workspaceNamespace}/{workspaceId}/cohorts/{cohortId}/annotationdefinitions/{annotationDefinitionId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    - "$ref": "#/parameters/cohortId"
    - in: path
      name: annotationDefinitionId
      type: integer
      format: int64
      required: true
      description: specifies which CohortAnnotationDefinition.
    get:
      tags:
      - cohortAnnotationDefinition
      description: Returns a CohortAnnotationDefinition.
      operationId: getCohortAnnotationDefinition
      responses:
        200:
          description: A CohortAnnotationDefinition
          schema:
            "$ref": "#/definitions/CohortAnnotationDefinition"
    put:
      tags:
      - cohortAnnotationDefinition
      consumes:
      - application/json
      description: modify the CohortAnnotationDefinition.
      operationId: updateCohortAnnotationDefinition
      parameters:
      - in: body
        name: cohortAnnotationDefinition
        description: Contains the new CohortAnnotationDefinition
        schema:
          "$ref": "#/definitions/CohortAnnotationDefinition"
      responses:
        200:
          description: The updated CohortAnnotationDefinition definition
          schema:
            "$ref": "#/definitions/CohortAnnotationDefinition"
    delete:
      tags:
      - cohortAnnotationDefinition
      description: Deletes the CohortAnnotationDefinition with the specified ID
      operationId: deleteCohortAnnotationDefinition
      responses:
        202:
          description: CohortAnnotationDefinition deletion request accepted
          schema:
            "$ref": "#/definitions/EmptyResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/menu/{parentId}":
    parameters:
    - "$ref": "#/parameters/workspaceNamespace"
    - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: 'Returns criteria menu'
      operationId: findCriteriaMenu
      parameters:
      - in: path
        name: parentId
        type: integer
        format: int64
        required: true
        description: the parent id
      responses:
        200:
          description: A collection of criteria menu options
          schema:
            "$ref": "#/definitions/CriteriaMenuListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/domainCard":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - cohortBuilder
      description: 'Returns information on the domains of data in the workspace''s
          CDR version along with participant and concept counts'
      operationId: findDomainCards
      responses:
        200:
          description: information on the domains
          schema:
            "$ref": "#/definitions/DomainCardResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/surveymodule":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: 'Returns survey information in the workspace''s CDR version along
        with participant and question count'
      operationId: findSurveyModules
      responses:
        200:
          description: information about the surveys
          schema:
            "$ref": "#/definitions/SurveysResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/universalDomainCounts":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - cohortBuilder
      description: 'Returns a count of term matches per domain for EHR domains'
      operationId: findUniversalDomainCounts
      parameters:
        - in: query
          name: term
          type: string
          required: true
          description: the term to search for
      responses:
        200:
          description: information about counts for EHR domains
          schema:
            "$ref": "#/definitions/CardCountResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/conceptCounts":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
        - cohortBuilder
      description: 'Returns a count of term matches per domain for EHR domains, Physical Measurement css, and per survey name for all survey names'
      operationId: findConceptCounts
      parameters:
        - in: query
          name: term
          type: string
          required: true
          description: the term to search for
      responses:
        200:
          description: information about counts for EHR domains, physical Measurement CSS, and Surveys for all survey names
          schema:
            "$ref": "#/definitions/CardCountResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/{domain}/{standard}/search/term":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    post:
      tags:
        - cohortBuilder
      consumes:
        - application/json
      description: Returns a collection of criteria per search term.
      operationId: findCriteriaByDomain
      parameters:
        - in: body
          name: request
          required: true
          description: CriteriaSearchRequest body
          schema:
            "$ref": "#/definitions/CriteriaSearchRequest"
      responses:
        200:
          description: A collection of criteria.
          schema:
            "$ref": "#/definitions/CriteriaListWithCountResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/{domain}/{conceptId}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: 'Returns a collection of criteria per concept id'
      operationId: findStandardCriteriaByDomainAndConceptId
      parameters:
      - in: path
        name: domain
        type: string
        required: true
        description: the specific type of domain
      - in: path
        name: conceptId
        type: integer
        format: int64
        required: true
        description: the concept id to search for
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/{domain}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: 'Returns a collection of criteria by optional query parameters
        of the following: type, subtype, parentId and/or allChildren'
      operationId: findCriteriaBy
      parameters:
      - in: path
        name: domain
        type: string
        required: true
        description: the specific domain of criteria to get
      - in: query
        name: type
        type: string
        required: false
        description: the specific type of criteria to get
      - in: query
        name: standard
        type: boolean
        default: false
        required: false
        description: reveals if source or standard
      - in: query
        name: parentId
        type: integer
        format: int64
        required: false
        description: fetch direct children of parentId
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
    post:
      tags:
      - cohortBuilder
      consumes:
      - application/json
      description: Lookup criteria based on domain, standard and conceptId.
      operationId: findCriteriaForCohortEdit
      parameters:
      - in: path
        name: domain
        type: string
        required: true
        description: the specific domain of criteria to get
      - in: body
        name: request
        description: Domain with collection of source/standard conceptIdsd.
        schema:
          "$ref": "#/definitions/CriteriaRequest"
        required: true
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/autocomplete":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - cohortBuilder
      consumes:
      - application/json
      description: Returns matches on survey / criteria table by code or name
      operationId: findCriteriaAutoComplete
      parameters:
      - in: body
        name: request
        required: true
        description: CriteriaSearchRequest body
        schema:
          "$ref": "#/definitions/CriteriaSearchRequest"
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/drug":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns criteria tree matching value
      operationId: findDrugBrandOrIngredientByValue
      parameters:
      - in: query
        name: value
        type: string
        required: true
        description: matches name or code of drug
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/drug/ingredient/{conceptId}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns criteria tree with the specified name
      operationId: findDrugIngredientByConceptId
      parameters:
      - in: path
        name: conceptId
        type: integer
        format: int64
        required: true
        description: conceptId of brand
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/attribute/{conceptId}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns criteria tree with the specified name
      operationId: findCriteriaAttributeByConceptId
      parameters:
      - in: path
        name: conceptId
        type: integer
        format: int64
        required: true
        description: conceptId of brand
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/CriteriaAttributeListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/survey/attribute/{questionConceptId}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns SurveyVersion with counts
      operationId: findSurveyVersionByQuestionConceptId
      parameters:
      - in: path
        name: questionConceptId
        type: integer
        format: int64
        required: true
        description: questionConceptId of the question
      responses:
        200:
          description: A collection of SurveyVersion
          schema:
            "$ref": "#/definitions/SurveyVersionListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/survey/attribute/{questionConceptId}/{answerConceptId}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns SurveyVersion with counts
      operationId: findSurveyVersionByQuestionConceptIdAndAnswerConceptId
      parameters:
      - in: path
        name: questionConceptId
        type: integer
        format: int64
        required: true
        description: questionConceptId of the question
      - in: path
        name: answerConceptId
        type: integer
        format: int64
        required: true
        description: answerConceptId of the answer
      responses:
        200:
          description: A collection of SurveyVersion
          schema:
            "$ref": "#/definitions/SurveyVersionListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/criteria/survey/versions":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns any surveys that are versioned
      operationId: findVersionedSurveys
      responses:
        200:
          description: A collection of versioned surveys
          schema:
            "$ref": "#/definitions/CriteriaListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/age/counts":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Return counts for age type and age
      operationId: findAgeTypeCounts
      responses:
        200:
          description: A collection age type counts
          schema:
            "$ref": "#/definitions/AgeTypeCountListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/search":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - cohortBuilder
      consumes:
      - application/json
      description: Searches for participants based on criteria, criteria specific
        parameters, and modifiers.
      operationId: countParticipants
      parameters:
      - in: body
        name: request
        description: object of parameters by which to perform the search
        schema:
          "$ref": "#/definitions/CohortDefinition"
        required: true
      responses:
        200:
          description: A count of subjects
          schema:
            type: integer
            format: int64
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/chartinfo/{genderOrSex}/{age}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - cohortBuilder
      consumes:
      - application/json
      description: Searches for demographic info about subjects.
      operationId: findDemoChartInfo
      parameters:
      - in: path
        name: genderOrSex
        type: string
        required: true
        description: represents gender or sex at birth
      - in: path
        name: age
        type: string
        required: true
        description: represents age, age at consent or age at cdr
      - in: body
        name: request
        description: object of parameters by which to perform the search
        schema:
          "$ref": "#/definitions/CohortDefinition"
        required: true
      responses:
        200:
          description: A collection of criteria
          schema:
            "$ref": "#/definitions/DemoChartInfoListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/chartinfo/ethnicity":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - cohortBuilder
      consumes:
      - application/json
      description: Searches for ethnicity info about subjects.
      operationId: findEthnicityInfo
      parameters:
      - in: body
        name: request
        description: object of parameters by which to perform the search
        schema:
          "$ref": "#/definitions/CohortDefinition"
        required: true
      responses:
        200:
          description: A collection of ethnicity and counts
          schema:
            "$ref": "#/definitions/EthnicityInfoListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/top/chartinfo/{domain}":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    post:
      tags:
      - cohortBuilder
      consumes:
      - application/json
      description: Returns a collection of CohortChartData for UI charting in cohort.
      operationId: getCohortChartData
      parameters:
      - in: path
        name: domain
        type: string
        required: true
        description: represents gender or sex at birth
      - in: body
        name: request
        description: the cohort
        schema:
          "$ref": "#/definitions/CohortDefinition"
        required: true
      responses:
        200:
          description: A collection of CohortChartData
          schema:
            "$ref": "#/definitions/CohortChartDataListResponse"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/demographics":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Will return a list all values for gender, race and ethnicity.
      operationId: findParticipantDemographics
      responses:
        200:
          description: An object which contains a list of all values for gender, race
            and ethnicity.
          schema:
            "$ref": "#/definitions/ParticipantDemographics"
  "/v1/cohortbuilder/{workspaceNamespace}/{workspaceId}/dataFilters":
    parameters:
      - "$ref": "#/parameters/workspaceNamespace"
      - "$ref": "#/parameters/workspaceId"
    get:
      tags:
      - cohortBuilder
      description: Returns data filter options per cdr version
      operationId: findDataFilters
      responses:
        200:
          description: A collection of data filter options
          schema:
            "$ref": "#/definitions/DataFiltersResponse"
  "/v1/surveys/newUserSatisfactionSurvey":
    post:
      tags:
        - surveys
      description: Stores user responses for the new user satisfaction survey.
      operationId: createNewUserSatisfactionSurvey
      parameters:
        - in: body
          name: NewUserSatisfactionSurvey
          description: Survey response data
          required: true
          schema:
            "$ref": "#/definitions/CreateNewUserSatisfactionSurvey"
      responses:
        200:
          description: 'The survey responses were successfully stored.'
definitions:
  ArchivalStatus:
    type: string
    description: CDR archival status; archived CDRs cannot be used for new workspaces.
    enum:
    - LIVE
    - ARCHIVED
  RdrEntity:
    type: string
    description: Entities send to RDR
    enum:
    - USER
    - WORKSPACE
  Degree:
    type: string
    enum:
    - PHD
    - MD
    - JD
    - EDD
    - MSN
    - MS
    - MA
    - MBA
    - ME
    - MSW
    - MPH
    - BA
    - BS
    - BSN
    - NONE
  Domain:
    type: string
    description: a domain for concepts corresponding to a table in the OMOP schema
    enum:
    - OBSERVATION
    - PROCEDURE
    - DRUG
    - CONDITION
    - MEASUREMENT
    - DEVICE
    - DEATH
    - VISIT
    - SURVEY
    - PERSON
    - PHYSICAL_MEASUREMENT
    - ALL_EVENTS
    - LAB
    - VITAL
    - FITBIT
    - FITBIT_HEART_RATE_SUMMARY
    - FITBIT_HEART_RATE_LEVEL
    - FITBIT_ACTIVITY
    - FITBIT_INTRADAY_STEPS
    - FITBIT_SLEEP_DAILY_SUMMARY
    - FITBIT_SLEEP_LEVEL
    - PHYSICAL_MEASUREMENT_CSS
    - WHOLE_GENOME_VARIANT
    - LR_WHOLE_GENOME_VARIANT
    - ZIP_CODE_SOCIOECONOMIC
    - ARRAY_DATA
  Surveys:
    type: string
    description: a survey for concepts
    enum:
    - THE BASICS
    - LIFESTYLE
    - OVERALL HEALTH
  Race:
    type: string
    enum:
    - AIAN
    - ASIAN
    - AA
    - NHOPI
    - WHITE
    - NONE
    - PREFER_NO_ANSWER
  Ethnicity:
    type: string
    enum:
    - HISPANIC
    - NOT_HISPANIC
    - PREFER_NO_ANSWER
  GenderIdentity:
    type: string
    enum:
    - MAN
    - WOMAN
    - NON_BINARY
    - TRANSGENDER
    - NONE_DESCRIBE_ME
    - PREFER_NO_ANSWER
  SexAtBirth:
    type: string
    enum:
    - MALE
    - FEMALE
    - INTERSEX
    - NONE_OF_THESE_DESCRIBE_ME
    - PREFER_NO_ANSWER
  SexualOrientation:
    type: string
    enum:
    - GAY
    - LESBIAN
    - STRAIGHT
    - BISEXUAL
    - NONE_OF_THESE_DESCRIBE_ME
    - PREFER_NO_ANSWER
  Education:
    type: string
    enum:
    - NO_EDUCATION
    - GRADES_1_12
    - UNDERGRADUATE
    - COLLEGE_GRADUATE
    - MASTER
    - DOCTORATE
    - PREFER_NO_ANSWER
  Disability:
    type: string
    enum:
    - TRUE
    - FALSE
    - PREFER_NO_ANSWER
  FeaturedWorkspaceCategory:
    type: string
    enum:
    - DEMO_PROJECTS
    - PHENOTYPE_LIBRARY
    - TUTORIAL_WORKSPACES
  CdrVersionTiersResponse:
    type: object
    required:
      - tiers
    properties:
      tiers:
        type: array
        items:
          "$ref": "#/definitions/CdrVersionTier"
  CdrVersionTier:
    type: object
    required:
      - accessTierShortName
      - accessTierDisplayName
      - defaultCdrVersionId
      - defaultCdrVersionCreationTime
      - versions
    properties:
      accessTierShortName:
        type: string
      accessTierDisplayName:
        type: string
      defaultCdrVersionId:
        type: string
      defaultCdrVersionCreationTime:
        type: integer
        format: int64
        description:
          Milliseconds since the UNIX epoch. This timestamp is derived from the deid dataset name.
          Ex - deid_output_20191004 -> 2019-10-04 00:00:00Z
      versions:
        type: array
        items:
          "$ref": "#/definitions/CdrVersion"
  CdrVersion:
    type: object
    required:
    - cdrVersionId
    - name
    - accessTierShortName
    - creationTime
    properties:
      cdrVersionId:
        type: string
      name:
        type: string
      accessTierShortName:
        type: string
      archivalStatus:
        "$ref": "#/definitions/ArchivalStatus"
      hasWgsData:
        type: boolean
      hasFitbitData:
        type: boolean
      hasCopeSurveyData:
        type: boolean
      creationTime:
        type: integer
        format: int64
        description:
          Milliseconds since the UNIX epoch. This timestamp is derived from the deid dataset name.
          Ex - deid_output_20191004 -> 2019-10-04 00:00:00Z
      hasFitbitSleepData:
        type: boolean
      hasSurveyConductData:
        type: boolean
  DomainCard:
    type: object
    required:
      - domain
      - name
      - description
      - conceptCount
      - participantCount
      - category
    properties:
      category:
        description: Category of the domain
        type: string
      domain:
        description: the domain ID
        "$ref": "#/definitions/Domain"
      name:
        description: display name of the domain
        type: string
      description:
        description: description of the domain
        type: string
      conceptCount:
        description: number of concept count in this domain
        type: integer
        format: int64
      participantCount:
        description: number of participants with data in the CDR for a concept in
          this domain
        type: integer
        format: int64
      standard:
        description: Identifies if the concept is standard or source
        type: boolean
        default: false
      sortOrder:
        description: Sort order for the domain
        type: integer
        format: int64
  DataFiltersResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/DataFilter"
  DataFilter:
    type: object
    required:
    - dataFilterId
    - displayName
    - name
    properties:
      dataFilterId:
        description: unique id
        type: integer
        format: int64
      displayName:
        description: display name
        type: string
      name:
        description: name
        type: string
  SurveyModule:
    type: object
    required:
    - conceptId
    - name
    - description
    - questionCount
    - participantCount
    - orderNumber
    properties:
      conceptId:
        description: the concept ID for the survey module
        type: integer
        format: int64
      name:
        description: display name of the module
        type: string
      description:
        description: description of the module
        type: string
      questionCount:
        description: number of questions in the module
        type: integer
        format: int64
      participantCount:
        description: number of participants with data in the CDR for questions in
          this module
        type: integer
        format: int64
      orderNumber:
        description: survey release order number
        type: integer
        format: int32
  FeaturedWorkspace:
    type: object
    properties:
      name:
        type: string
        description: the name of the workspace
      namespace:
        type: string
        description: the namespace of the workspace
      id:
        type: string
        description: the Firecloud id of the workspace
      category:
        "$ref": "#/definitions/FeaturedWorkspaceCategory"
        description: The category that this workspace belongs to
  SecuritySuspendedErrorParameters:
    type: object
    properties:
      suspendedUntil:
        type: string
        description: The time at which the security suspension will end, if any, in ISO 8601 format.
  ErrorResponse:
    type: object
    properties:
      message:
        description: General error message for the response.
        type: string
      statusCode:
        type: integer
        description: HTTP status code
      errorClassName:
        type: string
      errorCode:
        description: Short description of the type of error
        "$ref": "#/definitions/ErrorCode"
      errorUniqueId:
        type: string
        description: Unique ID for this error response, for correlation with backend
          logs
      parameters:
        type: object
        description: Additional structured error parameters, specific to the error code.
        additionalProperties: true
  ErrorCode:
    type: string
    description: Short parsable error descriptions
    enum:
    - PARSE_ERROR
    - USER_DISABLED
    - COMPUTE_SECURITY_SUSPENDED
    - TERRA_TOS_NON_COMPLIANT
    - TERRA_TOS_COMPLIANCE_UNKNOWN
  StatusResponse:
    type: object
    required:
    - firecloudStatus
    - notebooksStatus
    properties:
      firecloudStatus:
        type: boolean
        default: false
      notebooksStatus:
        type: boolean
        default: false
  ConfigResponse:
    type: object
    required:
    - gsuiteDomain
    properties:
      gsuiteDomain:
        x-aou-note: |
          This should be gSuiteDomain, but the Swagger-Codegen-generated server code causes the JSON
          response to have the keys "gsuiteDomain" and "gSuiteDomain". This weirdness is a workaround.
        type: string
        description: G-Suite domain containing user accounts.
      projectId:
        type: string
        description: The cloud project in which this app is running.
      firecloudURL:
        type: string
        description: The Firecloud URL to use for REST requests.
      publicApiKeyForErrorReports:
        type: string
        description: |
          Stackdriver API key for error reporting, scoped to a particular
          domain. If unset, Stackdriver error reporting should be disabled.
      shibbolethUiBaseUrl:
        type: string
        description: The base URL to use for client-side Shibboleth redirects.
      enableComplianceTraining:
        type: boolean
        default: false
        description: Whether the Compliance Training access module is enabled.
      complianceTrainingHost:
        type: string
        description: The hostname for constructing the compliance training URL.
      enableEraCommons:
        type: boolean
        default: false
        description: Whether the eRA Commons access module is enabled.
      unsafeAllowSelfBypass:
        type: boolean
        default: false
        description: Whether a user is allowed to self-bypass. Only enabled in test
          environments.
      defaultFreeCreditsDollarLimit:
        type: number
        format: double
        description: The default dollar amount of free credits allotted to each user
      enableEventDateModifier:
        type: boolean
        default: false
        description: Whether to show the Event Date modifier in cohort builder
      enableResearchReviewPrompt:
        type: boolean
        default: false
        description: Whether user should see a prompt if Workspace Research Purpose needs Review
      enableRasLoginGovLinking:
        type: boolean
        default: false
        description: Whether to use enable RAS-AoU linking for login.gov when user setup account.
      enforceRasLoginGovLinking:
        type: boolean
        default: false
        description: Whether to enforce all users finish RAS-AoU linking for login.gov.
      enableGenomicExtraction:
        type: boolean
        default: false
        description: Whether to enable genomic data extraction for eligible datasets.
      enableGpu:
        type: boolean
        default: false
        description: Whether to enable GPU for standard vm
      enablePersistentDisk:
        type: boolean
        default: false
        description: Whether to persistent disk as the notebook storage
      enableGkeApp:
        type: boolean
        default: false
        description: Whether to enable creating custom applications using Terra Leonardo
      rasHost:
        type: string
        description: The RAS base host name.
      accessRenewalLookback:
        type: number
        description: the point when we give users the option to update the affirmations needed to use the system.
      complianceTrainingRenewalLookback:
        type: number
        description: the point when we give users the option to update their compliance items that involve training.
      rasClientId:
        type: string
        description: The RAS OAuth client id.
      rasLogoutUrl:
        type: string
        description: The URL that can sign out RAS login session.
      runtimeImages:
        type: array
        items:
          "$ref": "#/definitions/RuntimeImage"
      freeTierBillingAccountId:
        type: string
        description: The free tier billing account id
      accessModules:
        type: array
        items:
          "$ref": "#/definitions/AccessModuleConfig"
      currentDuccVersions:
        type: array
        items:
          type: integer
      enableUpdatedDemographicSurvey:
        type: boolean
        default: false
        description: Whether to enable demographic survey v2 in the UI.

  RuntimeImage:
    type: object
    properties:
      cloudService:
        type: string
      name:
        type: string
  AccessModuleConfig:
    type: object
    required:
      - name
      - expirable
      - bypassable
      - requiredForRTAccess
      - requiredForCTAccess
    properties:
      name:
        "$ref": "#/definitions/AccessModule"
      expirable:
        type: boolean
      bypassable:
        type: boolean
      requiredForRTAccess:
        type: boolean
      requiredForCTAccess:
        type: boolean
  FeaturedWorkspacesConfigResponse:
    type: object
    properties:
      featuredWorkspacesList:
        type: array
        items:
          "$ref": "#/definitions/FeaturedWorkspace"
  BillingProjectMembership:
    x-aou-note: Mirrors BillingProjectMembership from fireCloud.yaml
    description: ''
    required:
    - projectName
    - role
    - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project
      role:
        type: string
        description: the role of the current user in the project
      status:
        "$ref": "#/definitions/BillingProjectStatus"
  DataDictionaryEntry:
    type: object
    properties:
      relevantOmopTable:
        type: string
      fieldName:
        type: string
      omopCdmStandardOrCustomField:
        type: string
      description:
        type: string
      fieldType:
        type: string
      dataProvenance:
        type: string
      sourcePpiModule:
        type: string
  BillingProjectStatus:
    type: string
    description: 'Initialization status of a Firecloud billing project for use with
      Workbench.'
    enum:
    - none
    - pending
    - ready
    - error
  EmptyResponse:
    type: object
    properties:
      additionalInfo:
        type: string
  VerifyEmailRequest:
    type: object
    properties:
      emailToVerify:
        type: string
      username:
        type: string
  Authority:
    x-aou-note: |
      Authorities are a tool used to add discrete permissions to users. We currently
      define the following authorities:
        * DEVELOPER: Grants access to some internal-only
          administrative endpoints, including group management and runtime
          management. Intended to be granted for devops needs, e.g. for oncall.
        * ACCESS_CONTROL_ADMIN: This is actually basically a user admin authority, for people
          to perform actions on a user's enabled status and manual verification.
        * FEATURED_WORKSPACE_ADMIN: Allows a user to publish workspaces
        * COMMUNICATIONS_ADMIN: Allows a user to post a Status Alert banner
        * SECURITY_ADMIN: Allows a user to respond to egress alerts by deleting all runtimes in a project
        * INSTITUTION_ADMIN: Allows a user to create, delete, and update Institute entities
        * RESEARCHER_DATA_VIEW: Allows a user to view admin-only data (or aggregations of data)
            for users, workspaces, and similar user-created content.

      The following authorities are deprecated and should no longer be used:
        * REVIEW_RESEARCH_PURPOSE (0)

      Note on enum names: Swagger trims any common prefix from enum values' corresponding
      Java fields by default; this has no side-effect currently as there is
      no common prefix. https://github.com/swagger-api/swagger-codegen/issues/4261
    type: string
    description: actions a user can have authority/permission to perform
    enum:
    - DEVELOPER
    - ACCESS_CONTROL_ADMIN
    - FEATURED_WORKSPACE_ADMIN
    - COMMUNICATIONS_ADMIN
    - SECURITY_ADMIN
    - INSTITUTION_ADMIN
    - RESEARCHER_DATA_VIEW
  PageVisit:
    type: object
    properties:
      page:
        type: string
      firstVisit:
        type: integer
        format: int64
  DiskType:
    type: string
    enum:
      - pd-standard
      - pd-ssd
  Disk:
    description: The configuration of a persistent disk, returned in disk responses
    type: object
    required:
      - name
      - size
      - diskType
      - blockSize
    properties:
      name:
        type: string
        description: Name of the persistent disk
      status:
        "$ref": "#/definitions/DiskStatus"
        description: Persistent disk status. Read only.
      size:
        type: integer
        description: Size of persistent disk in GB
      diskType:
        $ref: "#/definitions/DiskType"
      blockSize:
        type: integer
        description: Block size of persistent disk in bytes
      appType:
        $ref: "#/definitions/AppType"
      isGceRuntime:
        type: boolean
        default: false
        description: True if disk is used by Runtime or being used by GCE runtime
      creator:
        type: string
        description: The email for the user that created this runtime
      createdDate:
        type: string
        description: timestamp for the date this runtime was created in ISO 8601 format
      dateAccessed:
        type: string
        description: timestamp for the date this runtime was last accessed in ISO 8601 format. This is null if it has not been deleted yet.

  WorkspaceListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Workspace"
  WorkspaceResponseListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/WorkspaceResponse"
  Workspace:
    type: object
    required:
    - name
    example:
      billingAccountName: "billingAccounts/000000-AAAAAA-111111"
      billingStatus: "ACTIVE"
      cdrVersionId: "2"
      creationTime: 1588097211621
      creator: "user@aou-domain.org"
      etag: "\"1\""
      googleBucketName: "gcs-bucket-AAAAAAAA-BBBBB"
      id: "mynewestworkspace"
      lastModifiedBy: "user@aou-domain.org"
      lastModifiedTime: 1588097211621
      name: "my newest workspace"
      namespace: "aou-rw-test-11112222"
      googleProject: "aou-rw-test-11112222"
      published: false
      adminLocked: true
      adminLockedReason: "locked by admin"
      researchPurpose:
        additionalNotes: null
        ancestry: false
        anticipatedFindings: >
          varius duis at consectetur lorem donec massa sapien faucibus et molestie ac feugiat sed
          lectus vestibulum mattis ullamcorper velit sed ullamcorper morbi tincidunt ornare massa
          eget egestas purus viverra accumsan in nisl nisi scelerisque eu ultrices vitae auctor
          pellentesque elit
        approved: null
        commercialPurpose: true
        controlSet: false
        diseaseFocusedResearch: false
        diseaseOfFocus: "Chicken Pox"
        disseminateResearchFindingList: ["PRESS_RELEASE", "PUBLICATION_COMMUNITY_BASED_BLOG", "PUBLICATION_PERSONAL_BLOG"]
        drugDevelopment: false
        educational: true
        ethics: false
        intendedStudy: >
          varius duis at consectetur lorem donec massa sapien faucibus et molestie ac feugiat sed
          lectus vestibulum mattis ullamcorper velit sed ullamcorper morbi tincidunt ornare massa
          eget egestas purus viverra accumsan in nisl nisi scelerisque eu ultrices vitae auctor
          eu augue ut lectus arcu bibendum at varius vel pharetra vel turpis nunc eget lorem dolor
        methodsDevelopment: false
        otherDisseminateResearchFindings: "varius duis at consectetur lorem donec massa sapien faucibus et molestie ac feugiat sed"
        otherPopulationDetails: "varius duis at consectetur lorem donec massa sapien faucibus et molestie ac feugiat sed"
        otherPurpose: true
        otherPurposeDetails: "no real purpose"
        populationDetails: []
        populationHealth: false
        reasonForAllOfUs: "varius duis at consectetur lorem donec massa sapien faucibus et molestie ac feugiat sed"
        researchOutcomeList: ["IMPROVE_HEALTH_EQUALITY_UBR_POPULATIONS", "DECREASE_ILLNESS_BURDEN"]
        reviewRequested: false
        scientificApproach: "varius duis at consectetur lorem donec massa sapien faucibus et molestie ac feugiat sed"
        socialBehavioral: false
    properties:
      id:
        type: string
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      name:
        type: string
      namespace:
        type: string
      cdrVersionId:
        type: string
      creator:
        type: string
      billingAccountName:
        type: string
      googleBucketName:
        type: string
      accessTierShortName:
        type: string
      researchPurpose:
        "$ref": "#/definitions/ResearchPurpose"
      billingStatus:
        "$ref": "#/definitions/BillingStatus"
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedBy:
        type: string
        description: the username of the user to last update a workspace
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      published:
        type: boolean
        default: false
      adminLocked:
        type: boolean
        default: false
        description: Whether an administrator has prevented most actions on the workspace for all users
      adminLockedReason:
        type: string
        description: Reason submitted by admin for workspace locking
      googleProject:
        type: string
        description: the google project used by the workspace for compute and storage
  WorkspaceBillingUsageResponse:
    type: object
    required:
    - cost
    properties:
      cost:
        type: number
        format: double
        description: amount of free tier money spent on this workspace in USD
  WorkspaceCreatorFreeCreditsRemainingResponse:
    type: object
    required:
    - freeCreditsRemaining
    properties:
      freeCreditsRemaining:
        type: number
        format: double
        description: amount of free credits remaining for the workspace creator, in USD
  UserRole:
    type: object
    required:
    - email
    - role
    properties:
      email:
        type: string
        description: Username of the user
      givenName:
        type: string
      familyName:
        type: string
      role:
        "$ref": "#/definitions/WorkspaceAccessLevel"
  ShareWorkspaceRequest:
    type: object
    required:
    - items
    properties:
      workspaceEtag:
        type: string
        description: 'Associated workspace etag retrieved via reading the workspaces
          API. If provided, validates that the workspace (and its user roles) has
          not been modified since this etag was retrieved.'
      items:
        type: array
        items:
          "$ref": "#/definitions/UserRole"
  WorkspaceUserRolesResponse:
    type: object
    properties:
      workspaceEtag:
        type: string
        description: 'Updated workspace etag after the share request has been applied.'
      items:
        type: array
        items:
          "$ref": "#/definitions/UserRole"
      failedWorkflowRevocations:
        description: A list of user emails for whom we were unable to revoke workflow runner roles, if any
        type: array
        items:
          type: string
  CopyRequest:
    type: object
    required:
    - toWorkspaceName
    - toWorkspaceNamespace
    - newName
    properties:
      toWorkspaceName:
        type: string
      toWorkspaceNamespace:
        type: string
      newName:
        type: string
  CloneWorkspaceRequest:
    type: object
    required:
    - workspace
    properties:
      includeUserRoles:
        type: boolean
        default: false
        description: 'Whether to duplicate the user roles (sharing settings) on the
          workspace. By default, duplicate follows the behavior of CreateWorkspace
          - it is shared solely with the creator as an OWNER. If true, all user roles
          are also copied onto the new workspace in addition to the caller becoming
          an OWNER.'
      workspace:
        "$ref": "#/definitions/Workspace"
        description: |
          Workspace metadata to be applied to the cloned workspace upon creation. The following workspace fields are accepted:
            - name (required)
            - namespace (required)
            - researchPurpose (required)
            - description: defaults to the cloned workspace description
            - cdrVersionId defaults to the cloned workspace CDR version

          All other fields will be ignored and are generated server-side or are copied from the cloned workspace.
  CloneWorkspaceResponse:
    type: object
    properties:
      workspace:
        "$ref": "#/definitions/Workspace"
        description: The newly created workspace duplicate.
  WorkspaceOperation:
    type: object
    required:
      - id
      - status
    properties:
      id:
        description: The identifier for this operation
        type: integer
        format: int64
      status:
        description: The status of the async operation
        "$ref": "#/definitions/WorkspaceOperationStatus"
      workspace:
        description: The newly created workspace
        "$ref": "#/definitions/Workspace"
  UpdateWorkspaceRequest:
    type: object
    required:
    - workspace
    properties:
      workspace:
        "$ref": "#/definitions/Workspace"
  WorkspaceAccessLevel:
    type: string
    description: levels of access to workspace, NO ACCESS is akin to removing a user
      from a workspace ACL.
    enum:
    - NO ACCESS
    - READER
    - WRITER
    - OWNER
  WorkspaceActiveStatus:
    type: string
    description: Status of workspace
    enum:
    - ACTIVE
    - DELETED
  WorkspaceOperationStatus:
    type: string
    description: 'Note: PENDING is deprecated and has been replaced by QUEUED and PROCESSING'
    enum:
    - PENDING
    - QUEUED
    - PROCESSING
    - ERROR
    - SUCCESS
  ResearchPurpose:
    type: object
    required:
    - diseaseFocusedResearch
    - methodsDevelopment
    - controlSet
    - ancestry
    - commercialPurpose
    - reviewRequested
    - socialBehavioral
    - populationHealth
    - ethics
    - educational
    - otherPurpose
    - scientificApproach
    - intendedStudy
    - anticipatedFindings
    - drugDevelopment
    properties:
      additionalNotes:
        type: string
      approved:
        type: boolean
      ancestry:
        type: boolean
        default: false
      anticipatedFindings:
        type: string
      commercialPurpose:
        type: boolean
        default: false
      controlSet:
        type: boolean
        default: false
      diseaseFocusedResearch:
        type: boolean
        default: false
      diseaseOfFocus:
        type: string
      drugDevelopment:
        type: boolean
        default: false
      educational:
        type: boolean
        default: false
      intendedStudy:
        type: string
      scientificApproach:
        type: string
      methodsDevelopment:
        type: boolean
        default: false
      otherPopulationDetails:
        type: string
      otherPurpose:
        type: boolean
        default: false
      otherPurposeDetails:
        type: string
      ethics:
        type: boolean
        default: false
      populationDetails:
        type: array
        items:
          "$ref": "#/definitions/SpecificPopulationEnum"
      populationHealth:
        type: boolean
        default: false
      reasonForAllOfUs:
        type: string
      reviewRequested:
        type: boolean
        default: false
      socialBehavioral:
        type: boolean
        default: false
      timeRequested:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      timeReviewed:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      disseminateResearchFindingList:
        type: array
        items:
          "$ref": "#/definitions/DisseminateResearchEnum"
      otherDisseminateResearchFindings:
        type: string
      researchOutcomeList:
        type: array
        items:
          "$ref": "#/definitions/ResearchOutcomeEnum"
      needsReviewPrompt:
        type: boolean
        default: false
  SpecificPopulationEnum:
    type: string
    description: Short parsable descriptions of specific population categories
    enum:
    - RACE_ETHNICITY
    - AGE_GROUPS
    - SEX
    - GENDER_IDENTITY
    - SEXUAL_ORIENTATION
    - GEOGRAPHY
    - DISABILITY_STATUS
    - ACCESS_TO_CARE
    - EDUCATION_LEVEL
    - INCOME_LEVEL
    - OTHER
    - RACE_ASIAN
    - RACE_AA
    - RACE_HISPANIC
    - RACE_AIAN
    - RACE_MENA
    - RACE_NHPI
    - RACE_MORE_THAN_ONE
    - AGE_CHILDREN
    - AGE_ADOLESCENTS
    - AGE_OLDER
    - AGE_OLDER_MORE_THAN_75
  DisseminateResearchEnum:
    type: string
    description: Represents how researchers plan to to disseminate thier research
      findings.
    enum:
    - PUBLICATION_PEER_REVIEWED_JOURNALS
    - PRESENATATION_SCIENTIFIC_CONFERENCES
    - PRESS_RELEASE
    - PUBLICATION_COMMUNITY_BASED_BLOG
    - PUBLICATION_PERSONAL_BLOG
    - SOCIAL_MEDIA
    - PRESENTATION_ADVISORY_GROUPS
    - OTHER
  ResearchOutcomeEnum:
    type: string
    description: Represents antipicated outcomes from the research
    enum:
    - PROMOTE_HEALTHY_LIVING
    - IMPROVE_HEALTH_EQUALITY_UBR_POPULATIONS
    - IMPROVED_RISK_ASSESMENT
    - DECREASE_ILLNESS_BURDEN
    - PRECISION_INTERVENTION
    - NONE_APPLY
  ResearchPurposeReviewRequest:
    description: Approve or reject a workspace's research purpose.
    type: object
    required:
    - approved
    properties:
      approved:
        type: boolean
        default: false
  AccessModule:
    type: string
    enum:
    - DATA_USER_CODE_OF_CONDUCT
    - COMPLIANCE_TRAINING
    - CT_COMPLIANCE_TRAINING
    - ERA_COMMONS
    - TWO_FACTOR_AUTH
    - RAS_LINK_LOGIN_GOV
    - PROFILE_CONFIRMATION
    - PUBLICATION_CONFIRMATION
  AccessBypassRequest:
    type: object
    required:
    - moduleName
    - isBypassed
    properties:
      moduleName:
        "$ref": "#/definitions/AccessModule"
      isBypassed:
        type: boolean
        default: false
  CohortReviewListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/CohortReview"
  WorkbenchListBillingAccountsResponse:
    type: object
    required:
    - billingAccounts
    properties:
      billingAccounts:
        type: array
        items:
          "$ref": "#/definitions/BillingAccount"
  BillingAccount:
    description: 'See https://cloud.google.com/billing/reference/rest/v1/billingAccounts#BillingAccount
      for documentation on name, displayName, and isOpen.'
    type: object
    required:
    - isFreeTier
    - name
    - displayName
    - isOpen
    properties:
      isFreeTier:
        description: Returns true if this is the billing account used for free tier
        type: boolean
      name:
        type: string
      displayName:
        type: string
      isOpen:
        type: boolean
  CohortListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Cohort"
  Cohort:
    type: object
    required:
    - name
    - criteria
    - type
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      name:
        type: string
      criteria:
        description: 'Internal representation of the cohort definition. Clients should
          not depend directly on this, but instead call client functions to issue
          a SQL query for the cohort.'
        type: string
      type:
        type: string
      description:
        type: string
      creator:
        type: string
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedBy:
        type: string
        description: The user who last modified this resource.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
  FieldSet:
    type: object
    description: 'A specification for fields to retrieve about participants in a cohort.
      Exactly one of the properties below should be specified.'
    properties:
      tableQuery:
        description: 'A query specifying how to pull data out of a single table. Either
          this or annotationQuery should be set (not both.)'
        "$ref": "#/definitions/TableQuery"
      annotationQuery:
        description: 'A query specifying how to retrieve annotation values created
          about participants in a cohort during cohort review. Either this or tableQuery
          should be set (not both.)'
        "$ref": "#/definitions/AnnotationQuery"
  ConceptSetListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/ConceptSet"
  ConceptSet:
    type: object
    required:
    - name
    - criteriums
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      name:
        type: string
      domain:
        description: 'Domain corresponding to an OMOP table that can contain rows
          for the concepts in this concept set. Note that the Domain values RACE,
          GENDER, and ETHNICITY are not allowed here; it makes sense to specify concepts
          in these domains in cohort criteria, but there isn''t much value in having
          concept sets defined for them.'
        "$ref": "#/definitions/Domain"
      survey:
        description: 'Survey'
        "$ref": "#/definitions/Surveys"
      description:
        type: string
      creator:
        type: string
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedBy:
        type: string
        description: The user who last modified this resource.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      participantCount:
        type: integer
        format: int32
        description: 'Count of participants in the CDR version for the workspace containing
          this concept set that match the specified concept set'
      criteriums:
        description: Criteriums in the concept set, in conceptName order.
        type: array
        items:
          "$ref": "#/definitions/Criteria"
  ConceptSetConceptId:
    type: object
    required:
    - conceptId
    - standard
    properties:
      conceptId:
        type: integer
        format: int64
      standard:
        type: boolean
        default: true
  CreateConceptSetRequest:
    type: object
    required:
    - conceptSet
    properties:
      conceptSet:
        description: Concept set to be created; concepts is ignored
        "$ref": "#/definitions/ConceptSet"
      addedConceptSetConceptIds:
        type: array
        description: The IDs of concepts to be added to the concept set.
        items:
          "$ref": "#/definitions/ConceptSetConceptId"
  UpdateConceptSetRequest:
    type: object
    required:
    - etag
    properties:
      etag:
        type: string
        description: 'Etag of the concept set being modified. Validates that the concept
          set has not been modified since this etag was retrieved.'
      addedConceptSetConceptIds:
        type: array
        description: The IDs of concepts to be added to the concept set.
        items:
          "$ref": "#/definitions/ConceptSetConceptId"
      removedConceptSetConceptIds:
        type: array
        description: The IDs of concepts to be added to the concept set.
        items:
          "$ref": "#/definitions/ConceptSetConceptId"
  DataSetRequest:
    type: object
    required:
    - name
    - domainValuePairs
    properties:
      dataSetId:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      workspaceId:
        type: integer
        format: int64
      includesAllParticipants:
        type: boolean
        default: false
        description: 'Whether to include all participants or filter by cohorts'
      prePackagedConceptSet:
        type: array
        description: 'List of pre Packaged concept set'
        items:
          "$ref": "#/definitions/PrePackagedConceptSetEnum"
      conceptSetIds:
        type: array
        description: 'The ids of all concept sets in the data set'
        items:
          type: integer
          format: int64
      cohortIds:
        type: array
        description: 'The ids of all cohorts in the data set'
        items:
          type: integer
          format: int64
      domainValuePairs:
        type: array
        description: 'All the selected domain/value pairs in the data set'
        items:
          "$ref": "#/definitions/DomainValuePair"
  PrePackagedConceptSetEnum:
    type: string
    enum:
    - NONE
    - PERSON
    - SURVEY
    - FITBIT
    - FITBIT_HEART_RATE_SUMMARY
    - FITBIT_HEART_RATE_LEVEL
    - FITBIT_ACTIVITY
    - FITBIT_INTRADAY_STEPS
    - FITBIT_SLEEP_DAILY_SUMMARY
    - FITBIT_SLEEP_LEVEL
    - WHOLE_GENOME
    - BOTH
    - ZIP_CODE_SOCIOECONOMIC
  DataSetExportRequest:
    type: object
    required:
    - dataSetRequest
    - notebookName
    - newNotebook
    properties:
      dataSetRequest:
        "$ref": "#/definitions/DataSetRequest"
      notebookName:
        type: string
      newNotebook:
        type: boolean
        default: false
      kernelType:
        "$ref": "#/definitions/KernelTypeEnum"
      generateGenomicsAnalysisCode:
        type: boolean
        default: false
      genomicsAnalysisTool:
        type: string
        default: NONE
        enum:
          - NONE
          - PLINK
          - HAIL

  MarkDataSetRequest:
    type: object
    properties:
      id:
        type: integer
        format: int64
      resourceType:
        "$ref": "#/definitions/ResourceType"
  ResourceType:
    type: string
    enum:
    - NOTEBOOK
    - COHORT
    - COHORT_SEARCH_GROUP
    - COHORT_SEARCH_ITEM
    - COHORT_REVIEW
    - CONCEPT_SET
    - DATASET
    - WORKSPACE
  KernelTypeEnum:
    type: string
    enum:
    - Python
    - R
  DomainValuePair:
    type: object
    properties:
      domain:
        description: 'Domain corresponding to an OMOP table.'
        "$ref": "#/definitions/Domain"
      value:
        type: string
  DataSet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      includesAllParticipants:
        type: boolean
        default: false
      description:
        type: string
      workspaceId:
        type: integer
        format: int64
      lastModifiedBy:
        type: string
        description: The user who last modified this resource.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      conceptSets:
        type: array
        description: 'All concept sets in the data set'
        items:
          "$ref": "#/definitions/ConceptSet"
      cohorts:
        type: array
        description: 'All cohorts in the data set'
        items:
          "$ref": "#/definitions/Cohort"
      domainValuePairs:
        type: array
        description: 'All the selected domain/value pairs in the data set'
        items:
          "$ref": "#/definitions/DomainValuePair"
      prePackagedConceptSet:
        type: array
        description: 'List of pre Packaged concept set'
        items:
          "$ref": "#/definitions/PrePackagedConceptSetEnum"
  DataSetListResponse:
    type: object
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/DataSet"
  KernelTypeResponse:
    type: object
    properties:
      kernelType:
        "$ref": "#/definitions/KernelTypeEnum"
  DataSetCodeResponse:
    type: object
    properties:
      kernelType:
        "$ref": "#/definitions/KernelTypeEnum"
      code:
        type: string
        description: The code required to generate the query for the data set.
  DataSetQuery:
    type: object
    required:
    - domain
    - query
    properties:
      domain:
        description: 'Domain corresponding to an OMOP table that can contain rows
          for the concepts in this concept set. Note that the Domain values RACE,
          GENDER, and ETHNICITY are not allowed here; it makes sense to specify concepts
          in these domains in cohort criteria, but there isn''t much value in having
          concept sets defined for them.'
        "$ref": "#/definitions/Domain"
      query:
        type: string
        description: 'The parameterized BigQuery SQL string to fetch the domain-specific
          subset of the data set from the CDR.'
      namedParameters:
        type: array
        description: 'The set of named parameters to use for the SQL query.'
        items:
          "$ref": "#/definitions/NamedParameterEntry"
  NamedParameterEntry:
    type: object
    required:
    - key
    - value
    properties:
      key:
        type: string
      value:
        "$ref": "#/definitions/NamedParameterValue"
  NamedParameterValue:
    type: object
    required:
    - name
    - parameterType
    - parameterValue
    properties:
      name:
        type: string
      parameterType:
        description: 'Should be any parameter allowed by bigquery, with the exception
          of struct. The list of parameter types can be found here: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types'
        type: string
      arrayType:
        type: string
      parameterValue:
        type: object
        description: Can be any value
  DataSetPreviewRequest:
    type: object
    required:
    - domain
    properties:
      domain:
        "$ref": "#/definitions/Domain"
      includesAllParticipants:
        type: boolean
        default: false
        description: 'Whether to include all participants or filter by cohorts'
      prePackagedConceptSet:
        type: array
        items:
          "$ref": "#/definitions/PrePackagedConceptSetEnum"
      conceptSetIds:
        type: array
        description: 'The ids of all concept sets in the data set'
        items:
          type: integer
          format: int64
      cohortIds:
        type: array
        description: 'The ids of all cohorts in the data set'
        items:
          type: integer
          format: int64
      values:
        type: array
        description: 'All the selected values in the data set'
        items:
          type: string
  DataSetPreviewResponse:
    type: object
    properties:
      domain:
        "$ref": "#/definitions/Domain"
      values:
        type: array
        items:
          "$ref": "#/definitions/DataSetPreviewValueList"
  DataSetPreviewValueList:
    type: object
    properties:
      value:
        type: string
        description: Value selected by user which will act as column header in preview
          table
      queryValue:
        type: array
        items:
          type: string
  DomainCardResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/DomainCard"
  CardCount:
    type: object
    required:
      - domain
      - name
      - count
    properties:
      domain:
        description: the domain ID
        "$ref": "#/definitions/Domain"
      name:
        description: display name of the domain
        type: string
      count:
        description: number of matched term counts in this domain
        type: integer
        format: int64
  CardCountResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/CardCount"
  ValueSet:
    type: object
    properties:
      domain:
        description: 'Domain corresponding to an OMOP table.'
        "$ref": "#/definitions/Domain"
      survey:
        description: 'Survey corresponding to an OMOP table.'
        "$ref": "#/definitions/Surveys"
      values:
        type: array
        items:
          "$ref": "#/definitions/DomainValue"
  DomainValuesResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/DomainWithDomainValues"
  DomainWithDomainValues:
    type: object
    description: 'Domain with list of domain values map to various column names in OMOP.'
    required:
    - value
    properties:
      domain:
        description: The domain for this list of values.
        type: string
      items:
        type: array
        items:
          "$ref": "#/definitions/DomainValue"
  DomainValue:
    type: object
    description: 'Domain values map to various column names in OMOP.'
    required:
    - value
    properties:
      value:
        description: The user facing display name for the value.
        type: string
  ReadOnlyNotebookResponse:
    type: object
    properties:
      html:
        type: string
  SurveysResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/SurveyModule"
  CreateAccountRequest:
    type: object
    properties:
      profile:
        "$ref": "#/definitions/Profile"
      captchaVerificationToken:
        description: Token generated by captcha service once user successfully completes
          captcha
        type: string
      termsOfServiceVersion:
        type: integer
        format: int32
        description: 'Optional version of the TOS that the user has acknowledged during
          the sign-up flow. If null, the system assumes that the user has not acknowledged
          any TOS during sign-up.'
  DuplicateCohortRequest:
    type: object
    properties:
      originalCohortId:
        type: integer
        format: int64
      newName:
        type: string
  ResendWelcomeEmailRequest:
    type: object
    required:
    - username
    - creationNonce
    properties:
      username:
        type: string
        description: Username of account to resend welcome email to
      creationNonce:
        type: string
        description: The nonce returned from the account creation API.
  SendBillingSetupEmailRequest:
    type: object
    properties:
      phone:
        type: string
        description: User contact phone
      institution:
        type: string
        description: The insitution of the user.
      isNihFunded:
        type: boolean
        description: Whether its NIH Funded research
  UpdateContactEmailRequest:
    type: object
    required:
    - contactEmail
    - username
    - creationNonce
    properties:
      contactEmail:
        type: string
        description: Email to update contact email
      username:
        type: string
        description: Username for account.
      creationNonce:
        type: string
        description: The nonce returned from the account creation API.
  NihToken:
    required:
    - jwt
    type: object
    properties:
      jwt:
        type: string
        description: the encoded/signed JWT
  RasLinkRequestBody:
    required:
    - authCode
    - redirectUrl
    type: object
    properties:
      authCode:
        type: string
        description: 'the standard OAuth authorization code from RAS that we can use to exchange
        access token.'
      redirectUrl:
        type: string
        description: 'The redirect url that was used when generating the authorization code.'
        example: "https://all-of-us-workbench-test.appspot.com/ras-callback"
  AdminTableUser:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      username:
        type: string
      accessTierShortNames:
        description: Short names of access tiers available to the user.
        type: array
        items:
          type: string
      givenName:
        type: string
      familyName:
        type: string
      disabled:
        type: boolean
        default: false
      contactEmail:
        type: string
      institutionName:
        description: Display name of the user's affiliated institution, if it exists
        type: string
      institutionShortName:
        description: Short name of the user's affiliated institution, if it exists
        type: string
      firstSignInTime:
        type: integer
        format: int64
      creationTime:
        type: integer
        format: int64
      twoFactorAuthBypassTime:
        type: integer
        format: int64
      eraCommonsBypassTime:
        type: integer
        format: int64
      rasLinkLoginGovBypassTime:
        type: integer
        format: int64
      complianceTrainingBypassTime:
        type: integer
        format: int64
      ctComplianceTrainingBypassTime:
        type: integer
        format: int64
      duccBypassTime:
        type: integer
        format: int64

  Profile:
    type: object
    required:
    - username
    properties:
      userId:
        description: researchallofus userId
        type: integer
        format: int64
      username:
        readOnly: true
        description: 'The username prefix, e.g. "gjordan". Note that this is different
          from the use of "username" elsewhere in the RW codebase, where username represents
          the full GSuite email address.'
        type: string
      creationNonce:
        description: 'A value which can be used to secure API calls during the account
          creation flow, prior to account login.'
        type: string
      contactEmail:
        description: email address that can be used to contact the user
        type: string
      firstSignInTime:
        type: integer
        format: int64
      accessTierShortNames:
        description: Short names of access tiers available to the user.
        type: array
        items:
          type: string
      tierEligibilities:
        type: array
        description: User eligibility of each acces tier based on their institution's tier requirements.
        items:
          "$ref": "#/definitions/UserTierEligibility"
      degrees:
        type: array
        items:
          "$ref": "#/definitions/Degree"
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string
      professionalUrl:
        description: the link to the user's professional url
        type: string
      authorities:
        description: authorities granted to this user
        type: array
        items:
          "$ref": "#/definitions/Authority"
      pageVisits:
        description: pages user has visited
        type: array
        items:
          "$ref": "#/definitions/PageVisit"
      demographicSurveyCompletionTime:
        type: integer
        format: int64
        description: Timestamp when the user completed a demographic survey in milliseconds
          since the UNIX epoch.
      disabled:
        type: boolean
        default: false
      areaOfResearch:
        type: string
      verifiedInstitutionalAffiliation:
        description: 'The institution the user is verified to be affiliated with,
          based on their email. Will be required for new users when this feature is
          enabled in all environments.'
        "$ref": "#/definitions/VerifiedInstitutionalAffiliation"
      demographicSurvey:
        "$ref": "#/definitions/DemographicSurvey"
      eraCommonsLinkedNihUsername:
        type: string
        description: The user's NIH username
      eraCommonsLinkExpireTime:
        type: integer
        description: The FireCloud-calculated expiration time
        format: int64
        default: 0
      duccSignedVersion:
        type: integer
        format: int32
        description: Version of the data user code of conduct agreement that the user last signed.
      duccSignedInitials:
        type: string
        description: The initials used for the user's most recent signing of the DUCC
      duccCompletionTimeEpochMillis:
        type: integer
        format: int64
        description: The date of the user's most recent signature of the DUCC
      address:
        "$ref": "#/definitions/Address"
      freeTierUsage:
        type: number
        format: double
      freeTierDollarQuota:
        type: number
        format: double
      latestTermsOfServiceVersion:
        type: integer
        format: int32
        description: 'Version of the terms of service that the user last acknowledged.
          May be null if the user has never acknowledged the Terms of Service.'
      latestTermsOfServiceTime:
        type: integer
        format: int64
        description: 'Timestamp when the user last acknowledged the terms of service.
          May be null if the user has never acknowledged the Terms of Service.'
      rasLinkLoginGovUsername:
        type: string
        description: The user's identity name in login.gov.
      accessModules:
        type: object
        properties:
          modules:
            type: array
            items:
              "$ref": "#/definitions/AccessModuleStatus"
      demographicSurveyV2:
        $ref: '#/definitions/DemographicSurveyV2'
      newUserSatisfactionSurveyEligibility:
        type: boolean

  AccessModuleStatus:
    type: object
    required:
      - moduleName
    properties:
      moduleName:
        "$ref": "#/definitions/AccessModule"
      completionEpochMillis:
        type: integer
        format: int64
        description: When this module completed if applicable
      expirationEpochMillis:
        type: integer
        format: int64
        description: When this module expired or will expire if applicable.
      bypassEpochMillis:
        type: integer
        format: int64
        description: When this module is bypassed if applicable

  DemographicSurvey:
    type: object
    properties:
      race:
        type: array
        items:
          "$ref": "#/definitions/Race"
      ethnicity:
        "$ref": "#/definitions/Ethnicity"
      identifiesAsLgbtq:
        type: boolean
      lgbtqIdentity:
        type: string
      genderIdentityList:
        type: array
        items:
          "$ref": "#/definitions/GenderIdentity"
      sexAtBirth:
        type: array
        items:
          "$ref": "#/definitions/SexAtBirth"
      yearOfBirth:
        type: number
      education:
        "$ref": "#/definitions/Education"
      disability:
        "$ref": "#/definitions/Disability"
  Address:
    type: object
    properties:
      streetAddress1:
        type: string
      streetAddress2:
        type: string
      zipCode:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
  StackTraceElement:
    description: ''
    required:
    - className
    - methodName
    - fileName
    - lineNumber
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number
  RuntimeStatus:
    type: string
    enum:
    - Creating
    - Running
    - Updating
    - Error
    - Stopping
    - Stopped
    - Starting
    - Deleting
    - Deleted
    - Unknown
  AppStatus:
    type: string
    enum:
      - DELETING
      - DELETED
      - ERROR
      - PROVISIONING
      - RUNNING
      - STATUS_UNSPECIFIED
      - STOPPED
      - STOPPING
  AppType:
    type: string
    enum:
      - CROMWELL
      - RSTUDIO
  DiskStatus:
    type: string
    enum:
      - Creating
      - Restoring
      - Failed
      - Ready
      - Deleting
      - Deleted
      - Unknown

  RuntimeConfigurationType:
    description: >
      The configuration type for this runtime. Namely, whether there was a user
      override of a specific cloud service type, or whether one of the preset
      system defaults was used. This distinction is meaningful for display
      purposes, and allows the user to pickup natural upgrades to the default
      configuration.
    type: string
    enum:
      - UserOverride
      - GeneralAnalysis
      - HailGenomicAnalysis
  Runtime:
    properties:
      googleProject:
        type: string
        description: The Google Project used to create the runtime. Read only.
      runtimeName:
        type: string
        description: The user-supplied name for the runtime. Read only.
      createdDate:
        type: string
        description: The date and time the runtime was created, in ISO-8601 format. Read only.
      status:
        "$ref": "#/definitions/RuntimeStatus"
        description: Runtime status. Read only.
      autopauseThreshold:
        type: integer
        description: The number of minutes of idle time to elapse before the cluster is
          autopaused. If autopause is set to false, this value is disregarded.
          A value of 0 is equivalent to autopause being turned off.
      configurationType:
        description: >
          This field is primarily for provenance purposes. Regardless of the
          configuration type, other configuration parameters should still be
          provided during creation. The API will only perform limited validation
          that the configuration type and configuration details are consistent.
        "$ref": "#/definitions/RuntimeConfigurationType"
      toolDockerImage:
        type: string
        description: The tool docker image to install. May be Dockerhub or GCR. If not
          set, a default Jupyter image will be installed.
      gceConfig:
        description: oneOf gceConfig, dataprocConfig, gceWithPdConfig will be returned
        "$ref": "#/definitions/GceConfig"
      gceWithPdConfig:
        description: oneOf gceConfig, dataprocConfig, gceWithPdConfig will be returned
        "$ref": "#/definitions/GceWithPdConfig"
      dataprocConfig:
        description: oneOf gceConfig, dataprocConfig, gceWithPdConfig will be provided
        "$ref": "#/definitions/DataprocConfig"
      errors:
        type: array
        description: The list of errors that were encountered on runtime create, if any.
        items:
          $ref: "#/definitions/RuntimeError"
  RuntimeError:
    description: Errors encountered on runtime create
    properties:
      errorMessage:
        type: string
        description: Error message
      errorCode:
        type: integer
        description: Error code
      timestamp:
        type: string
        description: timestamp for error in ISO 8601 format

  CreateAppRequest:
    description: Create APP request body
    properties:
      appType:
        "$ref": "#/definitions/AppType"
      autopauseThreshold:
        type: integer
        description: The number of minutes of idle time to elapse before the cluster is
          autopaused. If autopause is set to false, this value is disregarded.
          A value of 0 is equivalent to autopause being turned off.
      kubernetesRuntimeConfig:
        description: kubernetesRuntimeConfig will be returned
        "$ref": "#/definitions/KubernetesRuntimeConfig"
      persistentDiskRequest:
        description: Persistent disk configuration
        "$ref": "#/definitions/PersistentDiskRequest"

  App:
    properties:
      googleProject:
        type: string
        description: The Google Project used to create the app. Read only.
      appName:
        type: string
        description: The user-supplied name for the app. Read only.
      appType:
        "$ref": "#/definitions/AppType"
      createdDate:
        type: string
        description: The date and time the app was created, in ISO-8601 format. Read only.
      status:
        "$ref": "#/definitions/AppStatus"
        description: App status. Read only.
      autopauseThreshold:
        type: integer
        description: The number of minutes of idle time to elapse before the cluster is
          autopaused. If autopause is set to false, this value is disregarded.
          A value of 0 is equivalent to autopause being turned off.
      kubernetesRuntimeConfig:
        description: kubernetesRuntimeConfig will be returned
        "$ref": "#/definitions/KubernetesRuntimeConfig"
      proxyUrls:
        type: object
        description: Read only. Map of service name to proxyUrl
      diskName:
        type: string
        description: Read only. The name of the disk associated with this app
      dateAccessed:
        type: string
        description: |
          The date and time the runtime was last accessed, in ISO-8601 format.
          Date accessed is defined as the last time the runtime was created, modified, or accessed via the proxy.
      errors:
        type: array
        description: The list of errors that were encountered on APP create, if any.
        items:
          $ref: "#/definitions/KubernetesError"
      labels:
        type: object
        description: The labels of each app in the response whose key is in includeLabels in the request. Of type Map[String,String]

  KubernetesError:
      description: a kubernetes app error
      type: object
      properties:
        errorMessage:
          type: string
          description: a helpful error message
        timestamp:
          type: string
          description: timestamp for error in ISO 8601 format
        action:
          type: string
          description: the api-level action associated with the error, e.g. createApp
        source:
          type: string
          description: the internal source associated with the error
        googleErrorCode:
          type: integer
          description: if the error is associated with an external API call, the error code will be propagated here

  DiskConfig:
    description: The configuration of a persistent disk, returned in runtime responses
    type: object
    required:
      - name
      - size
      - diskType
      - blockSize
    properties:
      name:
        type: string
        description: Name of the persistent disk
      size:
        type: integer
        description: Size of persistent disk in GB
      diskType:
        $ref: "#/definitions/DiskType"
      blockSize:
        type: integer
        description: Block size of persistent disk in bytes
  UpdateRuntimeRequest:
    type: object
    required:
      - runtime
    properties:
      runtime:
        "$ref": "#/definitions/Runtime"
  UpdateDiskRequest:
    description: "Updates an existing persistent disk"
    type: object
    properties:
      labels:
        type: object
        description: The labels to be added or updated on the persistent disk. Of type Map[String,String]
      size:
        type: integer
        description: The size in GB that the persistent disk is to be updated to.
      diskType:
        $ref: "#/definitions/DiskType"
      blockSize:
        type: integer
        description: The block size in bytes that the persistent disk is to be updated to.

  KubernetesRuntimeConfig:
    description: configuration for a kubernetes app
    type: object
    required:
      - numNodes
      - machineType
      - autoscalingEnabled
    properties:
      numNodes:
        type: integer
        description: number of nodes for the kubernetes app
      machineType:
        type: string
        description: the machine type for the nodes the kubernetes app will run on
        example: n1-standard-1
      autoscalingEnabled:
        type: boolean
        description: whether or not the nodes autoscale up and down for this app

  PersistentDiskRequest:
    description: configuration to create a disk
    type: object
    properties:
      name:
        type: string
        description: The name of the disk. This can reference an existing disk.
      size:
        type: integer
        description: the size of the disk, if this is a creation request. Has an intelligent default otherwise
      diskType:
        $ref: "#/definitions/DiskType"
      labels:
        type: object
        description: The labels to be placed on the cluster. Of type Map[String,String]
  GceConfig:
    description: Configuration for Google Compute Engine instances.
    properties:
      diskSize:
        type: integer
        description: >
          Optional, the size in gigabytes of the disk on the GCE VM.
          Minimum size is 50GB. If unspecified, default size is 100GB.
      machineType:
        type: string
        description: >
          Optional, the machine type determines the number of CPUs and memory
          for the master node. For example "n1-standard-16"
          or "n1-highmem-64". If unspecified, defaults to creating a "n1-standard-4" machine. To decide which is right for you,
          see https://cloud.google.com/compute/docs/machine-types
      gpuConfig:
        $ref: "#/definitions/GpuConfig"
        description: >
          Optional, a config that describes the gpus associated with a runtime
  GceWithPdConfig:
    description: Configuration for Google Compute Engine instances with Persistent Disk.
    properties:
      persistentDisk:
        $ref: "#/definitions/PersistentDiskRequest"
      machineType:
        type: string
        description: >
          Optional, the machine type determines the number of CPUs and memory
          for the master node. For example "n1-standard-16"

          or "n1-highmem-64". If unspecified, defaults to creating a "n1-standard-4" machine. To decide which is right for you,

          see https://cloud.google.com/compute/docs/machine-types
      gpuConfig:
        $ref: "#/definitions/GpuConfig"
        description: >
          Optional, a config that describes the gpus associated with a runtime
  DataprocConfig:
    description: Configuration for a single Dataproc cluster.
    properties:
      numberOfWorkers:
        type: integer
        description: >
          Optional, number of workers in the cluster. Can be 0 (default), 2 or
          more. Google Dataproc does not allow 1 worker.
      masterMachineType:
        type: string
        description: >
          Optional, the machine type determines the number of CPUs and memory
          for the master node. For example "n1-standard-16"
          or "n1-highmem-64". If unspecified, defaults to creating a "n1-standard-4" machine. To decide which is right for you,
          see https://cloud.google.com/compute/docs/machine-types
      masterDiskSize:
        type: integer
        description: >
          Optional, the size in gigabytes of the disk on the master node.
          Minimum size is 50GB. If unspecified, default size is 100GB.
      workerMachineType:
        type: string
        description: >
          Optional, the machine type determines the number of CPUs and memory
          for the worker nodes. For example "n1-standard-16"
          or "n1-highmem-64". If unspecified, defaults to creating a "n1-standard-4" machine. To decide which is right for you,
          see https://cloud.google.com/compute/docs/machine-types. Ignored if numberOfWorkers is 0.
      workerDiskSize:
        type: integer
        description: >
          Optional, the size in gigabytes of the disk on the master node.
          Minimum size is 10GB. If unspecified, default size is 100GB.
          Ignored if numberOfWorkers is 0.
      numberOfWorkerLocalSSDs:
        type: integer
        description: >
          Optional, the number of local solid state disks for workers. If
          unspecified, the default number is 0.
          Ignored if numberOfWorkers is 0.
      numberOfPreemptibleWorkers:
        type: integer
        description: >
          Optional, the number of preemptible workers. If unspecified, the
          default number is 0. Ignored if numberOfWorkers is 0.
          For more information, see https://cloud.google.com/compute/docs/instances/preemptible
  GpuConfig:
    description: A config that describes the gpus associated with a runtime
    type: object
    required:
      - gpuType
      - numOfGpus
    properties:
      gpuType:
        type: string
        description: The google identifier for the gpu specs associated with this runtime, ex `nvidia-tesla-t4`. See https://cloud.google.com/compute/docs/gpus
      numOfGpus:
        type: integer
        description: The number of gpus associated with this runtime
  FileDetail:
    type: object
    required:
    - name
    - path
    - lastModifiedTime
    properties:
      name:
        type: string
        description: File Name
      path:
        type: string
        description: The path is in format of gs://bucket-name/name
      lastModifiedBy:
        type: string
        description: The user who last modified this resource.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      sizeInBytes:
        type: integer
        format: int64
        description: File size in bytes.
  ListRuntimeResponse:
    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.
    required:
    - id
    - runtimeName
    - googleProject
    - status
    - createdDate
    - labels
    - dateAccessed
    properties:
      id:
        type: integer
        description: Internal Leonardo ID of the runtime
      runtimeName:
        type: string
        description: The user-supplied name for the runtime
      googleProject:
        type: string
        description: The Google Project used to create the runtime
      status:
        "$ref": "#/definitions/RuntimeStatus"
      createdDate:
        type: string
        description: The date and time the runtime was created, in ISO-8601 format
      labels:
        type: object
        description: The labels to be placed on the runtime. Of type Map[String,String]
      dateAccessed:
        type: string
        description: |
          The date and time the runtime was last accessed, in ISO-8601 format.
          Date accessed is defined as the last time the runtime was created, modified, or accessed via the proxy.
      patchInProgress:
        type: boolean
        description: Whether there is a patch in progress on the runtime. Is used to indicate updates that require status transitions.
  ListRuntimeDeleteRequest:
    type: object
    properties:
      runtimesToDelete:
        type: array
        items:
          type: string
  RuntimeLocalizeRequest:
    type: object
    required:
    - notebookNames
    - playgroundMode
    properties:
      notebookNames:
        type: array
        description: 'Names of notebooks to localize. This is just the basename (no
          gs:// needed). This is interpreted as relative to the /notebooks directory
          within the provided workspace''s Google Cloud Storage bucket.'
        items:
          type: string
      playgroundMode:
        type: boolean
        default: false
        description: Set to true if playgroundMode needed
  RuntimeLocalizeResponse:
    type: object
    required:
    - runtimeLocalDirectory
    properties:
      runtimeLocalDirectory:
        type: string
        description: 'The directory on the notebook runtime file system where the
          requested files were localized. This is the "API" directory in Jupyter terms,
          which means it is a relative path in the Jupyter user-facing file system,
          e.g. "foo/bar.ipynb".'

  ListAppsResponse:
    type: array
    items:
      "$ref": "#/definitions/App"

  ListDisksResponse:
    type: array
    items:
      "$ref": "#/definitions/Disk"

  UsernameTakenResponse:
    type: object
    required:
    - isTaken
    properties:
      isTaken:
        description: Boolean response to whether username is already taken.
        type: boolean
        default: false
    example:
      isTaken: false

  CheckEmailRequest:
    type: object
    properties:
      contactEmail:
        description: The Institutional contact email address to check.
        type: string

  CheckEmailResponse:
    type: object
    properties:
      isValidMember:
        description: Whether the requested email address is a valid member of the institution.
        type: boolean

  WorkspaceResponse:
    type: object
    required:
    - workspace
    - accessLevel
    properties:
      workspace:
        "$ref": "#/definitions/Workspace"
      accessLevel:
        "$ref": "#/definitions/WorkspaceAccessLevel"

  AdminUserListResponse:
    type: object
    required:
    - users
    properties:
      users:
        type: array
        items:
          "$ref": "#/definitions/AdminTableUser"
  BatchSyncAccessRequest:
    type: object
    required:
    - usernames
    properties:
      usernames:
        type: array
        items:
          type: string
  BatchSyncAccessResponse:
    type: object
    properties:
      cloudTaskNames:
        description: list of Cloud task names that processing the batch update
        type: array
        items:
          type: string
  AccountDisabledStatus:
    type: object
    required:
      - disabled
    properties:
      disabled:
        description: Set to true to disable user, false otherwise
        type: boolean
  AuditBigQueryResponse:
    type: object
    properties:
      numQueryIssues:
        type: integer
        format: int32
        description: 'Number of queries issues against the Curated data repository
          which are flagged as possible audit issues. See logs/alerts for details.'
  User:
    type: object
    properties:
      email:
        description: researchallofus email address (deprecated in favor of userName)
        type: string
      userName:
        description: Unique researchallofus username (a Google account email)
        type: string
      givenName:
        description: the user's given name (e.g. Alice)
        type: string
      familyName:
        description: the user's family  name (e.g. Jones)
        type: string
  UserResponse:
    type: object
    properties:
      users:
        description: A list of users matching the provided search query.
        type: array
        items:
          "$ref": "#/definitions/User"
      nextPageToken:
        description: 'Pagination token that can be used in a subsequent calls to retrieve
          more results. If not set, there are no more results to retrieve.'
        type: string
  WorkspaceResourceResponse:
    type: array
    items:
      "$ref": "#/definitions/WorkspaceResource"
  WorkspaceResource:
    type: object
    required:
      - workspaceNamespace
      - workspaceFirecloudName
      - workspaceBillingStatus
      - cdrVersionId
      - accessTierShortName
      - permission
      - lastModifiedEpochMillis
      - adminLocked
    properties:
      workspaceId:
        type: integer
        format: int64
      workspaceNamespace:
        type: string
      workspaceFirecloudName:
        type: string
      workspaceBillingStatus:
        "$ref": "#/definitions/BillingStatus"
      cdrVersionId:
        type: string
      accessTierShortName:
        type: string
      permission:
        type: string
      cohort:
        "$ref": "#/definitions/Cohort"
      cohortReview:
        "$ref": "#/definitions/CohortReview"
      notebook:
        "$ref": "#/definitions/FileDetail"
      conceptSet:
        "$ref": "#/definitions/ConceptSet"
      dataSet:
        "$ref": "#/definitions/DataSet"
      lastModifiedBy:
        description: The user who last modified this resource.
        type: string
      lastModifiedEpochMillis:
        description: the resource's last modified time, in milliseconds since the epoch
        type: integer
        format: int64
      adminLocked:
        type: boolean
        default: false
        description: Whether an administrator has prevented most actions on the workspace for all users
  RecentResourceRequest:
    type: object
    properties:
      notebookName:
        type: string
  RecentWorkspace:
    type: object
    properties:
      workspace:
        "$ref": "#/definitions/Workspace"
      accessLevel:
        "$ref": "#/definitions/WorkspaceAccessLevel"
  RecentWorkspaceResponse:
    type: array
    items:
      "$ref": "#/definitions/RecentWorkspace"
  NotebookLockingMetadataResponse:
    type: object
    properties:
      lastLockedBy:
        type: string
      lockExpirationTime:
        description: The time when the lock will expire, in ms from the Unix epoch
        type: integer
        format: int64
  BillingStatus:
    type: string
    description: 'Is the billing account associated with this workspace available
      to incur costs?  For a free tier project, this indicates whether a user has
      an available balance in their quota.  For a user-provided billing account, this
      corresponds to whether payment is valid and up to date.'
    enum:
    - ACTIVE
    - INACTIVE
  BillingAccountType:
    type: string
    description: 'Whether a billing project is provided by the Researcher Workbench
      as a Free Tier project subject to quota checks, or the project has a billing
      account provided by the user'
    enum:
    - FREE_TIER
    - USER_PROVIDED
  BillingProjectBufferStatus:
    type: object
    required:
      - availablePerTier
    properties:
      availablePerTier:
        type: array
        items:
          "$ref": "#/definitions/AvailableBufferPerTier"
  AvailableBufferPerTier:
    type: object
    properties:
      accessTierShortName:
        description: 'The shortName of an access tier'
        type: string
      availableProjects:
        description: 'Count of the AVAILABLE billing buffer projects in this access tier'
        type: integer
        format: int64
  StatusAlert:
    type: object
    properties:
      statusAlertId:
        description: The primary key of the status alert in the database
        type: integer
        format: int64
      title:
        description: 'Title of the status alert, e.g. ''Service Incident: December
          6, 2019'''
        type: string
      message:
        description: 'The actual message of the status alert, e.g. ''AoU RW is down
          because GCP is down'''
        type: string
      link:
        description: 'A URL linking to an incident report where users can read more'
        type: string
  SumologicEgressEventRequest:
    type: object
    properties:
      eventsJsonArray:
        type: string
        description: 'A JSON string containing an array of JSON-encoded egress events.
          See the SumologicEgressEvent definition for the expected schema of each event.'
  SumologicEgressEvent:
    type: object
    required:
      - project_name
      - vm_prefix
    properties:
      environment:
        description: The AoU environment in which the high-egress event occurred.
        type: string
        enum:
        - test
        - perf
        - staging
        - stable
        - preprod
        - prod
      time_window_duration:
        description: 'The duration of the time window during which the high-egress
          event occurred, in seconds.'
        type: integer
        format: int64
      time_window_start:
        description: Beginning of the time window, in milliseconds since Epoch.
        type: integer
        format: int64
      egress_mib:
        description: The total amount of egress detected during the window, in
          mebibytes (MiB). This total subsumes the per-machine type egress
          values provided here. The egress threshold is triggered against this
          value.
        type: number
        format: double
      gce_egress_mib:
        description: The amount of egress detected via raw GCE VM during the
          window, in mebibytes (MiB). Does NOT include Dataproc egress (Dataproc
          technically uses GCE).
        type: number
        format: double
      dataproc_master_egress_mib:
        description: The amount of egress detected via Dataproc master nodes
          during the window, in mebibytes (MiB).
        type: number
        format: double
      dataproc_worker_egress_mib:
        description: The amount of egress detected via Dataproc worker nodes
          during the window, in mebibytes (MiB).
        type: number
        format: double
      egress_mib_threshold:
        description: The threshold value for which this egress triggered an alert,
          in mebibytes (MiB).
        type: number
        format: double
      project_name:
        description: 'The Google Cloud project name associated with the workspace,
          e.g. aou-rw-6b66533d. Always present.'
        type: string
      vm_prefix:
        description: Prefix of the research VM(s) that generated egress, including
          the user ID, e.g. all-of-us-260.
        type: string
  ListEgressEventsRequest:
    type: object
    properties:
      sourceUserEmail:
        type: string
        description: >
          If specified, only return events which were caused by this user. Should
          include the email domain of the user.
      sourceWorkspaceNamespace:
        type: string
        description: >
          If specified, only return event which were detected within the given
          workspace.
      pageSize:
        type: integer
        description: >
          The number of egress events to return, per page. If unspecified, a
          system default is used.
      pageToken:
        type: string
        description: >
          Pagination token used to receive the next page of results. Provide this
          value from the nextPageToken of a prior response.
  ListEgressEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          "$ref": "#/definitions/EgressEvent"
      nextPageToken:
        type: string
        description: >
          If present, this token can be provided to retrieve the next page of results.
          If null or empty, there are no further pages in the result stream.
      totalSize:
        type: integer
        description: Total size of the result set.
  UpdateEgressEventRequest:
    type: object
    properties:
      egressEvent:
        "$ref": "#/definitions/EgressEvent"
  AuditEgressEventRequest:
    type: object
    description: Placeholder request object for future extension.
  AuditEgressRuntimeLogEntry:
    type: object
    properties:
      timestamp:
        type: string
        description: Time at which the log message was written, in ISO 8601 format.
      message:
        type: string
        description: The log message text payload.
  AuditEgressRuntimeLogGroup:
    type: object
    properties:
      name:
        type: string
        description: Display name for this log group
      pattern:
        type: string
        description: Pattern used to match the log message text
      entries:
        type: array
        description: >
          The log entries matching the specified pattern, in descending timestamp
          order. May be truncated.
        items:
          "$ref": "#/definitions/AuditEgressRuntimeLogEntry"
      totalEntries:
        type: integer
        description: >
          The total number of log entries matching this pattern. To determine
          whether entries are truncated, compare against len(entries).
  AuditEgressEventResponse:
    type: object
    properties:
      egressEvent:
        "$ref": "#/definitions/EgressEvent"
      sumologicEvent:
        type: object
        description: >
          Original event received from Sumologic. Should be treated as an opaque
          JSON payload, as the event schema may change over time; but generally
          will correspond to SumologicEgressEvent.
      runtimeLogGroups:
        type: array
        description: >
          A set of heuristically relevant log pattern/configuration groups for
          investigating the cause of an egress event.
        items:
          "$ref": "#/definitions/AuditEgressRuntimeLogGroup"
  EgressEventStatus:
    type: string
    description: Workbench processing status for this egress event.
    enum:
    - PENDING
    - REMEDIATED
    - VERIFIED_FALSE_POSITIVE
  EgressEvent:
    type: object
    properties:
      egressEventId:
        type: string
        description: Unique identifier for this egress event.
      sourceUserEmail:
        type: string
        description: Researcher email for the user associated with this event, if known.
      sourceWorkspaceNamespace:
        type: string
        description: Workspace in which the event fired, if known.
      sourceGoogleProject:
        type: string
        description: Google project in which the event fired, if known.
      egressMegabytes:
        type: number
        format: double
        description: Volume of egress which triggered the alert, in Megabytes.
      egressWindowSeconds:
        type: number
        description: Window duration over which the egress was detected, in seconds.
      creationTime:
        type: string
        description: Time at which the egress event was recorded in the RW DB, in ISO 8601 format.  This is NOT the event time itself.
      timeWindowStartEpochMillis:
        type: integer
        format: int64
        description: The beginning of the time window in which egress was detected, in epoch milliseconds.
      timeWindowEndEpochMillis:
        type: integer
        format: int64
        description: The end of the time window in which egress was detected, in epoch milliseconds.
      status:
        $ref: "#/definitions/EgressEventStatus"
  ArrayOfLong:
    type: array
    items:
      type: integer
      format: int64
  Institution:
    type: object
    description: 'Represents an institution which has been approved to validate researchers
      who wish to use the system, including the email patterns which we use to validate
      users.'
    required:
    - shortName
    - displayName
    - organizationTypeEnum
    properties:
      shortName:
        type: string
        description: A short unique name for the Institution used as an identifier,
          such as 'VUMC'
      displayName:
        type: string
        description: A more descriptive name for the Institution, such as 'Vanderbilt
          University Medical Center'
      organizationTypeEnum:
        "$ref": "#/definitions/OrganizationType"
        description: 'The Organization Type of this institution if it is one of the
          enumerated OrganizationTypes, or OrganizationType.OTHER if it is not'
      organizationTypeOtherText:
        type: string
        description: 'The detailed Organization Type of this institution, as text,
          if its enumerated type is OTHER'
      requestAccessUrl:
        type: string
        description: Optional url for institution's handling their own access requests
      userInstructions:
        description: Institution-specific instructions for users to be sent in email
        type: string
      tierConfigs:
        type: array
        description: List of requirements on how members can get access for each tier.
        items:
          "$ref": "#/definitions/InstitutionTierConfig"
  PublicInstitutionDetails:
    type: object
    description: 'Represents an institution which has been approved to validate researchers
      who wish to use the system. Does not include the sensitive email patterns used
      to validate users.'
    required:
    - shortName
    - displayName
    - organizationTypeEnum
    properties:
      shortName:
        type: string
        description: A short unique name for the Institution used as an identifier,
          such as 'VUMC'
      displayName:
        type: string
        description: A more descriptive name for the Institution, such as 'Vanderbilt
          University Medical Center'
      organizationTypeEnum:
        "$ref": "#/definitions/OrganizationType"
        description: 'The Organization Type of this institution if it is one of the
          enumerated OrganizationTypes, or OrganizationType.OTHER if it is not'
      registeredTierMembershipRequirement:
        "$ref": "#/definitions/InstitutionMembershipRequirement"
        description: 'Type of Registered tier requirement the institution has signed, email domains
         or restricted to a defined set of specific researchers'
      requestAccessUrl:
        type: string
        description: Optional url for institution's handling their own access requests
  InstitutionUserInstructions:
    type: object
    description: Institution-specific instructions for users to perform after registration.
    required:
      - institutionShortName
      - instructions
    properties:
      institutionShortName:
        type: string
        description: The short unique name for the Institution used as an identifier, such as 'VUMC'.
      instructions:
        type: string
        description: Text to include in an email sent to this Institution's users after they are registered.
  GetInstitutionsResponse:
    type: object
    required:
    - institutions
    properties:
      institutions:
        type: array
        items:
          "$ref": "#/definitions/Institution"
  GetPublicInstitutionDetailsResponse:
    type: object
    required:
    - institutions
    properties:
      institutions:
        type: array
        items:
          "$ref": "#/definitions/PublicInstitutionDetails"
  OrganizationType:
    type: string
    description: A categorization of institutions, derived from CAPS requirements
    enum:
    - ACADEMIC_RESEARCH_INSTITUTION
    - INDUSTRY
    - EDUCATIONAL_INSTITUTION
    - HEALTH_CENTER_NON_PROFIT
    - OTHER

  InstitutionMembershipRequirement:
    type: string
    description: 'Institution email matching requirements for tier access.
      We can match on email DOMAINS or individual email ADDRESSES.  NO_ACCESS indicates that the
      institution does not provide access to the tier at all, and UNINITIALIZED is for unsaved
      institutions in the admin UI.'
    enum:
      - DOMAINS
      - ADDRESSES
      - NO_ACCESS
      - UNINITIALIZED

  InstitutionalRole:
    type: string
    description: 'The union of the roles researchers can have at Institutions of all
      OrganizationTypes, derived from CAPS requirements.'
    enum:
    - UNDERGRADUATE
    - TRAINEE
    - FELLOW
    - EARLY_CAREER
    - MID_CAREER
    - LATE_CAREER
    - PRE_DOCTORAL
    - POST_DOCTORAL
    - SENIOR_RESEARCHER
    - TEACHER
    - STUDENT
    - ADMIN
    - PROJECT_PERSONNEL
    - OTHER
  VerifiedInstitutionalAffiliation:
    type: object
    required:
    - institutionShortName
    - institutionalRoleEnum
    properties:
      institutionShortName:
        type: string
        description: The unique Short Name of the Institution where the user has a
          Verified Affiliation, such as 'VUMC'
      institutionDisplayName:
        type: string
        description: 'The longer, more descriptive name of the Institution where the
          user has a Verified Affiliation, such as ''Vanderbilt University Medical
          Center'''
      institutionRequestAccessUrl:
        type: string
        description: Optional url for institution's handling their own access requests
      institutionalRoleEnum:
        "$ref": "#/definitions/InstitutionalRole"
        description: 'The user''s Institutional Role at this Institution if it is
          one of the enumerated InstitutionalRoles, or InstitutionalRole.OTHER if
          it is not'
      institutionalRoleOtherText:
        type: string
        description: 'The user''s detailed Institutional Role at this Institution,
          as text, if its enumerated type is OTHER'
  InstitutionTierConfig:
    type: object
    description: Institution-specific access tier membership requirement and configs.
    required:
      - accessTierShortName
      - membershipRequirement
    properties:
      accessTierShortName:
        type: string
        description: The short unique name for the access tier.
      membershipRequirement:
        "$ref": "#/definitions/InstitutionMembershipRequirement"
        description: Type of Institution requirement per tier. Domain or restrict to email addresses or none.
      eraRequired:
        type: boolean
        description: Whether eRA commons is required for members in the institution for this tier.
      emailDomains:
        type: array
        items:
          type: string
      emailAddresses:
        type: array
        items:
          type: string
  WorkspaceAdminView:
    description: Admin-visible metadata about a workspace.
    type: object
    properties:
      workspace:
        "$ref": "#/definitions/Workspace"
      workspaceDatabaseId:
        description: >
          ID used in the workspace table in the MySQL database. Useful
          for DB queries and Action Audit searches in Stackdriver Logging and
          BigQuery.
        type: integer
        format: int64
      collaborators:
        type: array
        description: List of users who own or collaborate on this workspace.
        items:
          "$ref": "#/definitions/WorkspaceUserAdminView"
      resources:
        "$ref": "#/definitions/AdminWorkspaceResources"
  AdminWorkspaceResources:
    description: 'A summary of application-level resources associated with a workspace.
      Includes data about Cohort Builder objects, analysis runtimes, and cloud-storage
      contents.'
    type: object
    properties:
      workspaceObjects:
        "$ref": "#/definitions/AdminWorkspaceObjectsCounts"
      cloudStorage:
        "$ref": "#/definitions/AdminWorkspaceCloudStorageCounts"
      runtimes:
        type: array
        items:
          "$ref": "#/definitions/ListRuntimeResponse"
  AdminWorkspaceObjectsCounts:
    type: object
    properties:
      cohortCount:
        type: integer
      conceptSetCount:
        type: integer
      datasetCount:
        type: integer
  AdminWorkspaceCloudStorageCounts:
    type: object
    properties:
      storageBucketPath:
        type: string
        description: Full gs:// path to the workspace-associated GCS bucket.
      notebookFileCount:
        type: integer
      nonNotebookFileCount:
        type: integer
      storageBytesUsed:
        type: integer
        format: int64
  CloudStorageTraffic:
    type: object
    properties:
      receivedBytes:
        type: array
        items:
          "$ref": "#/definitions/TimeSeriesPoint"
  TimeSeriesPoint:
    type: object
    description: Represents a floating-point valued time series point.
    properties:
      timestamp:
        type: integer
        format: int64
        description: 'Timestamp, in milliseconds since Unix epoch, of the end point
          of the time window covered by this time series point.'
      value:
        type: number
        format: double
  TableQuery:
    type: object
    description: 'A specification for retrieving data from a single table.'
    required:
    - tableName
    properties:
      tableName:
        description: 'The name of a table containing a person_id column to retrieve
          data from (e.g. person, observation); should be in the OMOP CDM 5.2 schema.'
        externalDocs:
          description: OMOP CDM 5.2 schema definition
          url: https://github.com/OHDSI/CommonDataModel/blob/v5.2.0/PostgreSQL/OMOP%20CDM%20ddl%20-%20PostgreSQL.sql
        type: string
      columns:
        description: 'An array of columns to retrieve from the table, taken from the
          table specified above. Defaults to all columns.'
        type: array
        items:
          type: string
      filters:
        description: 'Filters on the results. Only results matching the criteria specified
          in the filters will be returned. If both filters and conceptSetName are
          specified, results must match both.'
        "$ref": "#/definitions/ResultFilters"
      conceptSetName:
        description: 'A name of a concept set in the workspace used to filter results;
          results must match one of the concepts in the named concept set. If both
          filters and conceptSetName are specified, results must match both.'
        type: string
      orderBy:
        description: 'An array of columns to sort the resulting data by, taken from
          the table specified above, each one optionally enclosed in "DESCENDING()"
          for descending sort order. Default sort order is "person_id" (in ascending
          order) followed by the ID of the specified table (in ascending order.)'
        type: array
        items:
          type: string
  AnnotationQuery:
    type: object
    description: 'A specification for retrieving annotation values or review statuses
      entered for participants.'
    properties:
      columns:
        description: 'An array of names of annotations to retrieve about participants,
          or "review_status" for the cohort review status of the participant or "person_id"
          for the ID of the participant. Defaults to "person_id", "review_status",
          and the names of all defined annotations in the cohort review. This is only
          valid in combination with the use of cohortName above. Only data for participants
          in the cohort review will be returned; if no cohort review has been created,
          no results will be returned.'
        type: array
        items:
          type: string
      orderBy:
        description: 'An array of names of annotations, or "review status" or "person_id",
          each one optionally enclosed in "DESCENDING()" for descending sort order.
          Specifies the order that results should be returned. Defaults to "person_id"
          (in ascending order). Annotations referenced in orderBy must also be present
          in columns.'
        type: array
        items:
          type: string
  ResultFilters:
    type: object
    description: 'A list of filters applied to the results of a query. Only results
      matching the filter criteria should be returned. Exactly one of "allOf", "anyOf",
      and "columnFilter" should be set.'
    properties:
      if_not:
        description: 'Set to true if a result matching allOf or anyOf below should
          result in a result *not* being returned.'
        type: boolean
        default: false
      allOf:
        description: 'A list of result filters. All filters matching means a result
          should be returned (or not returned if "not" is true.)'
        type: array
        items:
          "$ref": "#/definitions/ResultFilters"
      anyOf:
        description: 'A list of column filters. Any filters matching means a result
          should be returned (or not returned if "not" is true.)'
        type: array
        items:
          "$ref": "#/definitions/ResultFilters"
      columnFilter:
        description: 'A filter on a column in the table. Only a result matching this
          filter should be returned (or not returned if "not" is true.)'
        "$ref": "#/definitions/ColumnFilter"
  ColumnFilter:
    type: object
    required:
    - columnName
    description: 'A filter applied to the results of a query, based on a column value
      in a table. Only results matching the filter will be returned. One (and only
      one) of the value columns should be populated. values and valueNumbers should
      only be used in conjunction with the "in" operator.'
    properties:
      columnName:
        description: 'The name of the column to filter on.'
        type: string
      operator:
        description: 'The operator to use when comparing values. Defaults to EQUAL.
          If the "in" operator is used, either values or valueNumbers should be populated.'
        "$ref": "#/definitions/Operator"
        externalDocs:
          description: Documentation of BigQuery SQL operators
          url: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#comparison-operators
      value:
        description: 'A string to use in comparisons (case-sensitive).'
        type: string
      values:
        description: 'An array of strings to use in comparisons (case-sensitive);
          used with the "in" operator.'
        type: array
        items:
          type: string
      valueDate:
        description: 'A date (yyyy-MM-dd) or datetime (yyyy-MM-dd HH:mm:ss zzz) value
          to use in comparisons.'
        type: string
      valueNumber:
        description: 'A number to use in comparisons (either integer or floating point.)'
        type: number
      valueNumbers:
        description: 'An array of numbers to use in comparisons (used with the "in"
          operator)'
        type: array
        items:
          type: number
      valueNull:
        description: 'Set to true if the column value should be compared to null.'
        type: boolean
  CohortStatus:
    type: string
    description: possible values indicating whether participants are in or out of
      the cohort
    enum:
    - EXCLUDED
    - INCLUDED
    - NEEDS_FURTHER_REVIEW
    - NOT_REVIEWED
  Operator:
    type: string
    enum:
    - EQUAL
    - NOT_EQUAL
    - LESS_THAN
    - GREATER_THAN
    - LESS_THAN_OR_EQUAL_TO
    - GREATER_THAN_OR_EQUAL_TO
    - LIKE
    - IN
    - BETWEEN
  StandardConceptFilter:
    type: string
    description: filter on whether standard, non-standard, or all concepts should
      be returned\
    enum:
    - ALL_CONCEPTS
    - STANDARD_CONCEPTS
    - NON_STANDARD_CONCEPTS
    - STANDARD_OR_CODE_ID_MATCH
  MatchType:
    type: string
    description: match column type on concept search
    enum:
    - CONCEPT_CODE
    - CONCEPT_ID
    - CONCEPT_NAME
  Concept:
    description: A concept describing a type of entity (e.g. measurement, observation,
      procedure.)
    type: object
    required:
    - conceptId
    - conceptName
    - domainId
    - vocabularyId
    - conceptCode
    - conceptClassId
    - standardConcept
    - countValue
    - prevalence
    properties:
      conceptId:
        description: ID of the concept
        type: integer
        format: int64
      conceptName:
        description: Name of the concept
        type: string
      domainId:
        description: Domain ID of the concept (e.g. Observation)
        type: string
      vocabularyId:
        description: Vocabulary ID of the concept (e.g. SNOMED)
        type: string
      conceptCode:
        description: Code for the concept in its vocabulary (e.g. G8107)
        type: string
      conceptClassId:
        description: Class of the concept (e.g. Ingredient)
        type: string
      standardConcept:
        description: True if this is a standard concept, false otherwise
        type: boolean
        default: false
      countValue:
        description: Count of participants matching this concept in the CDR
        type: integer
        format: int64
      prevalence:
        description: Prevalence among participants in the CDR (a percentage of the
          total)
        type: number
        format: float
      conceptSynonyms:
        description: concept synonym names
        type: array
        items:
          type: string
  ConceptSynonym:
    type: object
    description: concept synonym
    required:
    - conceptId
    - conceptSynonymName
    - languageConceptId
    properties:
      conceptId:
        description: concept id
        type: integer
        format: int64
      conceptSynonymName:
        description: concept synonym name
        type: string
      languageConceptId:
        description: language concept id
        type: integer
        format: int64
  CreateReviewRequest:
    type: object
    required:
    - size
    - name
    properties:
      size:
        description: A sample size to review
        type: integer
      name:
        description: A name for the cohort review
        type: string
  CohortReview:
    type: object
    required:
    - cohortReviewId
    - cohortId
    - cdrVersionId
    - creationTime
    - matchedParticipantCount
    - reviewStatus
    - cohortDefinition
    - cohortName
    properties:
      cohortReviewId:
        type: integer
        format: int64
      cohortId:
        type: integer
        format: int64
      cdrVersionId:
        type: integer
        format: int64
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      creationTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      lastModifiedBy:
        type: string
        description: The user who last modified this resource.
      lastModifiedTime:
        type: integer
        format: int64
        description: Milliseconds since the UNIX epoch.
      cohortDefinition:
        type: string
      cohortName:
        type: string
      description:
        type: string
      matchedParticipantCount:
        type: integer
        format: int64
      reviewSize:
        type: integer
        format: int64
      reviewedCount:
        type: integer
        format: int64
      reviewStatus:
        "$ref": "#/definitions/ReviewStatus"
      participantCohortStatuses:
        type: array
        items:
          "$ref": "#/definitions/ParticipantCohortStatus"
  CohortReviewWithCountResponse:
    required:
    - queryResultSize
    - cohortReview
    properties:
      queryResultSize:
        type: integer
        format: int64
        description: The size of the query results
      cohortReview:
        "$ref": "#/definitions/CohortReview"
  PageFilterRequest:
    required:
    - page
    - pageSize
    - sortOrder
    properties:
      page:
        type: integer
        description: specific page (default is 0)
      pageSize:
        type: integer
        description: page size of results (default is 25)
      sortOrder:
        "$ref": "#/definitions/SortOrder"
      sortColumn:
        "$ref": "#/definitions/FilterColumns"
        description: Column upon which to sort (default is 'participantId')
      filters:
        "$ref": "#/definitions/FilterList"
      domain:
        "$ref": "#/definitions/Domain"
        description: Different domain types in omop
  FilterColumns:
    type: string
    enum:
    - PARTICIPANTID
    - STATUS
    - GENDER
    - BIRTHDATE
    - RACE
    - ETHNICITY
    - SEXATBIRTH
    - DECEASED
    - START_DATETIME
    - STANDARD_CODE
    - STANDARD_VOCABULARY
    - STANDARD_NAME
    - STANDARD_CONCEPT_ID
    - SOURCE_CODE
    - SOURCE_VOCABULARY
    - SOURCE_NAME
    - SOURCE_CONCEPT_ID
    - DOMAIN
    - AGE_AT_EVENT
    - NUM_MENTIONS
    - FIRST_MENTION
    - LAST_MENTION
    - VISIT_TYPE
    - ROUTE
    - DOSE
    - STRENGTH
    - VALUE_AS_NUMBER
    - UNIT
    - REF_RANGE
    - SURVEY_NAME
    - QUESTION
    - ANSWER
  SortOrder:
    type: string
    enum:
    - asc
    - desc
  FilterList:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Filter"
  Filter:
    required:
    - property
    - operator
    - values
    properties:
      property:
        "$ref": "#/definitions/FilterColumns"
      operator:
        "$ref": "#/definitions/Operator"
      values:
        type: array
        items:
          type: string
  ParticipantCohortStatus:
    type: object
    required:
    - participantId
    - status
    properties:
      participantId:
        type: integer
        format: int64
      status:
        "$ref": "#/definitions/CohortStatus"
      genderConceptId:
        type: integer
        format: int64
      gender:
        type: string
      birthDate:
        type: string
      raceConceptId:
        type: integer
        format: int64
      race:
        type: string
      ethnicityConceptId:
        type: integer
        format: int64
      ethnicity:
        type: string
      sexAtBirthConceptId:
        type: integer
        format: int64
      sexAtBirth:
        type: string
      deceased:
        type: boolean
        default: false
  ModifyCohortStatusRequest:
    type: object
    required:
    - status
    properties:
      status:
        "$ref": "#/definitions/CohortStatus"
  ParticipantChartDataListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/ParticipantChartData"
  VocabularyListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Vocabulary"
  Vocabulary:
    type: object
    required:
    - type
    - domain
    - vocabulary
    properties:
      type:
        type: string
        description: Source or Standard
      domain:
        type: string
        description: OMOP domain
      vocabulary:
        type: string
        description: Vocabulary
  CohortChartDataListResponse:
    type: object
    required:
    - count
    - items
    properties:
      count:
        type: integer
        format: int64
        description: total count for cohort.
      items:
        type: array
        items:
          "$ref": "#/definitions/CohortChartData"
  ParticipantCohortAnnotation:
    type: object
    required:
    - cohortReviewId
    - participantId
    - cohortAnnotationDefinitionId
    properties:
      annotationId:
        type: integer
        format: int64
        description: participant annotation id.
      cohortAnnotationDefinitionId:
        type: integer
        format: int64
        description: annotation definition id.
      cohortReviewId:
        type: integer
        format: int64
        description: the cohort reivew id.
      participantId:
        type: integer
        format: int64
        description: the participant id.
      annotationValueString:
        type: string
        description: The Value of the annotation if the AnnotationType is STRING
      annotationValueEnum:
        type: string
        description: The option chosen for the annotation if the AnnotationType is
          ENUM
      annotationValueDate:
        type: string
        description: The Value of the annotation if the AnnotationType is DATE
      annotationValueBoolean:
        type: boolean
        description: The Value of the annotation if the AnnotationType is BOOLEAN
      annotationValueInteger:
        type: integer
        description: The Value of the annotation if the AnnotationType is INTEGER
  ParticipantCohortAnnotationListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/ParticipantCohortAnnotation"
  ParticipantDataListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/ParticipantData"
  ParticipantDataCountResponse:
    type: object
    required:
    - count
    properties:
      count:
        type: integer
        format: int64
        description: the total count of items.
  ModifyParticipantCohortAnnotationRequest:
    type: object
    properties:
      annotationValueString:
        type: string
        description: The Value of the annotation if the AnnotationType is STRING
      annotationValueEnum:
        type: string
        description: The option chosen for the annotation if the AnnotationType is
          ENUM
      annotationValueDate:
        type: string
        description: The Value of the annotation if the AnnotationType is DATE
      annotationValueBoolean:
        type: boolean
        description: The Value of the annotation if the AnnotationType is BOOLEAN
      annotationValueInteger:
        type: integer
        description: The Value of the annotation if the AnnotationType is INTEGER
  ReviewStatus:
    type: string
    description: possible values indicating whether review has been created
    enum:
    - NONE
    - CREATED
  CohortChartData:
    type: object
    required:
    - name
    - conceptId
    - count
    properties:
      name:
        type: string
        description: the name of this data
      conceptId:
        type: integer
        format: int64
        description: the source concept id for this data
      count:
        type: integer
        format: int64
        description: the count for this data
  ParticipantChartData:
    type: object
    required:
    - standardName
    - standardVocabulary
    - startDate
    - ageAtEvent
    - rank
    properties:
      standardName:
        type: string
        description: the standard name
      standardVocabulary:
        type: string
        description: the standard vocabulary
      startDate:
        type: string
        description: the date of the event
      ageAtEvent:
        type: integer
        description: The age at event for the participant
      rank:
        type: integer
        description: the rank of the data
  ParticipantData:
    required:
    - itemDate
    properties:
      itemDate:
        type: string
        description: The date of the event
      domain:
        type: string
        description: the domain of this data.
      standardName:
        type: string
        description: The standard name of this data
      ageAtEvent:
        type: integer
        description: The age at event for the participant
      standardConceptId:
        type: integer
        format: int64
        description: The standard concept id
      sourceConceptId:
        type: integer
        format: int64
        description: The source concept id
      sourceVocabulary:
        type: string
        description: The source vocabulary type of this data
      standardVocabulary:
        type: string
        description: The standard vocabulary of this data
      sourceName:
        type: string
        description: The source name of this data
      sourceCode:
        type: string
        description: The source code of this data
      standardCode:
        type: string
        description: The standard code of this data
      value:
        type: string
        description: The source value of this data
      visitType:
        type: string
        description: The visit type of this data
      numMentions:
        type: string
        description: The number of mentions of this data
      firstMention:
        type: string
        description: The date of first mention of this data
      lastMention:
        type: string
        description: The date of last mention of this data
      unit:
        type: string
        description: The unit of this data
      dose:
        type: string
        description: The quantity of this data
      strength:
        type: string
        description: The strength of this data
      route:
        type: string
        description: The route of this data
      refRange:
        type: string
        description: The reference range of this data
      survey:
        type: string
        description: The name of this survey
      question:
        type: string
        description: a question in this survey
      answer:
        type: string
        description: an answer in this survey
  AnnotationType:
    type: string
    description: possible values representing the type of annotation.
    enum:
    - STRING
    - ENUM
    - DATE
    - BOOLEAN
    - INTEGER
  CohortAnnotationDefinition:
    type: object
    required:
    - cohortId
    - columnName
    - annotationType
    properties:
      cohortAnnotationDefinitionId:
        type: integer
        format: int64
        description: the annotation definition id.
      etag:
        type: string
        description: 'Entity tag for optimistic concurrency control. To be set during
          a read-modify-write to ensure that the client has not attempted to modify
          a changed resource.'
      cohortId:
        type: integer
        format: int64
        description: the cohort id.
      columnName:
        type: string
        description: the name of this annotation.
      annotationType:
        "$ref": "#/definitions/AnnotationType"
      enumValues:
        type: array
        items:
          type: string
  CohortAnnotationDefinitionListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/CohortAnnotationDefinition"
  AgeTypeCountListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/AgeTypeCount"
  AgeTypeCount:
    type: object
    required:
    - ageType
    - age
    - count
    properties:
      ageType:
        description: type of age
        type: string
      age:
        description: age
        type: integer
      count:
        description: count
        type: integer
        format: int64
  CriteriaListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Criteria"
  CriteriaListWithCountResponse:
    type: object
    required:
    - items
    - totalCount
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/Criteria"
      totalCount:
        type: integer
        format: int64
  CriteriaMenuListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/CriteriaMenu"
  Criteria:
    type: object
    required:
    - id
    - parentId
    - type
    - name
    - group
    - selectable
    - hasAttributes
    properties:
      id:
        description: 'Primary identifier which is unique within a CDR version. Value
          may not be stable across different CDR versions.'
        type: integer
        format: int64
      parentId:
        description: 'The parent id of the criteria. 0 if this is the root node of
          a criteria tree.'
        type: integer
        format: int64
      type:
        description: 'The tree type of this criteria, see TreeType. This will need
          to change to CriteriaType with the new implementation(change type below
          to ref CriteriaType)'
        type: string
      subtype:
        description: 'The subtype of this criteria, see TreeSubType. This will need
          to change to CriteriaSubType with the new implementation(change type below
          to ref CriteriaSubType)'
        type: string
      code:
        description: |
          Code that identifies this criteria. In some vocabularies such as ICD9 and ICD10, this code captures the tree hierarchy, e.g. '001.002.003'. Multiple criteria may exist for the same code within a CDR version if a given concept has multiple entries at different locations in the criteria tree (this is common in SNOMED).
          Criteria codes should generally be stable across CDR versions.
        type: string
      name:
        description: description of criteria
        type: string
      count:
        description: 'Estimated number of participants in a particular CDR version
          which have a least one event matching this criteria.'
        type: integer
        format: int64
      parentCount:
        description: 'Estimated number of Parents participants in a particular CDR version
          which have a least one event matching this criteria.'
        type: integer
        format: int64
      childCount:
        description: 'Estimated number of Children participants in a particular CDR version
          which have a least one event matching this criteria.'
        type: integer
        format: int64
      group:
        description: specifies if child or parent
        type: boolean
        default: false
      selectable:
        description: 'Whether or not a client can specify this criteria in a search
          request. Selecting a group implies selecting all criteria contained within
          that group.'
        type: boolean
        default: false
      conceptId:
        description: |
          The OMOP concept id associated with this criteria. May be null if this criteria does not match an OMOP concept, e.g. for intermediate nodes (groups) in the criteria tree. Concept ids are ids associated with a specific vocabulary item in the concept table and allow you to search for that code in its domain table. This may be a source or standard concept ID, depending on the tree for the criteria.
          Similar to a code, multiple criteria may reference the same concept ID due to multiple occurrences of a concept in the criteria tree. In other cases a criteria may share the concept ID of its parent, e.g. in the PPI tree a question and child answer share a concept id.
          Concept IDs should generally be stable across CDR versions.
        type: integer
        format: int64
      domainId:
        description: "# TODO: Remove this field. Deprecated. Clue to determine which
          OMOP tables to search, but these only exist for leaves in the tree. Parents
          don't have domain ids and concept id will be used in the case that a parent
          is selectable.\n"
        type: string
      hasAttributes:
        description: 'Whether this criteria has associated attributes which can be
          filtered by value during a search, for example a blood pressure measurement
          criteria might have an associated measurement value attribute.'
        type: boolean
        default: false
      path:
        description: 'A "." delimited path of all parent criteria IDs. Does not include
          the id for this criteria; root criteria nodes have a null path.'
        type: string
      value:
        description: 'A helper property to fully describe PPI/AGE data. Age holds
          the value of the age and for PPI it holds value as number or value as concept
          id.'
        type: string
      hasHierarchy:
        description: Whether criteria is linked to a tree.
        type: boolean
        default: false
      hasAncestorData:
        description: Whether criteria needs lookup in the criteria_ancestor table.
        type: boolean
        default: false
      isStandard:
        description: Reveals if this criteria is standard or source.
        type: boolean
        default: false
  CriteriaMenu:
    type: object
    required:
    - id
    - parentId
    - category
    - domainId
    - name
    - group
    - sortOrder
    properties:
      id:
        description: The unique identifier for the menu item
        type: integer
        format: int64
      parentId:
        description: The unique identifier for the menu parent
        type: integer
        format: int64
      category:
        description: The category for this menu item(Program Data or Domains)
        type: string
      domainId:
        description: The domain for this menu item
        type: string
      type:
        description: The type for this menu item
        type: string
      name:
        description: The name
        type: string
      group:
        description: Is this a parent
        type: boolean
        default: false
      sortOrder:
        description: The order
        type: integer
        format: int64
  CriteriaAttributeListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/CriteriaAttribute"
  CriteriaAttribute:
    type: object
    required:
    - id
    - valueAsConceptId
    - conceptName
    - type
    - estCount
    properties:
      id:
        description: id of the criteria
        type: integer
        format: int64
      valueAsConceptId:
        description: categorical concept id
        type: integer
        format: int64
      conceptName:
        description: name of concept
        type: string
      type:
        description: numerical or categorical
        type: string
      estCount:
        description: possible count
        type: string
  SurveyVersionListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/SurveyVersion"
  SurveyVersion:
    type: object
    required:
    - surveyVersionConceptId
    - displayName
    - itemCount
    properties:
      surveyVersionConceptId:
        description: unique concept id of the cope survey
        type: integer
        format: int64
      displayName:
        description: name of the version
        type: string
      itemCount:
        description: item count
        type: integer
        format: int64
  CriteriaSearchRequest:
    type: object
    required:
      - domain
      - standard
      - term
    properties:
      domain:
        description: The omop domain that this criteria belongs to
        type: string
      standard:
        description: flag that determines standard or source
        type: boolean
        default: false
      term:
        description: the term to search for
        type: string
      surveyName:
        description: name for the survey to search for
        type: string
      removeDrugBrand:
        description: True - remove brand names from results
        type: boolean
        default: false
      type:
        description: the type of the criteria to search for
        type: string
  CohortDefinition:
    description: 'The CohortDefinition describes the state of the Cohort Builder at any
      given moment. It contains two keys, `include` and `exclude`, each of which specifies
      an array of SearchGroups which are `AND`ed together, and which collectively
      specify which subjects to include or exclude from the cohort.'
    type: object
    required:
    - includes
    - excludes
    - dataFilters
    properties:
      includes:
        type: array
        items:
          "$ref": "#/definitions/SearchGroup"
      excludes:
        type: array
        items:
          "$ref": "#/definitions/SearchGroup"
      dataFilters:
        type: array
        items:
          type: string
    example:
      typical:
        include:
        - - type: ICD9
            searchParameters:
            - value: Foo
              domainId: Bar
            - value: C
          - type: ICD9
            searchParameters:
            - value: Baz
        - - type: ICD10
            searchParameters:
            - value: Baz
              domainId: Bar
            modifiers: []
        exclude: []
      minimum:
        include:
        - - type: A Crit Type
            searchParameters:
            - value: A value
  CriteriaRequest:
    description: 'The CriteriaRequest represents any domain specific conceptIds grouped by
      Source/standard flags. This request has been created specifically for use within edit
      function of Cohort Definitions, since Cohort Definitions are not able to save criteria id
      Because this varies from CDR to CDR.'
    type: object
    properties:
      sourceConceptIds:
        type: array
        items:
          type: integer
          format: int64
      standardConceptIds:
        type: array
        items:
          type: integer
          format: int64
  SearchGroup:
    description: 'A SearchGroup is a container for groups of criteria which are `OR`ed
      together.'
    type: object
    required:
    - temporal
    - items
    properties:
      id:
        description: Unique within the cohort definition
        type: string
      name:
        description: optional custom name set by user
        type: string
      temporal:
        description: indicates if this search group relates to time
        type: boolean
        default: false
      mention:
        description: first, last or any mention(used in temporal realtionships)
        "$ref": "#/definitions/TemporalMention"
      time:
        description: time frame between temporal items
        "$ref": "#/definitions/TemporalTime"
      timeValue:
        description: time value between temporal items
        type: integer
        format: int64
      timeFrame:
        description: time increments(Day, Month or Year)
        type: string
      items:
        type: array
        items:
          "$ref": "#/definitions/SearchGroupItem"
  SearchGroupItem:
    description: 'A SearchGroupItem is the "line item" of the Cohort Builder.  It
      specifies a set of criteria of a given kind, possibly alongside a set of modifiers,
      the results of which are `OR`ed together with the other criteria in the group.'
    type: object
    required:
    - type
    - searchParameters
    - modifiers
    properties:
      id:
        description: Unique within the cohort definition
        type: string
      name:
        description: optional custom name set by user
        type: string
      type:
        description: type of criteria
        type: string
      temporalGroup:
        description: temporal group that this item belongs to
        type: integer
      searchParameters:
        description: values that help search for subjects
        type: array
        items:
          "$ref": "#/definitions/SearchParameter"
      modifiers:
        description: |
          Predicates to apply to the search parameters. Aggregate modifiers (i.e. NUM_OF_OCCURRENCES) are applied independently to each SearchParameter and furthermore, are applied independently to any group elements within those SearchParameters.
          Consider the following example query scenario.
          Example criteria tree: - parent
            - child1
            - child2

          Curated dataset contains 1 participant with 1 event each of concepts child1 and child2. Search request is made on "parent", with a modifier of {type: NUM_OF_OCCURRENCES, operands: [2]}.
          This does not match - the participant would need to have at least 2 events of type child1 and/or of child2 and/or of parent (in the event that "parent" corresponds to a real concept in the data).
          Additionally, aggregate modifiers are applied secondarily to other modifiers. For example, combining the AGE_AT_EVENT with NUM_OF_OCCURRENCES - first we filter down all events by the age predicate, then we count occurrences.
        type: array
        items:
          "$ref": "#/definitions/Modifier"
    example:
      type: ICD9
      searchParameters:
      - value: E9293
        domainId: Condition
        conceptId:
      - value: E979-E979.9
        domainId:
        conceptId:
      modifiers:
      - name: age_at_event
        operator: GTE >=
        operands:
        - Arg1
        - Arg2
  SearchParameter:
    type: object
    required:
    - parameterId
    - name
    - domain
    - type
    - group
    - ancestorData
    - standard
    - attributes
    properties:
      parameterId:
        description: Unique within the cohort definition
        type: string
      name:
        description: The name of the generating Criterion
        type: string
      domain:
        description: The omop domain that this criteria belongs to
        type: string
      type:
        description: The type of the generating Criterion
        type: string
      subtype:
        description: The subtype of the generating Criterion
        type: string
      group:
        description: Specifies if the generating Criterion is a leaf or node in its
          Criteria tree
        type: boolean
        default: false
      ancestorData:
        description: flag that determines if concept ids need to be looked up in the
          ancestor table
        type: boolean
        default: false
      standard:
        description: flag that determines standard or source
        type: boolean
        default: false
      conceptId:
        description: The concept id that maps to concept table, if any.
        type: integer
        format: int64
      attributes:
        description: |
          Attributes are extra inputs provided by users through the UX. Currently used by Demographics(Age), Measurements(Body Height, Weight.. etc) and Physical Measurements(Blood Pressure, Body Weight.. etc). Measurements and Physical Measurements have overlap in many areas such as body weight, but the difference is standard(measurements) and source(physical measurements).

           Example demo age search parameter:
           {
             "type": "DEMO",
             "searchParameters": [
               {
                 "type": "DEMO",
                 "subtype": "AGE",
                 "group": false,
                 "attributes": [{"name": "Age", "operator": "BETWEEN", "operands": [23, 31]}]
               }
             ],
             "modifiers": []
           }

           Example physical measurement blood pressure(Hypotensive (Systolic <= 90 / Diastolic <= 60))
           {
             "type": "PM",
             "searchParameters": [
               {
                 "type": "PM",
                 "subtype": "BP",
                 "group": false,
                 "attributes": [
                   {
                     "conceptId": 903118,
                     "name": "Systolic",
                     "operands": ["90"],
                     "operator":"LESS_THAN_OR_EQUAL_TO"
                   },
                   {
                     "conceptId": 903115,
                     "name": "Diastolic",
                     "operands": ["60"],
                      "operator": "LESS_THAN_OR_EQUAL_TO"
                    }
                  ]
                }
              ],
              "modifiers": []
            }
        type: array
        items:
          "$ref": "#/definitions/Attribute"
    example:
      leafExample:
        value: E9293
        subtype: AGE
        domainId: Condition
      parentExample:
        value: E979-E979.9
        subtype: BP_EHR
        domainId:
  Attribute:
    type: object
    required:
    - name
    - operands
    properties:
      name:
        description: the name of the attribute
        "$ref": "#/definitions/AttrName"
      operator:
        "$ref": "#/definitions/Operator"
      operands:
        type: array
        items:
          type: string
      conceptId:
        description: The concept id that maps to concept table.
        type: integer
        format: int64
    example:
      singleValued:
        operator: GTE
        operands:
        - '20'
      multiValued:
        operator: BETWEEN
        operands:
        - '18'
        - '35'
  Modifier:
    type: object
    required:
    - name
    - operator
    - operands
    properties:
      name:
        description: name/type of modifier
        "$ref": "#/definitions/ModifierType"
      operator:
        description: Machine name of the operator
        "$ref": "#/definitions/Operator"
      operands:
        type: array
        items:
          type: string
    example:
      singleValued:
        name: AGE_AT_EVENT
        operator: GREATER_THAN_OR_EQUAL_TO
        operands:
        - '20'
  ModifierType:
    type: string
    description: possible types of modifiers
    enum:
    - AGE_AT_EVENT
    - NUM_OF_OCCURRENCES
    - EVENT_DATE
    - ENCOUNTERS
    - CATI
  CriteriaType:
    type: string
    description: possible criteria types
    enum:
    - AGE
    - ATC
    - BRAND
    - CPT4
    - DECEASED
    - ETHNICITY
    - GENDER
    - HCPCS
    - ICD10CM
    - ICD10PCS
    - ICD9CM
    - ICD9Proc
    - LOINC
    - PPI
    - RACE
    - RXNORM
    - SEX
    - SNOMED
    - VISIT
    - NONE
  CriteriaSubType:
    type: string
    description: possible criteria types
    enum:
    - ANSWER
    - BMI
    - BP
    - CLIN
    - HC
    - HEIGHT
    - HR
    - HR-DETAIL
    - HR-IRR
    - HR-NOIRR
    - LAB
    - PREG
    - QUESTION
    - SURVEY
    - WC
    - WEIGHT
    - WHEEL
  TemporalMention:
    type: string
    description: Mentions refer to occurrences of entry date per person
    enum:
    - ANY_MENTION
    - FIRST_MENTION
    - LAST_MENTION
  TemporalTime:
    type: string
    description: time refers to the amount of time in reference to temporal mentions
    enum:
    - DURING_SAME_ENCOUNTER_AS
    - X_DAYS_BEFORE
    - X_DAYS_AFTER
    - WITHIN_X_DAYS_OF
  AttrName:
    type: string
    description: Name that descibes the type of attribute
    enum:
    - ANY
    - NUM
    - CAT
    - AGE
    - AGE_AT_CONSENT
    - AGE_AT_CDR
    - SURVEY_VERSION_CONCEPT_ID
    - PERSONAL_FAMILY_HEALTH_HISTORY
  AgeType:
    type: string
    description: Different age types
    enum:
    - AGE
    - AGE_AT_CONSENT
    - AGE_AT_CDR
  GenderOrSexType:
    type: string
    description: represents gender or sex at birth
    enum:
    - GENDER
    - SEX_AT_BIRTH
  DemoChartInfoListResponse:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/DemoChartInfo"
  DemoChartInfo:
    type: object
    required:
    - name
    - race
    - ageRange
    - count
    properties:
      name:
        description: gender or sex at birth of subject
        type: string
      race:
        description: race of subject
        type: string
      ageRange:
        description: age range of subject
        type: string
      count:
        description: number of subjects
        type: integer
        format: int64
  EthnicityInfoListResponse:
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/EthnicityInfo"
  EthnicityInfo:
    type: object
    required:
    - ethnicity
    - count
    properties:
      ethnicity:
        description: ethnicity of subject
        type: string
      count:
        description: number of subjects
        type: integer
        format: int64
  ParticipantDemographics:
    type: object
    required:
    - genderList
    - raceList
    - ethnicityList
    - sexAtBirthList
    properties:
      genderList:
        type: array
        items:
          "$ref": "#/definitions/ConceptIdName"
      raceList:
        type: array
        items:
          "$ref": "#/definitions/ConceptIdName"
      ethnicityList:
        type: array
        items:
          "$ref": "#/definitions/ConceptIdName"
      sexAtBirthList:
        type: array
        items:
          "$ref": "#/definitions/ConceptIdName"
  ConceptIdName:
    type: object
    required:
    - conceptId
    - conceptName
    properties:
      conceptId:
        type: integer
        format: int64
      conceptName:
        type: string

  AuditProjectAccessRequest:
    type: object
    properties:
      userIds:
        description: 'List of users to audit'
        type: array
        items:
          type: integer
          format: int64

  SynchronizeUserAccessRequest:
    type: object
    properties:
      userIds:
        description: 'List of users to synchronize'
        type: array
        items:
          type: integer
          format: int64

  ProcessEgressEventRequest:
    type: object
    required:
      - eventId
    properties:
      eventId:
        description: 'Egress event ID to be processed'
        type: integer
        format: int64

  CreateWorkspaceTaskRequest:
    type: object
    required:
      - operationId
      - workspace
    properties:
      operationId:
        description: 'Workspace operation ID'
        type: integer
        format: int64
      workspace:
        description: 'Requested workspace to create'
        "$ref": "#/definitions/Workspace"

  DuplicateWorkspaceTaskRequest:
    type: object
    required:
      - operationId
      - fromWorkspaceNamespace
      - fromWorkspaceFirecloudName
      - workspace
    properties:
      operationId:
        description: 'Workspace operation ID'
        type: integer
        format: int64
      fromWorkspaceNamespace:
        description: 'Namespace of the From-Workspace'
        type: string
      fromWorkspaceFirecloudName:
        description: 'Firecloud Name of the From-Workspace'
        type: string
      shouldDuplicateRoles:
        description: 'Should the duplicated workspace also duplicate the roles of the source'
        type: boolean
      workspace:
        description: 'Requested workspace to duplicate'
        "$ref": "#/definitions/Workspace"

  WorkspaceAuditLogQueryResponse:
    type: object
    description: >
      Represents the results of a query into the audit dataset in BigQery without
      filtering or transformation.
    required:
    - logEntries
    - query
    - workspaceDatabaseId
    properties:
      actions:
        description: Re-constructed objects for each composite action in the query results.
        type: array
        items:
          "$ref": "#/definitions/AuditAction"
      logEntries:
        type: array
        items:
          "$ref": "#/definitions/AuditLogEntry"
      query:
        description: Copy of the query used in BigQuery to assist in further exploration or
          debugging.
        type: string
      workspaceDatabaseId:
        description: >
          ID in the MySQL database and BigQuery Audit Database for the workspace queried.
        type: integer
        format: int64
  UserAuditLogQueryResponse:
    type: object
    description: >
      Represents the results of a query into the audit dataset in BigQuery without
      filtering or transformation.
    required:
      - actions
      - logEntries
      - query
      - userDatabaseId
    properties:
      actions:
        description: Re-constructed objects for each composite action in the query results.
        type: array
        items:
          "$ref": "#/definitions/AuditAction"
      logEntries:
        type: array
        items:
          "$ref": "#/definitions/AuditLogEntry"
      query:
        description: Copy of the query used in BigQuery to assist in further exploration or
          debugging.
        type: string
      userDatabaseId:
        description: >
          ID in the MySQL database and BigQuery Audit Database for the user queried.
        type: integer
        format: int64
  AuditLogEntry:
    description: >
      Representation of the BigQuery Audit Log entry, post-translation from Stackdriver logging.
      All fields are treated as optional here, as there are no non-null constraints in the BigQuery
      dataset.

      It's possible that due to some error now or in the past that some columns might not match
      their expected values, nothing in this type definition is stricter than the BigQuery schema.
    type: object
    properties:
      actionId:
        description: Unique ID for this action. Used for grouping similar events under a
          single action, though in this representation we're returning a straight list of rows.
          This is technically a UUID, but this may change in the future (to a shorter random string),
          so we only type it as a String.
        type: string
      actionType:
        description: >
          Defines what action is taking place in this event. (There can be several ACTION_TYPEs
          in a single Action assigned to different events. String representation of the ActionType
          enum (not generated).
        type: string
      agentId:
        description: >
          ID for the Agent (typically a User). If there's a SQL table for this agent type,
          this this is the PK for that table (e.g. user_id).
        type: integer
        format: int64
      agentType:
        description: >
          A member of the org.pmiops.workbench.actionaudit.AgentType enum (not generated). Since
          this is typed as a string in BigQuery (and not constrained to that type), we don't try
          to narrow the type in the admin API.
        type: string
      agentUsername:
        description: >
          Username of the user or administrator taking the action. This is the agent_email column
          in BigQuery.
        type: string
        format: email
      eventTime:
        description: >
          Timestamp recorded at time of the event. Called timestamp in the BigQuery table. Epoch
          millis.
        type: integer
        format: int64
      newValue:
        description: Value of the target property (if any) after the event.
        type: string
      previousValue:
        description: >
          Value of the target property at the instant of this event beginning. prev_value in BigQuery.
        type: string
      targetId:
        description: >
          Database ID of the corresponding table for the target entity.
        type: integer
        format: int64
      targetProperty:
        description: >
          Property on the target entity affected by this event. One of several internal enums such
          as WorkspaceTargetProperty.
        type: string
      targetType:
        description: >
          Type of target. Described by the enum TargetType (which is not generated). Left as string
          since BigQuery doesn't enforce the enum membership.
        type: string
  AuditAction:
    type: object
    description: >
      A user- or administrator-visible system action in the audit log. Becasue a single action taken
      may have effects on more than on target, each action may contain multiple agents, targets,
      and action types.
    properties:
      actionId:
        description: Unique ID for this action. Used for grouping similar events under a
          single action, though in this representation we're returning a straight list of rows.
          This is technically a UUID, but this may change in the future (to a shorter random string),
          so we only type it as a String.
        type: string
      actionTime:
        description: Time of the earliest event (row) for this action. It's assumed that all rows in
          an action occur at the same time. Epoch millis.
        type: integer
        format: int64
      eventBundles:
        description: >
          Within an action there might be sub-actions, or event bundles, that describe effects on
          different targets, for example when sharing a workspace with other users.
        type: array
        items:
          "$ref": "#/definitions/AuditEventBundle"
  AuditEventBundle:
    description: >
      Collection of an AuditAction's sub-actions. Useful as a map key, plus it contains
      information about the agent, target, and action type (of which there can be multiple per
      action). Additionally, any property changes are coalesced into an array under the
      propertyChanges property.
    type: object
    properties:
      header:
        description: >
          Unique header for this event bundle within the parent action. Consists of agent,
          target, and action type information.
        "$ref": "#/definitions/AuditEventBundleHeader"
      propertyChanges:
        description: >
          List of property changes corresponding to this event bundle. For example, with a
          workspace create event, there may be many field changed from null to their initial
          values.
        type: array
        items:
          "$ref": "#/definitions/AuditTargetPropertyChange"
  AuditEventBundleHeader:
    description: >
      Unique header for this event bundle within the parent action. Consists of agent,
      target, and action type information. This tuple is used internally to filter the
      rows of each action.
    type: object
    properties:
      actionType:
        type: string
      agent:
        "$ref": "#/definitions/AuditAgent"
      target:
        "$ref": "#/definitions/AuditTarget"
  AuditAgent:
    description: >
      Composite object containing audited agent information. See AuditLogEntry for individual
      fields.
    type: object
    properties:
      agentId:
        type: integer
        format: int64
      agentType:
        type: string
      agentUsername:
        type: string
  AuditTarget:
    description: >
      Composite object containing audited target information. See AuditLogEntry for individual
      fields.
    type: object
    properties:
      targetId:
        type: integer
        format: int64
      targetType:
        type: string
  AuditTargetPropertyChange:
    description: >
      Composite object containing audited target property changes. See AuditLogEntry for individual
      fields.
    type: object
    properties:
      targetProperty:
        type: string
      previousValue:
        type: string
      newValue:
        type: string
  WorkspaceUserAdminView:
    type: object
    required:
      - userModel
      - role
      - userDatabaseId
    properties:
      userModel:
        description: User API model
        "$ref": '#/definitions/User'
      role:
        description: User access level on an associated workspace
        "$ref": '#/definitions/WorkspaceAccessLevel'
      userDatabaseId:
        description: >
          user_id value in the user table in the MySQL database. Useful
          for DB queries and Action Audit searches in Stackdriver Logging and
          BigQuery.
        type: integer
        format: int64
      userAccountCreatedTime:
        description: Datetime at creation of this user's accont
        type: string
        format: date-time
  AccountPropertyUpdate:
    description: >
      A group of changes an admin can make to a user in the Edit Information card of the individual-user admin page.
      Updates to the contact email or the institutional affiliation will be rejected if they do not validate.
    type: object
    required:
      - username
      - accessBypassRequests
    properties:
      username:
        description: The full system-assigned ID of a user, including email domain
        type: string
      freeCreditsLimit:
        description: When set, overrides the default free credits dollar limit for this user.
        type: number
        format: double
      contactEmail:
        description: When set, replaces the user's contact email.  Must validate against the user's Institutional Affiliation, if one exists.
        type: string
      affiliation:
        description: When set, replaces the user's verified institutional affiliation.  Must validate against the user's contact email.
        "$ref": '#/definitions/VerifiedInstitutionalAffiliation'
      accessBypassRequests:
        description: Updates the user's bypass status for the given access modules.
        type: array
        items:
          "$ref": '#/definitions/AccessBypassRequest'
      accountDisabledStatus:
        description: When set, replaces the user's account disabled status.
        "$ref": '#/definitions/AccountDisabledStatus'
  AccessReason:
    type: object
    properties:
      reason:
        type: string
        description: 'The administrative purpose for accessing this notebook'
  AuthDomainCreatedResponse:
    type: object
    required:
      - authDomainName
      - groupEmail
    properties:
      authDomainName:
        type: string
        description: 'The name of the created Auth Domain, as supplied by the caller'
      groupEmail:
        type: string
        description: 'The email address associated with the Terra Group created to serve as this Auth Domain'
  ReportingSnapshot:
    description: >
      Payload for upload to BigQuery reporting dataset. Internal use only (not part of the API).
    type: object
    properties:
      captureTimestamp:
        description: Time at which snapshot is retrieved. Epoch millis.
        type: integer
        format: int64
      cohorts:
        type: array
        items:
          "$ref": "#/definitions/ReportingCohort"
      datasetCohorts:
        type: array
        items:
          "$ref": "#/definitions/ReportingDatasetCohort"
      datasetConceptSets:
        type: array
        items:
          "$ref": "#/definitions/ReportingDatasetConceptSet"
      datasetDomainIdValues:
        type: array
        items:
          "$ref": "#/definitions/ReportingDatasetDomainIdValue"
      datasets:
        type: array
        items:
          "$ref": "#/definitions/ReportingDataset"
      institutions:
        type: array
        items:
          "$ref": "#/definitions/ReportingInstitution"
      newUserSatisfactionSurveys:
        type: array
        items:
          "$ref": "#/definitions/ReportingNewUserSatisfactionSurvey"
      workspaceFreeTierUsage:
        type: array
        items:
          "$ref": "#/definitions/ReportingWorkspaceFreeTierUsage"
  ReportingUploadDetails:
    type: object
    properties:
      snapshotTimestamp:
        description: Snapshot timestamp for this upload, in Epoch millis
        type: integer
        format: int64
      projectId:
        description: Project containing the BigQuery dataset
        type: string
      dataset:
        description: Reporting Dataset
        type: string
      uploads:
        type: array
        items:
          "$ref": "#/definitions/ReportingUploadResult"
  ReportingUploadResult:
    type: object
    properties:
      tableName:
        description: BigQuery table name
        type: string
      sourceRowCount:
        description: Number of rows in source to be insertted
        type: integer
        format: int64
      destinationRowCount:
        description: Number of rows present in query
        type: integer
        format: int64
  ReportingUser:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-09-30T16:18:29-04:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      accessTierShortNames:
        description: |-
          Short names of access tiers available to the user, comma-delimited if multiple.
        type: string
      areaOfResearch:
        type: string
        description: ''
      complianceTrainingBypassTime:
        type: string
        format: date-time
        description: |-
          Time Compliance Training administratively bypassed, or null if this requirement
          was never bypassed for this user.
      complianceTrainingCompletionTime:
        type: string
        format: date-time
        description: Time Compliance Training completed, or null if never completed.
      contactEmail:
        type: string
        description: User's external email address on file.
      creationTime:
        type: string
        format: date-time
        description: Timestamp of account creation.
      duccBypassTime:
        type: string
        format: date-time
        description: |-
          Time an admin bypassed the DUCC requirement for this user, or null if that has not happened.
          This value is reset to null if a user's bypassed status is revoked.
      duccCompletionTime:
        type: string
        format: date-time
        description: Time user last completed DUCC
      duccSignedVersion:
        type: integer
        format: int32
        description: Version of DUCC last signed by this user.
      demographicSurveyCompletionTime:
        type: string
        format: date-time
        description: Timestamp for completion of Demographic Survey (if completed).
      disabled:
        type: boolean
        description: If true, this account has been disabled by an administrator (or
          potentially an automatic process).
      eraCommonsBypassTime:
        type: string
        format: date-time
        description: Time an administrator bypassed the ERA Commons requirement for
          this user.
      eraCommonsCompletionTime:
        type: string
        format: date-time
        description: Time user completed ERA Commons account link.
      familyName:
        type: string
        description: User last name (family name).
      firstRegistrationCompletionTime:
        type: string
        format: date-time
        description: Time user first completed registration.
      registeredTierFirstEnabledTime:
        type: string
        format: date-time
        description: |-
          The time at which this user's registered tier access was first granted, if ever.
          Note: expiration of access does not affect this field.
      controlledTierFirstEnabledTime:
        type: string
        format: date-time
        description: |-
          The time at which this user's controlled tier access was first granted, if ever.
          Note: expiration of access does not affect this field.
      firstSignInTime:
        type: string
        format: date-time
        description: Time user first signed into the Workbench with a GSuite account.
      freeTierCreditsLimitDollarsOverride:
        type: number
        format: double
        description: Override value for the default free tier spending limit (USD).
      givenName:
        type: string
        description: User first name (given name).
      lastModifiedTime:
        type: string
        format: date-time
        description: Time of last modification to this user account.
      professionalUrl:
        type: string
        description: User's URL at primary place of work.
      rasLoginGovBypassTime:
        type: string
        format: date-time
        description: Time an administrator bypassed the RAS Login.gov requirement
          for this user.
      rasLoginGovCompletionTime:
        type: string
        format: date-time
        description: Time user completed the RAS Login.gov account link.
      twoFactorAuthBypassTime:
        type: string
        format: date-time
        description: |-
          Time an administrator bypassed the two-factor authentication requirement for this user,
          or null if it has not been bypassed.
      twoFactorAuthCompletionTime:
        type: string
        format: date-time
        description: Time user registered a two-factor authentication method satisfying
          the 2FA requirement.
      userId:
        type: integer
        format: int64
        description: |-
          Unique integer ID for this user, as assigned in the main Application DB. Serves as a pseudo-
          primary key in this table when combined with a snapshot_timestamp. BigQuery doesn't enforce
          this uniqueness, though.
      username:
        type: string
        description: |-
          User's GSuite username, including appropriate domain for this environment. Uniquely describes a
          user account (but not constrained to be unique by BigQuery).
      city:
        type: string
        description: User-reported city of residence.
      country:
        type: string
        description: User-reported country of residence.
      state:
        type: string
        description: User-reported state or province. Not guaranteed to match official
          abbreviations or spellings.
      streetAddress1:
        type: string
        description: First line of user street address.
      streetAddress2:
        type: string
        description: Second line of user street address.
      zipCode:
        type: string
        description: Up to 10-digit zip code for use residence.
      institutionId:
        type: integer
        format: int64
        description: |-
          Foreign key into institution table. Each user is only affiliated
          with a single institution.
      institutionalRoleEnum:
        description: |-
          Description of the user's role at the institution they are
          affiliated with. Selected from a list of predefined values. If "other", see institutional_role_other_text
          for custom description.
        "$ref": "#/definitions/InstitutionalRole"
      institutionalRoleOtherText:
        type: string
        description: |-
          If the institutional_role_enum is "other", custom description
          of this user's role in the institution.
      ethnicity:
        description: |-
          User-reported ethnicity information
        "$ref": "#/definitions/Ethnicity"
      identifiesAsLgbtq:
        description: |-
          User-reported identities as lgbtq information
        type: boolean
      lgbtqIdentity:
        description: |-
          User-reported lgbtqIdentity information
        type: string
      yearOfBirth:
        description: |-
          User-reported yearOfBirth information
        type: number
      highestEducation:
        description: |-
          User-reported highestEducation information
        "$ref": "#/definitions/Education"
      disability:
        description: |-
          User-reported disability
        "$ref": "#/definitions/Disability"
      degrees:
        description: |-
          User-reported degrees, comma-delimited if multiple answers were provided.
        type: string
      genderIdentities:
        description: |-
          User-reported genderIdentity information, comma-delimited if multiple answers were provided.
        type: string
      sexesAtBirth:
        description: |-
          User-reported sexAtBirth information, comma-delimited if multiple answers were provided.
        type: string
      races:
        description: |-
          User-reported races information, comma-delimited if multiple answers were provided.
        type: string
  ReportingWorkspace:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-09-30T16:18:28-04:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      accessTierShortName:
        type: string
        description: a brief string identifying the access tier of this workspace, e.g. 'registered'
      billingAccountType:
        description: |-
          Whether the workspace's billing account is the free tier account, or a user-provided billing
          account
        "$ref": "#/definitions/BillingAccountType"
      billingStatus:
        description: |-
          Is the billing account associated with this workspace available to incur costs?  For a free
          tier project, this indicates whether a user has an available balance in their quota.  For a
          user-provided billing account, this corresponds to whether payment is valid and up to date.
        "$ref": "#/definitions/BillingStatus"
      cdrVersionId:
        type: integer
        format: int64
        description: Foreign key into CDR table.
      creationTime:
        type: string
        format: date-time
        description: Time workspace was initially created.
      creatorId:
        type: integer
        format: int64
        description: User ID of user who initially created this workspace.
      disseminateResearchOther:
        type: string
        description: Description of user-defined research dissemination option (when
          "Other" is selected).
      lastAccessedTime:
        type: string
        format: date-time
        description: No longer in use. Column should be ignored.
      lastModifiedTime:
        type: string
        format: date-time
        description: |-
          Last time a modification was made to this workspace, with  certain exceptions. In general,
          only changes that should alter sort order in the Recent Workspaces UI trigger an update
          to the last modified time.
      name:
        type: string
        description: User-defined name for this workspace. Human-readable.
      needsRpReviewPrompt:
        type: integer
        format: int32
        description: ''
      published:
        type: boolean
        description: If true, this workspace has been published.
      rpAdditionalNotes:
        type: string
        description: Research purpose additional notes input.
      rpAncestry:
        type: boolean
        description: If true, user has reported this workspace will study ancestry.
      rpAnticipatedFindings:
        type: string
        description: |-
          Answer to question: "What are the anticipated findings from the study?
          How would your findings contribute to the body of scientific knowledge in
          the field?" 1000 character limit (applied client-side).
      rpApproved:
        type: boolean
        description: |-
          Status of the most recent Request for Review of Research Purpose
          Description for this workspace.
          If true, this workspace has been approved  by the Resource Access
          Board. If false, it was rejected. If null, the workspace has not
          been adjudicated. If rp_review_requested is true and rp_approved is
          null, the workspace has a review pending.
      rpCommercialPurpose:
        type: boolean
        description: If true, this workspace and research have commercial goals.
      rpControlSet:
        type: boolean
        description: |-
          Reserch Control selected. All of Us data will be used as a reference or control
          dataset for comparison with another dataset from a different resource (e.g.
          Case-control studies).
      rpDiseaseFocusedResearch:
        type: boolean
        description: |-
          Disease-focused research: The primary purpose of the research is to learn more about
          a particular disease or disorder (for example, type 2 diabetes), a trait (for example,
          blood pressure), or a set of related conditions (for example, autoimmune diseases,
          psychiatric disorders).
      rpDiseaseOfFocus:
        type: string
        description: |-
          For workspaces that include Disese-focused Research, the user-supplied name of the diseas
          of focus (in the Name of Disease field).
      rpDrugDevelopment:
        type: boolean
        description: |-
          Drug/Therapeutics Development Research selected. Primary focus of the research
          is drug/therapeutics development. The data will be used to understand treatment-gene
          interactions or treatment outcomes relevant to the therapeutic(s) of interest.
      rpEducational:
        type: boolean
        description: |-
          Educational Purpose: The data will be used for education purposes (e.g. for a college
          research methods course, to educate students on population-based research approaches).
      rpEthics:
        type: boolean
        description: |-
          Ethical, Legal, and Social Implications (ELSI) Research: this
          research focuses on ethical, legal, and social implications (ELSI) of, or related to design,
          conduct, and translation of research.
      rpIntendedStudy:
        type: string
        description: ''
      rpMethodsDevelopment:
        type: boolean
        description: |-
          Methods development/validation study: The primary purpose of the use of All of Us data is to
          develop and/or validate specific methods/tools for analyzing or interpreting data (e.g.
          statistical methods for describing data trends, developing more powerful methods to detect
          gene-environment, or other types of interactions in genome-wide association studies).
      rpOtherPopulationDetails:
        type: string
        description: ''
      rpOtherPurpose:
        type: boolean
        description: Other Purpose checkbox (requires rp_other_purpose_details).
      rpOtherPurposeDetails:
        type: string
        description: |-
          If your purpose of use is different from the options listed above, please
          select "Other Purpose" and provide details regarding your purpose of data use here (500 character limit).
          rp_other_purpose should be true if this field is populated.
      rpPopulationHealth:
        type: boolean
        description: |-
          Population Health/Public Health Research: the primary purpose of using All of Us data is to
          investigate health behaviors, outcomes, access, and disparities in populations.
      rpReasonForAllOfUs:
        type: string
        description: ''
      rpReviewRequested:
        type: boolean
        description: |-
          If true, a reivew has been requested by the Resource Access Board. This
          flag is currently not reset when a review is completed.
      rpScientificApproach:
        type: string
        description: |-
          Answer to the question "What are the scientific approaches you plan to use for your
          study? Describe the datasets, research methods, and tools you will use to answer
          your scientific question(s)."
      rpSocialBehavioral:
        type: boolean
        description: If true, user states the research focuses on the social or behavioral
          phenomena or determinants of health.
      rpTimeRequested:
        type: string
        format: date-time
        description: ''
      workspaceId:
        type: integer
        format: int64
        description: |-
          Prirmary key of the workspace table in Workrbench application database. Along with
          snapshot_timestamp, serves as a pseudo-primary key for this table.
      workspaceNamespace:
        type: string
        description: |-
          The workspace "namespace", which corresponds to the Google Cloud Project ID associated with
          the workspace.
  ReportingWorkspaceFreeTierUsage:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2021-01-05T17:36:27-08:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      cost:
        type: number
        format: double
        description: Free tier usage cost for this workspace, in USD.
      userId:
        type: integer
        format: int64
        description: ID of the user whose free tier quota was billed for this workspace.
      workspaceId:
        type: integer
        format: int64
        description: ID of the workspace associated with this free tier cost.
  ReportingCohort:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-10-09T09:09:12-04:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      cohortId:
        type: integer
        format: int64
        description: Unique ID of this cohort in the application DB. Should be unique
          within each snapshot.
      creationTime:
        type: string
        format: date-time
        description: Timestamp for creation of this cohort.
      creatorId:
        type: integer
        format: int64
        description: User ID of cohort crerator. Should be a foreign key into the user
          table.
      criteria:
        type: string
        description: |-
          JSON serialization of the selection criteria for this cohort. Schema is defined at
          https://github.com/all-of-us/workbench/pull/4076/files.  TODO: update with permanent URL.
      description:
        type: string
        description: User-provided cohort description from the Save Cohort dialog.
      lastModifiedTime:
        type: string
        format: date-time
        description: Timestamp of last user modification to the cohort definition.
      name:
        type: string
        description: User-provided human-readable name for this cohort.
      workspaceId:
        type: integer
        format: int64
        description: |-
          Application workspace ID of the workspace containing this cohort. Should be a foreign
          key into the workspace table.
  ReportingInstitution:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-10-05T10:34:34-04:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      displayName:
        type: string
        description: Human-readable name  for the institution, as shown in the UI.
      institutionId:
        type: integer
        format: int64
        description: |-
          Unique PK for institution table in  application DB. Note that in foreign key relationships,
          the short_name is typically used in place of this identifier.
      organizationTypeEnum:
        description: Organization type. If Other, then organization_type_other_text
          describes this organization's type.
        "$ref": "#/definitions/OrganizationType"
      organizationTypeOtherText:
        type: string
        description: |-
          If organization_type_enum is Other, this field describes organization's type. Value is not valid
          otherwise.
      shortName:
        type: string
        description: |-
          A unique string identifier used in the API to map a user affiliation to an institution. (Database
          identifiers are not typically exposed in the workbench API).
      registeredTierRequirement:
        description: Institution tegisted tier requirement.
        "$ref": "#/definitions/InstitutionMembershipRequirement"
  ReportingNewUserSatisfactionSurvey:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: ID of the survey response.
      userId:
        type: integer
        format: int64
        description: ID of the user who created the survey response.
      created:
        type: string
        format: date-time
        description: Time the survey response was created.
      modified:
        type: string
        format: date-time
        description: Time the survey response was last modified.
      satisfaction:
        "$ref": "#/definitions/NewUserSatisfactionSurveySatisfaction"
      additionalInfo:
        type: string
        description: Additional information regarding the satisfaction score.

  ReportingDataset:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-11-18T10:38:12-05:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      creationTime:
        type: string
        format: date-time
        description: Timestamp of dataset creation
      creatorId:
        type: integer
        format: int64
        description: FK into user table for user who created this dataset
      datasetId:
        type: integer
        format: int64
        description: PK in dataset table
      description:
        type: string
        description: User-provided description for the dataset.
      includesAllParticipants:
        type: boolean
        description: If true, this dataset contains data from all participants available
          instead a single cohort..
      lastModifiedTime:
        type: string
        format: date-time
        description: Last user-visible modification to the dataset
      name:
        type: string
        description: User-provided name for this Dataset. Unique within the owning workspace.
      workspaceId:
        type: integer
        format: int64
        description: ID of workspace containing this dataset. FK into workspace table.
  ReportingDatasetCohort:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-11-10T11:12:09-05:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      cohortId:
        type: integer
        format: int64
        description: ''
      datasetId:
        type: integer
        format: int64
        description: ''
  ReportingDatasetConceptSet:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-11-10T11:12:09-05:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      conceptSetId:
        type: integer
        format: int64
        description: Unique concept set identifier. FK into concept_set table.
      datasetId:
        type: integer
        format: int64
        description: FK for dataset table.
  ReportingDatasetDomainIdValue:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-11-10T11:12:09-05:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      datasetId:
        type: integer
        format: int64
        description: ''
      domainId:
        type: string
        description: Numerical ID for domain associated with a value (column) name.
      value:
        type: string
        description: Human-readable name in ALL CAPS for this column (value).
  ReportingConceptSetConcept:
    x-aou-note: |-
      This code was generated using reporting-wizard.rb at 2020-11-23T10:38:23-05:00.
      Manual modification should be avoided if possible as this is a one-time generation
      and does not run on every build and updates must be merged manually for now.
    type: object
    properties:
      conceptId:
        type: integer
        format: int64
        description: ''
      conceptSetId:
        type: integer
        format: int64
        description: ''
  GenomicExtractionJobListResponse:
    properties:
      jobs:
        type: array
        items:
          "$ref": "#/definitions/GenomicExtractionJob"
  GenomicExtractionJob:
    properties:
      genomicExtractionJobId:
        type: integer
        format: int64
        description: Workbench database Id for the job
      datasetName:
        type: string
      cost:
        type: number
        format: currency
      vcfSizeMb:
        type: integer
        format: int64
        description: Size of all the VCF files generated by this extraction job
      outputDir:
        type: string
      status:
        "$ref": '#/definitions/TerraJobStatus'
      submissionDate:
        type: integer
        format: int64
        description: Submission Timestamp (epoch) according to Terra
      completionTime:
        type: integer
        format: int64
        description: Submission Completion Timestamp (epoch) according to Terra
  TerraJobStatus:
    type: string
    description: 'Terra job status. Indicates if the Terra Submission and Workflows are still running, succeeded, or failed.
      Effectively a collapsed model of Terras Submission status and Workflow status'
    enum:
      - RUNNING
      - FAILED
      - SUCCEEDED
      - ABORTED
      - ABORTING
  TierAccessStatus:
    type: string
    description: 'Whether a user currently has access to a tier'
    enum:
      - DISABLED
      - ENABLED
  UserTierEligibility:
    type: object
    properties:
      accessTierShortName:
        description: Short name of access tier.
        type: string
      eligible:
         type: boolean
         description: |-
          User eligibility for tiers is based on their contact emails and their institution's tier
          requirements. This does not mean the user has access to these tiers; to gain
          access, the user must still complete all the necessary access requirement steps for each tier.
      eraRequired:
         type: boolean
         description: If eRA Commons linking is required for this access tier.

  DemographicSurveyV2:
    type: object
    properties:
      completionTime:
        type: string
        format: date-time
        description: The time the user most recently completed the survey
      ethnicCategories:
        type: array
        items:
          "$ref": "#/definitions/EthnicCategory"
      ethnicityAiAnOtherText:
        type: string
        description: American Indian or Alaska Native /  None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityAsianOtherText:
        type: string
        description: Asian / None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityBlackOtherText:
        type: string
        description: Black / None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityHispanicOtherText:
        type: string
        description: Hispanic / None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityMeNaOtherText:
        type: string
        description: Middle Eastern or North African / None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityNhPiOtherText:
        type: string
        description: Native Hawaiian or other Pacific Islander / None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityWhiteOtherText:
        type: string
        description: White / None of these fully describe me, and I want to specify.  Max length 200.
      ethnicityOtherText:
        type: string
        description: None of these fully describe me, and I want to specify.  Max length 200.
      genderIdentities:
        type: array
        items:
          "$ref": "#/definitions/GenderIdentityV2"
      genderOtherText:
        type: string
        description: None of these fully describe me, and I want to specify.  Max length 200.
      sexualOrientations:
        type: array
        items:
          "$ref": "#/definitions/SexualOrientationV2"
      orientationOtherText:
        type: string
        description: None of these fully describe me, and I want to specify.  Max length 200.
      sexAtBirth:
        "$ref": "#/definitions/SexAtBirthV2"
      sexAtBirthOtherText:
        type: string
        description: None of these fully describe me, and I want to specify.  Max length 200.
      yearOfBirth:
        type: integer
      yearOfBirthPreferNot:
        type: boolean
      disabilityHearing:
        "$ref": "#/definitions/YesNoPreferNot"
        description: Are you deaf or do you have serious difficulty hearing?
      disabilitySeeing:
        "$ref": "#/definitions/YesNoPreferNot"
        description: Are you blind or do you have serious difficulty seeing, even when wearing glasses?
      disabilityConcentrating:
        "$ref": "#/definitions/YesNoPreferNot"
        description: >
          Because of a physical, cognitive, or emotional condition,
          do you have serious difficulty concentrating, remembering, or making decisions?
      disabilityWalking:
        "$ref": "#/definitions/YesNoPreferNot"
        description: Do you have serious difficulty walking or climbing stairs?
      disabilityDressing:
        "$ref": "#/definitions/YesNoPreferNot"
        description: Do you have difficulty dressing or bathing?
      disabilityErrands:
        "$ref": "#/definitions/YesNoPreferNot"
        description: >
          Because of a physical, mental, or emotional condition,
          do you have difficulty doing errands alone such as visiting
          a doctor’s office or shopping?
      disabilityOtherText:
        type: string
        description: >
          Do you have a physical, cognitive, and/or emotional condition that
          substantially inhibits one or more life activities not specified
          through the above questions, and want to share more? Please describe.
      education:
        "$ref": "#/definitions/EducationV2"
      disadvantaged:
        "$ref": "#/definitions/YesNoPreferNot"
        description: >
          Are you an individual from a disadvantaged background,
          as defined by NIH Diversity in Extramural Programs?
      surveyComments:
        type: string
        description: >
          Is there any aspect of your identity that we have not covered in the
          preceding questions that we may want to consider including in future
          surveys?

  EthnicCategory:
    type: string
    description: 'Which categories describe you? (Select all that apply). Note, you may select more than one group.'
    enum:
      - AI_AN                 # American Indian or Alaska Native (no additional qualifier)
      - AI_AN_AMERICAN_INDIAN # American Indian or Alaska Native / American Indian
      - AI_AN_ALASKA_NATIVE   # American Indian or Alaska Native / Alaska Native
      - AI_AN_CENTRAL_SOUTH   # American Indian or Alaska Native / Central or South American Indian
      - AI_AN_OTHER           # American Indian or Alaska Native / None of these fully describe me, and I want to specify

      - ASIAN
      - ASIAN_INDIAN
      - ASIAN_CAMBODIAN
      - ASIAN_CHINESE
      - ASIAN_FILIPINO
      - ASIAN_HMONG
      - ASIAN_JAPANESE
      - ASIAN_KOREAN
      - ASIAN_LAO
      - ASIAN_PAKISTANI
      - ASIAN_VIETNAMESE
      - ASIAN_OTHER           # Asian / None of these fully describe me, and I want to specify

      - BLACK                 # Black, African American, or of African descent
      - BLACK_AA              # Black / African American
      - BLACK_BARBADIAN
      - BLACK_CARIBBEAN
      - BLACK_ETHIOPIAN
      - BLACK_GHANAIAN
      - BLACK_HAITIAN
      - BLACK_JAMAICAN
      - BLACK_LIBERIAN
      - BLACK_NIGERIAN
      - BLACK_SOMALI
      - BLACK_SOUTH_AFRICAN
      - BLACK_OTHER           # Black / None of these fully describe me, and I want to specify

      - HISPANIC              # Hispanic, Latino, or Spanish descent
      - HISPANIC_COLOMBIAN
      - HISPANIC_CUBAN
      - HISPANIC_DOMINICAN
      - HISPANIC_ECUADORIAN
      - HISPANIC_HONDURAN
      - HISPANIC_MEXICAN      # Hispanic / Mexican or Mexican American
      - HISPANIC_PUERTO_RICAN
      - HISPANIC_SALVADORAN
      - HISPANIC_SPANISH
      - HISPANIC_OTHER        # Hispanic / None of these fully describe me, and I want to specify

      - MENA                  # Middle Eastern or North African
      - MENA_AFGHAN
      - MENA_ALGERIAN
      - MENA_EGYPTIAN
      - MENA_IRANIAN
      - MENA_IRAQI
      - MENA_ISRAELI
      - MENA_LEBANESE
      - MENA_MOROCCAN
      - MENA_SYRIAN
      - MENA_TUNISIAN
      - MENA_OTHER            # Middle Eastern or North African / None of these fully describe me, and I want to specify

      - NHPI                  # Native Hawaiian or other Pacific Islander
      - NHPI_CHAMORRO
      - NHPI_CHUUKESE
      - NHPI_FIJIAN
      - NHPI_MARSHALLESE
      - NHPI_HAWAIIAN         # Native Hawaiian
      - NHPI_PALAUAN
      - NHPI_SAMOAN
      - NHPI_TAHITIAN
      - NHPI_TONGAN
      - NHPI_OTHER            # Native Hawaiian or other Pacific Islander / None of these fully describe me, and I want to specify

      - WHITE                 # White, or of European descent
      - WHITE_DUTCH
      - WHITE_ENGLISH
      - WHITE_EUROPEAN
      - WHITE_FRENCH
      - WHITE_GERMAN
      - WHITE_IRISH
      - WHITE_ITALIAN
      - WHITE_NORWEGIAN
      - WHITE_POLISH
      - WHITE_SCOTTISH
      - WHITE_SPANISH
      - WHITE_OTHER           # White / None of these fully describe me, and I want to specify

      - OTHER                 # None of these fully describe me, and I want to specify
      - PREFER_NOT_TO_ANSWER

  GenderIdentityV2:
    type: string
    description: 'Which terms best express how you describe your current gender identity? (Select all that apply)'
    enum:
      - GENDERQUEER
      - MAN
      - NON_BINARY
      - QUESTIONING           # Questioning or unsure of my gender identity
      - TRANS_MAN             # Trans man/Transgender man
      - TRANS_WOMAN           # Trans woman/Transgender woman
      - TWO_SPIRIT
      - WOMAN
      - OTHER                 # None of these fully describe me, and I want to specify
      - PREFER_NOT_TO_ANSWER

  SexualOrientationV2:
    type: string
    description: 'Which terms best express how you describe your current sexual orientation? (Select all that apply)'
    enum:
      - ASEXUAL
      - BISEXUAL
      - GAY
      - LESBIAN
      - POLYSEXUAL            # Polysexual, omnisexual, or pansexual
      - QUEER
      - QUESTIONING           # Questioning or unsure of my sexual orientation
      - SAME_GENDER           # Same-gender loving
      - STRAIGHT              # Straight or heterosexual
      - TWO_SPIRIT
      - OTHER                 # None of these fully describe me, and I want to specify
      - PREFER_NOT_TO_ANSWER

  SexAtBirthV2:
    type: string
    description: 'What was the sex assigned to you at birth, such as on your original birth certificate?'
    enum:
      - FEMALE
      - INTERSEX
      - MALE
      - OTHER                 # None of these fully describe me, and I want to specify
      - PREFER_NOT_TO_ANSWER

  EducationV2:
    type: string
    description: 'Highest Level of Education Completed'
    enum:
      - NO_EDUCATION          # Never attended school/No formal education
      - GRADES_1_12           # Primary/Middle School/High School (Grades 1 through 12/GED)
      - UNDERGRADUATE         # Some college, Associate Degree or Technical School (1 to 3 years) or current undergraduate student
      - COLLEGE_GRADUATE      # College graduate (4 years or more) or current post-graduate trainee
      - MASTER
      - DOCTORATE
      - PREFER_NOT_TO_ANSWER

  YesNoPreferNot:
    type: string
    enum:
      - 'YES'   # quotes needed so Swagger/YAML doesn't autoconvert this to "true"
      - 'NO'    # quotes needed so Swagger/YAML doesn't autoconvert this to "false"
      - PREFER_NOT_TO_ANSWER

  CreateNewUserSatisfactionSurvey:
    type: object
    properties:
      satisfaction:
        "$ref": "#/definitions/NewUserSatisfactionSurveySatisfaction"
      additionalInfo:
        type: string
        description: Additional information regarding their satisfaction score

  NewUserSatisfactionSurveySatisfaction:
    type: string
    description: How satisfied the user is with the researcher workbench.
    enum:
      - VERY_UNSATISFIED
      - UNSATISFIED
      - NEUTRAL
      - SATISFIED
      - VERY_SATISFIED
