openapi: 3.0.3
info:
  title: Workspace Manager API
  description: Workspace Manager REST API to manage workspaces.
  version: 0.0.1
paths:
  /api/admin/v1/resources/controlled/backfillRegions/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to sync IAM roles.
      operationId: getBackfillControlledResourcesRegionsResult
      tags:
        - Admin
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/admin/v1/workspaces/cloudcontexts/syncIamRoles:
    patch:
      parameters:
        - $ref: '#/components/parameters/WetRun'
      summary: Sync custom IAM roles for all workspaces.
      operationId: syncIamRoles
      tags:
        - Admin
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/admin/v1/workspaces/cloudcontexts/syncIamRoles/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to sync IAM roles.
      operationId: getSyncIamRolesResult
      tags:
        - Admin
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/job/v1/jobs/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
    get:
      tags:
        - jobs
      operationId: retrieveJob
      responses:
        200:
          description: Job is complete (succeeded or failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReport'
        202:
          description: Job is running
          headers:
            Retry-After:
              description: optional - estimated seconds to wait before polling again.
                This allows a server to offer a hint as to when the job might be complete.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReport'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/PermissionDenied'
        404:
          $ref: '#/components/responses/NotFound'
  /api/landingzones/definitions/v1/azure:
    get:
      summary: List all Azure landing zones definitions
      operationId: listAzureLandingZonesDefinitions
      tags:
        - LandingZones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureLandingZoneDefinitionList'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/landingzones/v1/azure:
    post:
      summary: Starts an async job to create an Azure landing zone
      operationId: createAzureLandingZone
      tags:
        - LandingZones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureLandingZoneRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateLandingZoneResponse'
        '202':
          $ref: '#/components/responses/CreateLandingZoneResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      parameters:
        - $ref: '#/components/parameters/BillingProfileId'
      summary: List Azure landing zones available to user
      operationId: listAzureLandingZones
      tags:
        - LandingZones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureLandingZoneList'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/landingzones/v1/azure/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the status of a async job to create an Azure Landing Zone
      operationId: getCreateAzureLandingZoneResult
      tags:
        - LandingZones
      responses:
        '200':
          $ref: '#/components/responses/CreateLandingZoneJobResponse'
        '202':
          $ref: '#/components/responses/CreateLandingZoneJobResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/landingzones/v1/azure/{landingZoneId}:
    parameters:
      - $ref: '#/components/parameters/LandingZoneId'
    post:
      summary: 'Starts an async job to delete an existing Azure landing zone. OpenAPI

        does not support request body in DELETE, but async state requires it.

        Hence this is a POST.

        '
      operationId: deleteAzureLandingZone
      tags:
        - LandingZones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAzureLandingZoneRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DeleteAzureLandingZoneResponse'
        '202':
          $ref: '#/components/responses/DeleteAzureLandingZoneResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      summary: Get Azure landing zone
      operationId: getAzureLandingZone
      tags:
        - LandingZones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureLandingZone'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/landingzones/v1/azure/{landingZoneId}/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/LandingZoneId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to delete the Azure Landing Zone
      operationId: getDeleteAzureLandingZoneResult
      tags:
        - LandingZones
      responses:
        '200':
          $ref: '#/components/responses/DeleteAzureLandingZoneJobResponse'
        '202':
          $ref: '#/components/responses/DeleteAzureLandingZoneJobResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/landingzones/v1/azure/{landingZoneId}/resource-quota:
    parameters:
      - $ref: '#/components/parameters/LandingZoneId'
      - $ref: '#/components/parameters/AzureResourceId'
    get:
      summary: Get the quota information of a resource an Azure Landing Zone
      operationId: getResourceQuotaResult
      tags:
        - LandingZones
      responses:
        '200':
          $ref: '#/components/responses/ResourceQuotaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/landingzones/v1/azure/{landingZoneId}/resources:
    parameters:
      - $ref: '#/components/parameters/LandingZoneId'
    get:
      summary: List all Azure landing zones resources
      operationId: listAzureLandingZoneResources
      tags:
        - LandingZones
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureLandingZoneResourcesList'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/policies/v1/getLocationInfo:
    parameters:
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/WsmPolicyLocation'
    get:
      summary: Get the cloud location info.
      operationId: getLocationInfo
      tags:
        - policy
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WsmPolicyLocation'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/alpha1/{workspaceId}/jobs:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/PageToken'
      - $ref: '#/components/parameters/ResourceType'
      - $ref: '#/components/parameters/StewardshipType'
      - $ref: '#/components/parameters/ResourceName'
      - $ref: '#/components/parameters/JobStateFilter'
    get:
      summary: 'Enumerate recent jobs run in a workspace. The enumeration includes
        both running

        and completed jobs. It is ordered by start time of the job.

        '
      operationId: enumerateJobs
      tags:
        - Alpha1
      responses:
        '200':
          description: Listing of recent jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumerateJobsResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/alpha1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}/load:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      operationId: loadUrlList
      tags:
        - Alpha1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUrlListRequestBody'
      summary: 'Use storage transfer service to transfer files from signed urls list
        to

        GCS bucket.

        '
      responses:
        '200':
          $ref: '#/components/responses/LoadUrlListResponse'
        '202':
          $ref: '#/components/responses/LoadUrlListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/alpha1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}/load/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
      - $ref: '#/components/parameters/JobId'
    get:
      operationId: fetchLoadUrlListResult
      tags:
        - Alpha1
      summary: Get the result of load signed url list.
      responses:
        '200':
          $ref: '#/components/responses/LoadUrlListResponse'
        '202':
          $ref: '#/components/responses/LoadUrlListResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1:
    post:
      summary: Create a new Workspace.
      operationId: createWorkspace
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequestBody'
      responses:
        '200':
          description: Response to createWorkspace calls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedWorkspace'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/NotFound'
    get:
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/MinimumHighestRole'
      summary: List all workspaces a user can read.
      operationId: listWorkspaces
      tags:
        - Workspace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescriptionList'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/workspaceByUserFacingId/{workspaceUserFacingId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceUserFacingId'
      - $ref: '#/components/parameters/MinimumHighestRole'
    get:
      summary: Get an existing Workspace by userFacingId.
      operationId: getWorkspaceByUserFacingId
      tags:
        - Workspace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    get:
      summary: Get an existing Workspace.
      operationId: getWorkspace
      tags:
        - Workspace
      parameters:
        - $ref: '#/components/parameters/MinimumHighestRole'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update an existing Workspace.
      operationId: updateWorkspace
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      deprecated: true
      summary: 'Delete a Workspace.

        Deprecated in favor of the async V2 version.

        '
      operationId: deleteWorkspace
      tags:
        - Workspace
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/applications:
    get:
      parameters:
        - $ref: '#/components/parameters/WorkspaceId'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      summary: List all applications and whether they are enabled on a workspace
      operationId: listWorkspaceApplications
      tags:
        - WorkspaceApplication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescriptionList'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/applications/{applicationId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ApplicationId'
    get:
      summary: Get an application and its state in this workspace
      operationId: getWorkspaceApplication
      tags:
        - WorkspaceApplication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/applications/{applicationId}/disable:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Disable an application in a workspace
      operationId: disableWorkspaceApplication
      tags:
        - WorkspaceApplication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/applications/{applicationId}/enable:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Enable an application in a workspace
      operationId: enableWorkspaceApplication
      tags:
        - WorkspaceApplication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Clone a workspace and its eligible resources
      operationId: cloneWorkspace
      tags:
        - Workspace
      requestBody:
        description: Details of workspace clone operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneWorkspaceRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '202':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp bucket clone job.
      operationId: getCloneWorkspaceResult
      tags:
        - Workspace
      responses:
        '200':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '202':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/cloudcontexts:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a cloud context for the workspace.
      operationId: createCloudContext
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCloudContextRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '202':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/cloudcontexts/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to create a cloud context.
      operationId: getCreateCloudContextResult
      tags:
        - Workspace
      responses:
        '200':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '202':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/cloudcontexts/{cloudContext}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/CloudContext'
    delete:
      deprecated: true
      summary: 'Deletes a cloud context and all of its data from a workspace.

        Deprecated in favor of the async V2 version.

        '
      operationId: deleteCloudContext
      tags:
        - Workspace
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/folders:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    get:
      summary: Get all folders in a given workspace
      operationId: listFolders
      tags:
        - Folder
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderList'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Create a new folder in a given workspace under given folder
      operationId: createFolder
      tags:
        - Folder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/NotFound'
  /api/workspaces/v1/{workspaceId}/folders/{folderId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/FolderId'
    get:
      summary: Get an existing Folder.
      operationId: getFolder
      tags:
        - Folder
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update an existing folder.
      operationId: updateFolder
      tags:
        - Folder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a folder asynchronously. OpenAPI does not support request body\
        \ in \nDELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteFolderAsync
      tags:
        - Folder
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/folders/{folderId}/properties:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/FolderId'
    post:
      operationId: updateFolderProperties
      summary: 'Update folder properties. Only properties with keys in request are

        updated. Properties with keys not in request are not updated.

        '
      tags:
        - Folder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Properties'
      responses:
        '204':
          description: Properties update sucessfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      operationId: deleteFolderProperties
      tags:
        - Folder
      summary: 'Delete folder properties. Only properties with keys in request are

        deleted. Properties with keys not in request are not deleted.

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKeys'
      responses:
        '204':
          description: Properties delete sucessfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/folders/{folderId}/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/FolderId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to delete a folder.
      operationId: getDeleteFolderResult
      tags:
        - Folder
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/gcp/enablepet:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Allow a user to impersonate their pet SA in a given workspace
      description: 'This endpoint is exposed as a workaround to support calling Google

        Pipelines API in a workspace. It will likely be removed in the future in

        favor of other cloud sync methods.

        '
      operationId: enablePet
      tags:
        - Workspace
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/listValidRegions:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Platform'
    get:
      summary: 'list valid data centers of a given workspace on a cloud platform.

        '
      operationId: listValidRegions
      tags:
        - Workspace
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regions'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/policies:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    patch:
      summary: Update policies for a workspace
      operationId: updatePolicies
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WsmPolicyUpdateRequest'
      responses:
        '200':
          description: Update successfully processed. The update itself may or may
            not have succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WsmPolicyUpdateResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/policies/explain:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/WsmPolicyDepth'
    get:
      summary: Get an explanation of the workspace policies
      operationId: explainPolicies
      tags:
        - Workspace
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WsmPolicyExplainResult'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/policies/mergeCheck:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: The result of a merge calculation between two workspaces. This does
        not mutate the original workspaces.
      description: "The target workspace is identified by the path parameter.\nThe\
        \ source workspace is provided in the source request. \nPolicies from the\
        \ source workspace are merged into the target workspace.\nThe merge operation\
        \ is called with DRY_RUN, so no mutations take place.\n"
      operationId: mergeCheck
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeCheckRequest'
      responses:
        '202':
          description: Merge calculation successfully processed (no action is taken).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WsmPolicyMergeCheckResult'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/properties:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: "Update the properties in workspace. Only properties with keys in request\
        \ \nare updated. Properties with keys not in request are not updated.\n"
      operationId: updateWorkspaceProperties
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Properties'
      responses:
        '204':
          description: properties update sucessfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: 'delete existing Workspace properties. Only properties with keys in

        request are deleted. Properties with keys not in request are not

        deleted.

        '
      operationId: deleteWorkspaceProperties
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKeys'
      responses:
        '204':
          description: properties delete sucessfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/ResourceType'
      - $ref: '#/components/parameters/StewardshipType'
    get:
      summary: 'Enumerate resources in a workspace. The visible resources depend on
        the permissions of the caller.

        These are presented sorted by ascending resource name. The offset and limit
        parameters allow paging

        through the results. You can also filter by a resource type and by a stewardship
        type.

        '
      operationId: enumerateResources
      tags:
        - Resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/any/flexibleResources:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled flexible resource.
      operationId: createFlexibleResource
      tags:
        - ControlledFlexibleResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledFlexibleResourceRequestBody'
      responses:
        '200':
          description: Response to creating a controlled flexible resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledFlexibleResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/any/flexibleResources/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled flexible resource.
      operationId: getFlexibleResource
      tags:
        - ControlledFlexibleResource
      responses:
        '200':
          $ref: '#/components/responses/ControlledFlexibleResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled flexible resource.
      operationId: updateFlexibleResource
      tags:
        - ControlledFlexibleResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledFlexibleResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/ControlledFlexibleResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a controlled flexible resource.
      operationId: deleteFlexibleResource
      tags:
        - ControlledFlexibleResource
      responses:
        '204':
          description: Success
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/any/flexibleResources/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a flexible resource.
      operationId: cloneFlexibleResource
      tags:
        - ControlledFlexibleResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledFlexibleResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneControlledFlexibleResourceResponse'
        '202':
          $ref: '#/components/responses/CloneControlledFlexibleResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/notebook:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: "Create a new controlled AWS SageMaker Notebook instance resource.\
        \ This \nis async, because the operation can take a few minutes.\n"
      operationId: createAwsSageMakerNotebook
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAwsSageMakerNotebookRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAwsSageMakerNotebookResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAwsSageMakerNotebookResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/notebook/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an AWS SageMaker Notebook instance resource
        creation job.
      operationId: getCreateAwsSageMakerNotebookResult
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAwsSageMakerNotebookResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAwsSageMakerNotebookResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/notebook/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an AWS SageMaker Notebook resource deletion
        job.
      operationId: getDeleteAwsSageMakerNotebookResult
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/notebook/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled AWS SageMaker Notebook instance
        name.
      operationId: generateAwsSageMakerNotebookCloudName
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAwsResourceCloudNameRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GenerateAwsResourceCloudNameResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/notebook/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled AWS SageMaker Notebook resource.
      operationId: getAwsSageMakerNotebook
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsSageMakerNotebookResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled AWS SageMaker Notebook resource.
      operationId: updateAwsSageMakerNotebook
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledAwsSageMakerNotebookRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateControlledAwsSageMakerNotebookResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled AWS SageMaker Notebook resource. This is async,\
        \ because the \noperation can take a few minutes. OpenAPI does not support\
        \ request body \nin DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAwsSageMakerNotebook
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAwsResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/notebook/{resourceId}/credential:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
      - $ref: '#/components/parameters/AwsCredentialAccessScope'
      - $ref: '#/components/parameters/AwsCredentialDurationSeconds'
    get:
      summary: Get a credential to access this SageMaker Notebook in the AWS CLI or
        SDK.
      operationId: getAwsSageMakerNotebookCredential
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsResourceCredentialResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled AWS S3 Storage Folder resource.
      operationId: createAwsS3StorageFolder
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAwsS3StorageFolderRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAwsS3StorageFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an AWS S3 Storage Folder resource deletion
        job.
      operationId: getDeleteAwsS3StorageFolderResult
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled AWS S3 Storage Folder name.
      operationId: generateAwsS3StorageFolderCloudName
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAwsResourceCloudNameRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GenerateAwsResourceCloudNameResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled AWS S3 Storage Folder resource.
      operationId: getAwsS3StorageFolder
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsS3StorageFolderResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled AWS S3 Storage resource.
      operationId: updateAwsS3StorageFolder
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledAwsS3StorageFolderRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateControlledAwsS3StorageFolderResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled AWS S3 Storage resource. This is async, because\
        \ the \noperation can take a few minutes. OpenAPI does not support request\
        \ body \nin DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAwsS3StorageFolder
      tags:
        - ControlledAwsResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAwsResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/{resourceId}/credential:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
      - $ref: '#/components/parameters/AwsCredentialAccessScope'
      - $ref: '#/components/parameters/AwsCredentialDurationSeconds'
    get:
      summary: Get a credential to access this S3 Storage Folder in the AWS CLI or
        SDK.
      operationId: getAwsS3StorageFolderCredential
      tags:
        - ControlledAwsResource
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsResourceCredentialResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/batchpool:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Batch Pool
      operationId: createAzureBatchPool
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureBatchPoolRequestBody'
      responses:
        '200':
          description: Response to create controlled Azure Batch Pool
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledAzureBatchPool'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/batchpool/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    delete:
      summary: Delete an Azure Batch Pool
      operationId: deleteAzureBatchPool
      tags:
        - ControlledAzureResource
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/databases:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Database
      operationId: createAzureDatabase
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureDatabaseRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureDatabaseResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/databases/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an Azure Database create job.
      operationId: getCreateAzureDatabaseResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureDatabaseResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAzureDatabaseResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/databases/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure Database resource
      operationId: getAzureDatabase
      tags:
        - ControlledAzureResource
      responses:
        '200':
          description: Response to get database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatabaseResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a controlled Azure Database resource.
      operationId: deleteAzureDatabase
      tags:
        - ControlledAzureResource
      responses:
        '204':
          description: Success
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Disk
      operationId: createAzureDisk
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureDiskRequestBody'
      responses:
        '200':
          description: Response to create controlled Azure disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledAzureDisk'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure disk deletion job.
      operationId: getDeleteAzureDiskResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure Disk resource
      operationId: getAzureDisk
      tags:
        - ControlledAzureResource
      responses:
        '200':
          description: Response to get disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDiskResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled Azure Disk resource. This is async, because the\
        \ \noperation can take a few minutes. OpenAPI does not support request body\
        \ \nin DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAzureDisk
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/kubernetesNamespaces:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure KubernetesNamespace
      operationId: createAzureKubernetesNamespace
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureKubernetesNamespaceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureKubernetesNamespaceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/kubernetesNamespaces/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an Azure KubernetesNamespace create job.
      operationId: getCreateAzureKubernetesNamespaceResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureKubernetesNamespaceResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAzureKubernetesNamespaceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/kubernetesNamespaces/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure KubernetesNamespace deletion job.
      operationId: getDeleteAzureKubernetesNamespaceResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/kubernetesNamespaces/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure KubernetesNamespace resource
      operationId: getAzureKubernetesNamespace
      tags:
        - ControlledAzureResource
      responses:
        '200':
          description: Response to get kubernetesNamespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureKubernetesNamespaceResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled Azure KubernetesNamespace resource. This is async,\
        \ because the \noperation can take a few minutes. OpenAPI does not support\
        \ request body \nin DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAzureKubernetesNamespace
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/managedIdentities:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure ManagedIdentity
      operationId: createAzureManagedIdentity
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureManagedIdentityRequestBody'
      responses:
        '200':
          description: Response to create controlled Azure managedIdentity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledAzureManagedIdentity'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/managedIdentities/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure ManagedIdentity resource
      operationId: getAzureManagedIdentity
      tags:
        - ControlledAzureResource
      responses:
        '200':
          description: Response to get managedIdentity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureManagedIdentityResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a controlled Azure ManagedIdentity resource.
      operationId: deleteAzureManagedIdentity
      tags:
        - ControlledAzureResource
      responses:
        '204':
          description: Success
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storageContainer:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Storage Container with private access
      operationId: createAzureStorageContainer
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureStorageContainerRequestBody'
      responses:
        '200':
          description: Response to create controlled azure storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledAzureStorageContainer'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storageContainer/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an Azure storage container clone job.
      operationId: getCloneAzureStorageContainerResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/ClonedControlledAzureStorageContainerResponse'
        '202':
          $ref: '#/components/responses/ClonedControlledAzureStorageContainerResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storageContainer/{resourceId}:
    post:
      parameters:
        - $ref: '#/components/parameters/WorkspaceId'
        - $ref: '#/components/parameters/ResourceId'
      summary: "Delete a controlled Azure Storage Container resource. This is async,\
        \ \nbecause the operation can take a few minutes. OpenAPI does not support\
        \ \nrequest body in DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAzureStorageContainer
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storageContainer/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone an Azure Storage Container
      operationId: cloneAzureStorageContainer
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledAzureStorageContainerRequest'
      responses:
        '200':
          $ref: '#/components/responses/ClonedControlledAzureStorageContainerResponse'
        '202':
          $ref: '#/components/responses/ClonedControlledAzureStorageContainerResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storageContainer/{resourceId}/getSasToken:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
      - $ref: '#/components/parameters/SasIpRange'
      - $ref: '#/components/parameters/SasExpirationDuration'
      - $ref: '#/components/parameters/SasPermissions'
      - $ref: '#/components/parameters/SasBlobName'
    post:
      summary: Create a SAS token to access the storage container
      operationId: createAzureStorageContainerSasToken
      tags:
        - ControlledAzureResource
      responses:
        '200':
          description: Response to create SAS token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedAzureStorageContainerSasToken'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Asynchronoulsy create a new controlled Azure VM
      operationId: createAzureVm
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureVmRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an Azure Vm create job.
      operationId: getCreateAzureVmResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure vm deletion job.
      operationId: getDeleteAzureVmResult
      tags:
        - ControlledAzureResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure VM resource
      operationId: getAzureVm
      tags:
        - ControlledAzureResource
      responses:
        '200':
          description: Response to get vm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureVmResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled Azure VM resource. This is async, because the\
        \ \noperation can take a few minutes. OpenAPI does not support request body\
        \ \nin DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAzureVm
      tags:
        - ControlledAzureResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Gcp AI Platform Notebook Instance
      operationId: createAiNotebookInstance
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpAiNotebookInstanceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP AI Platform Notebook create instance
        job.
      operationId: getCreateAiNotebookInstanceResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP AI Platform Notebook delete instance
        job.
      operationId: getDeleteAiNotebookInstanceResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled AI notebook instance name
      operationId: generateAiNotebookCloudInstanceId
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGcpAiNotebookCloudIdRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloudAiNotebookIdResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled AI Notebook instance resource
      operationId: getAiNotebookInstance
      tags:
        - ControlledGcpResource
      responses:
        '200':
          description: Response to get AI Notebook instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpAiNotebookInstanceResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled GCP AI Notebook instance resource. This is async,\
        \ \nbecause the operation can take ~5 minutes. OpenAPI does not support \n\
        request body in DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteAiNotebookInstance
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledGcpAiNotebookInstanceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled GCP notebook resource
      operationId: updateAiNotebookInstance
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpAiNotebookInstanceRequestBody'
      responses:
        '200':
          description: Response to update an AI Notebook instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpAiNotebookInstanceResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled BigQuery dataset
      operationId: createBigQueryDataset
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpBigQueryDatasetRequestBody'
      responses:
        '200':
          description: Response to Create controlled BigQuery dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledGcpBigQueryDataset'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp BigQuery dataset clone job.
      operationId: getCloneBigQueryDatasetResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '202':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled big query dataset id
      operationId: generateBigQueryDatasetCloudId
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGcpBigQueryDatasetCloudIDRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/BqDatasetCloudIdResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled BigQuery dataset resource
      operationId: getBigQueryDataset
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/ControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled BigQuery dataset resource
      operationId: updateBigQueryDataset
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpBigQueryDatasetRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/ControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a controlled Bigquery dataset
      operationId: deleteBigQueryDataset
      tags:
        - ControlledGcpResource
      responses:
        '204':
          description: Success
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a BigQuery dataset
      operationId: cloneBigQueryDataset
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledGcpBigQueryDatasetRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '202':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Gcp bucket
      operationId: createBucket
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpGcsBucketRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp bucket clone job.
      operationId: getCloneGcsBucketResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp bucket deletion job.
      operationId: getDeleteBucketResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled Gcp bucket name
      operationId: generateGcpGcsBucketCloudName
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGcpGcsBucketCloudNameRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcsBucketCloudNameResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled GCS bucket resource
      operationId: getBucket
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GetControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled GCS Bucket resource.
      operationId: updateGcsBucket
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpGcsBucketRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled GCS bucket resource. This is async, because the\
        \ \noperation can take a few minutes. OpenAPI does not support request body\
        \ \nin DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteBucket
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledGcpGcsBucketRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a GCS Bucket
      operationId: cloneGcsBucket
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledGcpGcsBucketRequest'
      responses:
        '200':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/dataproc-clusters:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Gcp Dataproc cluster
      operationId: createDataprocCluster
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpDataprocClusterRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpDataprocClusterResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpDataprocClusterResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/dataproc-clusters/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a Dataproc cluster create job.
      operationId: getCreateDataprocClusterResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpDataprocClusterResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpDataprocClusterResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/dataproc-clusters/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP Dataproc cluster delete job.
      operationId: getDeleteDataprocClusterResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpDataprocClusterResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpDataprocClusterResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/dataproc-clusters/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled Dataproc cluster name.
      operationId: generateDataprocClusterCloudId
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGcpDataprocClusterCloudIdRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DataprocClusterCloudIdResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/dataproc-clusters/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Dataproc cluster resource
      operationId: getDataprocCluster
      tags:
        - ControlledGcpResource
      responses:
        '200':
          description: Response to get a Dataproc cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpDataprocClusterResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled Dataproc cluster resource. This is async, \nbecause\
        \ the operation can take ~5 minutes. OpenAPI does not support \nrequest body\
        \ in DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteDataprocCluster
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledGcpDataprocClusterRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpDataprocClusterResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpDataprocClusterResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled Dataproc cluster resource.
      operationId: updateDataprocCluster
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpDataprocClusterRequestBody'
      responses:
        '200':
          description: Response to update a Dataproc cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpDataprocClusterResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/gce-instances:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled GCP GCE Instance
      operationId: createGceInstance
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpGceInstanceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpGceInstanceResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpGceInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/gce-instances/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP GCE create instance job.
      operationId: getCreateGceInstanceResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpGceInstanceResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpGceInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/gce-instances/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP GCE delete instance job.
      operationId: getDeleteGceInstanceResult
      tags:
        - ControlledGcpResource
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpGceInstanceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpGceInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/gce-instances/generateName:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a controlled GCP GCE instance name
      operationId: generateGceInstanceCloudId
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGcpGceInstanceCloudIdRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GceInstanceCloudIdResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/gce-instances/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled GCP GCE instance resource
      operationId: getGceInstance
      tags:
        - ControlledGcpResource
      responses:
        '200':
          description: Response to get GCE instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpGceInstanceResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: "Delete a controlled GCP GCE instance resource. This is async, \nbecause\
        \ the operation can take ~5 minutes. OpenAPI does not support \nrequest body\
        \ in DELETE, but async state requires it. Hence this is a POST.\n"
      operationId: deleteGceInstance
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledGcpGceInstanceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpGceInstanceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpGceInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled GCP GCE instance resource
      operationId: updateGceInstance
      tags:
        - ControlledGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpGceInstanceRequestBody'
      responses:
        '200':
          description: Response to update an GCE instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcpGceInstanceResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new data repo snapshot reference in a workspace.
      operationId: createDataRepoSnapshotReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataRepoSnapshotReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a snapshot by name.
      operationId: getDataRepoSnapshotReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a snapshot from a workspace.
      operationId: getDataRepoSnapshotReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a snapshot reference
        in a workspace.
      operationId: updateDataRepoSnapshotReferenceResource
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataRepoSnapshotReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete datarepo snapshot reference
      operationId: deleteDataRepoSnapshotReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a referenced Data Repo Snapshot resource
      operationId: cloneGcpDataRepoSnapshotReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          description: Response for successful Data Repo Snapshot reference clone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneReferencedGcpDataRepoSnapshotResourceResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new BigQuery dataset reference in a workspace.
      operationId: createBigQueryDatasetReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpBigQueryDatasetReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a BigQuery dataset by name.
      operationId: getBigQueryDatasetReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a BigQuery dataset from a workspace.
      operationId: getBigQueryDatasetReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a BigQuery dataset
        reference in a workspace.
      operationId: updateBigQueryDatasetReferenceResource
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBigQueryDatasetReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete BigQuery dataset reference
      operationId: deleteBigQueryDatasetReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a BigQuery Dataset
      operationId: cloneGcpBigQueryDatasetReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDatasetResourceResponse'
        '202':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDatasetResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new BigQuery data table reference in a workspace.
      operationId: createBigQueryDataTableReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpBigQueryDataTableReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a BigQuery data table by name.
      operationId: getBigQueryDataTableReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a BigQuery data table from a workspace.
      operationId: getBigQueryDataTableReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: 'Update name, description, referencing target, or cloning instructions
        of a BigQuery data table reference in a workspace.

        '
      operationId: updateBigQueryDataTableReferenceResource
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBigQueryDataTableReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete BigQuery data table reference
      operationId: deleteBigQueryDataTableReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a BigQuery Data table
      operationId: cloneGcpBigQueryDataTableReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDataTableResourceResponse'
        '202':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDataTableResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new GCS object reference in a workspace.
      operationId: createGcsObjectReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpGcsObjectReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Gcp GCS object by name.
      operationId: getGcsObjectReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a GCS object from a workspace.
      operationId: getGcsObjectReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a bucket object reference
        in a workspace.
      operationId: updateBucketObjectReferenceResource
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGcsBucketObjectReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Gcp GCS object reference
      operationId: deleteGcsObjectReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a referenced GCS object resource
      operationId: cloneGcpGcsObjectReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          description: Response for successful GCS object reference clone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneReferencedGcpGcsObjectResourceResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new GCS bucket reference in a workspace.
      operationId: createBucketReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpGcsBucketReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Gcp bucket by name.
      operationId: getBucketReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a bucket from a workspace.
      operationId: getBucketReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or the referencing target of a bucket reference
        in a workspace
      operationId: updateBucketReferenceResource
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGcsBucketReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Gcp bucket reference
      operationId: deleteBucketReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a referenced GCS Bucket resource
      operationId: cloneGcpGcsBucketReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpGcsBucketResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new Git repository reference in a workspace.
      operationId: createGitRepoReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitRepoReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Git repo referenced resource by name
      operationId: getGitRepoReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a Git repository from a workspace.
      operationId: getGitRepoReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update name, description or referencing target of a Git repository
        reference in a workspace.
      operationId: updateGitRepoReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGitRepoReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Git repository reference
      operationId: deleteGitRepoReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a Git repository
      operationId: cloneGitRepoReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGitRepoResourceResponse'
        '202':
          $ref: '#/components/responses/CloneReferencedGitRepoResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/terra/workspaces:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Creates a reference to a Terra workspace
      operationId: createTerraWorkspaceReference
      tags:
        - ReferencedGcpResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTerraWorkspaceReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/TerraWorkspaceReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/terra/workspaces/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Terra workspace by name
      operationId: getTerraWorkspaceReferenceByName
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/TerraWorkspaceReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/terra/workspaces/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a Terra workspace
      operationId: getTerraWorkspaceReference
      tags:
        - ReferencedGcpResource
      responses:
        '200':
          $ref: '#/components/responses/TerraWorkspaceReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Deletes a referenced to a Terra workspace
      operationId: deleteTerraWorkspaceReference
      tags:
        - ReferencedGcpResource
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/{resourceId}/access:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Check a user's access to a referenced resource
      operationId: checkReferenceAccess
      tags:
        - Resource
      responses:
        '200':
          description: Whether the specified reference is accessible or not
          content:
            application/json:
              schema:
                type: boolean
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: 'Retrieve a resource in a workspace.

        '
      operationId: getResource
      tags:
        - Resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDescription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/{resourceId}/properties:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      operationId: updateResourceProperties
      summary: 'Update resource properties. Only properties with keys in request are

        updated. Properties with keys not in request are not updated.

        '
      tags:
        - Resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Properties'
      responses:
        '204':
          description: Properties update sucessfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      operationId: deleteResourceProperties
      tags:
        - Resource
      summary: 'Delete resource properties. Only properties with keys in request are

        deleted. Properties with keys not in request are not deleted.

        '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKeys'
      responses:
        '204':
          description: Properties delete sucessfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/roles:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    get:
      summary: Read all IAM roles and their members in a workspace.
      operationId: getRoles
      tags:
        - Workspace
      responses:
        '200':
          description: Response to list permissions calls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBindingList'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/roles/{role}/members:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Role'
    post:
      summary: Grant an IAM role to a user or group.
      operationId: grantRole
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantRoleRequestBody'
      responses:
        '204':
          description: Role granted successfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/roles/{role}/members/{memberEmail}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Role'
      - $ref: '#/components/parameters/MemberEmail'
    delete:
      summary: Remove an IAM role from a user or group.
      operationId: removeRole
      tags:
        - Workspace
      responses:
        '204':
          description: Role removed successfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v2:
    post:
      summary: Create a new Workspace and a new cloud context asynchronously
      operationId: createWorkspaceV2
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceV2Request'
      responses:
        '200':
          $ref: '#/components/responses/CreateWorkspaceV2Response'
        '202':
          $ref: '#/components/responses/CreateWorkspaceV2Response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v2/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to create a workspace.
      operationId: getCreateWorkspaceV2Result
      tags:
        - Workspace
      responses:
        '200':
          $ref: '#/components/responses/CreateWorkspaceV2Response'
        '202':
          $ref: '#/components/responses/CreateWorkspaceV2Response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v2/{workspaceId}/cloudcontexts/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: 'Gets the result of an async cloud context delete.

        '
      operationId: getDeleteCloudContextV2Result
      tags:
        - Workspace
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v2/{workspaceId}/cloudcontexts/{cloudContext}/delete:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/CloudContext'
    post:
      summary: 'Deletes a cloud context and all of its data from a workspace.

        This async delete requires a body, but that is not allowed on standard

        delete method, so this is done as a POST and labeled as delete in the path.

        '
      operationId: deleteCloudContextV2
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCloudContextV2Request'
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v2/{workspaceId}/delete:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: 'Deletes a workspace and all of its cloud contexts and data.

        This async delete requires a body, but that is not allowed on standard

        delete method, so this is done as a POST and labeled as delete in the path.

        '
      operationId: deleteWorkspaceV2
      tags:
        - Workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkspaceV2Request'
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v2/{workspaceId}/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: 'Gets the result of an async workspace delete.

        '
      operationId: getDeleteWorkspaceV2Result
      tags:
        - Workspace
      responses:
        '200':
          $ref: '#/components/responses/JobResultResponse'
        '202':
          $ref: '#/components/responses/JobResultResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /status:
    get:
      security: []
      summary: Returns the operational status of the service
      operationId: serviceStatus
      tags:
        - Unauthenticated
      responses:
        '200':
          description: Service can process requests
        '500':
          description: 'Service cannot process requests. That might be because dependent
            services are

            unavailable, or because there is a problem with the service itself.

            '
  /version:
    get:
      security: []
      summary: Returns the deployed version of the service
      operationId: serviceVersion
      tags:
        - Unauthenticated
      responses:
        '200':
          description: System version response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemVersion'
components:
  parameters:
    ApplicationId:
      name: applicationId
      in: path
      description: A string used to identify an application in the workspace manager
      required: true
      schema:
        type: string
    AwsCredentialAccessScope:
      name: accessScope
      in: query
      description: Access to request for an AWS credential or Console URL.
      required: true
      schema:
        $ref: '#/components/schemas/AwsCredentialAccessScope'
    AwsCredentialDurationSeconds:
      name: durationSeconds
      in: query
      description: Duration for credential to access controlled AWS resource in seconds.
      required: true
      schema:
        $ref: '#/components/schemas/AwsCredentialDurationSeconds'
    AzureResourceId:
      name: azureResourceId
      in: query
      description: The fully qualified ID of the Azure resource, including the resource
        name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.
      required: true
      schema:
        type: string
    BillingProfileId:
      name: billingProfileId
      in: query
      description: A string to identify an Azure billing profile.
      required: false
      schema:
        type: string
        format: uuid
    CloudContext:
      name: cloudContext
      in: path
      description: A cloud platform which holds context for a workspace.
      required: true
      schema:
        $ref: '#/components/schemas/CloudPlatform'
    FolderId:
      name: folderId
      in: path
      description: An UUID to identify a folder in a workspace.
      required: true
      schema:
        type: string
        format: uuid
    JobId:
      name: jobId
      in: path
      description: A String ID to used to identify a job
      required: true
      schema:
        type: string
    JobStateFilter:
      name: jobState
      in: query
      description: The state of jobs to return (ALL, ACTIVE, COMPLETED)
      required: false
      schema:
        $ref: '#/components/schemas/JobStateFilter'
    LandingZoneId:
      name: landingZoneId
      in: path
      description: A string to identify an Azure landing zone.
      required: true
      schema:
        type: string
        format: uuid
    Limit:
      name: limit
      in: query
      description: The maximum number of items to return. Default 10
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10
    MemberEmail:
      name: memberEmail
      in: path
      description: A user or group's email. Used for adding or removing IAM permissions
      required: true
      schema:
        type: string
    MinimumHighestRole:
      name: minimumHighestRole
      in: query
      description: 'Returned workspace''s highest role must be at least this. If

        minimumHighestRole is READER and requester only has DISCOVERER role,

        workspace is not returned. If not set, defaults to READER.

        '
      required: false
      schema:
        $ref: '#/components/schemas/IamRole'
    Name:
      name: name
      in: path
      description: A name used to identify an object in the workspace manager
      required: true
      schema:
        $ref: '#/components/schemas/Name'
    Offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result
        set.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    PageToken:
      name: pageToken
      in: query
      description: A previously returned page token describing where to resume an
        enumeration.
      required: false
      schema:
        type: string
    Platform:
      name: platform
      in: query
      description: The cloud platform (gcp, azure, aws)
      required: true
      schema:
        $ref: '#/components/schemas/CloudPlatform'
    ResourceId:
      name: resourceId
      in: path
      description: A UUID used to identify a controlled resource in a workspace.
      required: true
      schema:
        type: string
        format: uuid
    ResourceName:
      name: name
      in: query
      description: A name used to identify an object in the workspace manager
      required: false
      schema:
        $ref: '#/components/schemas/Name'
    ResourceType:
      name: resource
      in: query
      description: Filter on a specific resource type
      required: false
      schema:
        $ref: '#/components/schemas/ResourceType'
    Role:
      name: role
      in: path
      description: An IAM role
      required: true
      schema:
        $ref: '#/components/schemas/IamRole'
    SasBlobName:
      name: sasBlobName
      in: query
      description: Requests access to a single blob in a container
      required: false
      schema:
        type: string
    SasExpirationDuration:
      name: sasExpirationDuration
      in: query
      description: 'The number of seconds until the SAS token should expire (optional).
        Default and maximum allowed values are

        set in configuration.

        '
      required: false
      schema:
        type: integer
        format: int64
    SasIpRange:
      name: sasIpRange
      in: query
      description: A single IP address or range of addresses separated by a dash to
        restrict a SAS token to
      required: false
      schema:
        type: string
    SasPermissions:
      name: sasPermissions
      in: query
      required: false
      description: "Permissions associated with the SAS indicating what operations\
        \ a client may perform on the resource. Must be a \nstring consisting of some\
        \ combination following available permissions:\n\n| Permission | Description\
        \ |\n|------------|-------------|\n|`r`         | Read        |\n|`a`    \
        \     | Add         |\n|`c`         | Create      |\n|`w`         | Write\
        \       |\n|`d`         | Delete      |\n|`l`         | List        |\n|`t`\
        \         | Tags        |\n\nFor example:\n  * To construct a SAS with permissions\
        \ limited to read, write and list the caller would supply the string\n`rwl`.\n\
        \  * To construct a SAS with permissions limited to add, create, write and\
        \ delete, the caller would supply the \nstring `acwd`.\n\nIf the calling user\
        \ does not have the requisite role against the workspace for the requested\
        \ permissions, this\noperation will return a 403 Forbidden error.\n"
      schema:
        type: string
    StewardshipType:
      name: stewardship
      in: query
      description: Filter on a stewardship type
      required: false
      schema:
        $ref: '#/components/schemas/StewardshipType'
    WetRun:
      name: wetRun
      in: query
      description: Whether this is a wet run.
      required: false
      schema:
        type: boolean
    WorkspaceId:
      name: workspaceId
      in: path
      description: A UUID to used to identify a workspace in the workspace manager
      required: true
      schema:
        type: string
        format: uuid
    WorkspaceUserFacingId:
      name: workspaceUserFacingId
      in: path
      description: 'Human-settable, mutable id. ID must have 3-63 characters, contain

        lowercase letters, numbers, dashes, or underscores, and start with

        lowercase letter or number.

        '
      required: true
      schema:
        type: string
    WsmPolicyDepth:
      in: query
      name: depth
      required: false
      schema:
        $ref: '#/components/schemas/WsmPolicyDepth'
      description: The depth of policy explain on a workspace's policy sources.
    WsmPolicyLocation:
      name: location
      in: query
      description: The geographic location of a data center (e.g. iowa, Illinois)
      required: false
      schema:
        type: string
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    BqDatasetCloudIdResponse:
      description: A valid Big query Dataset name per https://cloud.google.com/bigquery/docs/datasets#dataset-naming.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BqDatasetCloudId'
    CloneControlledFlexibleResourceResponse:
      description: Response for successful flexible resource clone.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledFlexibleResourceResult'
    CloneControlledGcpBigQueryDatasetResponse:
      description: Response to clone BigQuery dataset operation where source dataset
        is controlled. (Destination dataset may be controlled or referenced.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledGcpBigQueryDatasetResult'
    CloneReferencedGcpBigQueryDataTableResourceResponse:
      description: Response for successful BigQuery data table reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpBigQueryDataTableResourceResult'
    CloneReferencedGcpBigQueryDatasetResourceResponse:
      description: Response for successful BigQuery dataset reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpBigQueryDatasetResourceResult'
    CloneReferencedGcpGcsBucketResourceResponse:
      description: Response for successful GCS Bucket reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpGcsBucketResourceResult'
    CloneReferencedGitRepoResourceResponse:
      description: Response for successful Git Repo resource reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGitRepoResourceResult'
    CloneWorkspaceResponse:
      description: Response to clone workspace request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneWorkspaceResult'
    ClonedControlledAzureStorageContainerResponse:
      description: Response object for clone of an Azure storage container
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledAzureStorageContainerResult'
    ClonedControlledGcpGcsBucketResponse:
      description: Response to GCS bucket clone operation where source bucket is controlled.
        (Destination bucket may be controlled or referenced.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledGcpGcsBucketResult'
    CloudAiNotebookIdResponse:
      description: A valid AI notebook name per https://cloud.google.com/vertex-ai/docs/workbench/user-managed/create-new.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AiNotebookCloudId'
    Conflict:
      description: Request conflicts with current state
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ControlledFlexibleResourceResponse:
      description: Response containing a controlled flexible resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FlexibleResource'
    ControlledGcpBigQueryDatasetResponse:
      description: Response containing a controlled BigQuery dataset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpBigQueryDatasetResource'
    CreateCloudContextResultResponse:
      description: Job is complete (succeeded or failed)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCloudContextResult'
    CreateControlledAwsS3StorageFolderResponse:
      description: Response to create controlled AWS S3 Storage Folder resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAwsS3StorageFolder'
    CreateControlledAwsSageMakerNotebookResponse:
      description: Response to create controlled AWS SageMaker Notebook instance resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateControlledAwsSageMakerNotebookResult'
    CreateControlledAzureDatabaseResponse:
      description: Response to create controlled Azure Database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureDatabaseResult'
    CreateControlledAzureKubernetesNamespaceResponse:
      description: Response to create controlled Azure KubernetesNamespace
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureKubernetesNamespaceResult'
    CreateControlledAzureVmResponse:
      description: Response to create controlled Azure Vm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureVmResult'
    CreateLandingZoneJobResponse:
      description: Response to get the status of an async job to create an Azure landing
        zone.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AzureLandingZoneResult'
    CreateLandingZoneResponse:
      description: Response to starting an async job to create an Azure landing zone.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLandingZoneResult'
    CreateWorkspaceV2Response:
      description: Description of a workspace
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateWorkspaceV2Result'
    CreatedControlledGcpAiNotebookInstanceResponse:
      description: Response to Create controlled resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpAiNotebookInstanceResult'
    CreatedControlledGcpDataprocClusterResponse:
      description: Response for creating a controlled Dataproc cluster resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpDataprocClusterResult'
    CreatedControlledGcpGceInstanceResponse:
      description: Response to Create controlled resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpGceInstanceResult'
    CreatedControlledGcpGcsBucketResponse:
      description: Response to Create controlled Gcs bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpGcsBucket'
    DataRepoSnapshotReferenceResponse:
      description: Response containing a reference to a Data Repo snapshot.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataRepoSnapshotResource'
    DataprocClusterCloudIdResponse:
      description: A valid Dataproc cluster name per https://cloud.google.com/dataproc/docs/guides/create-cluster.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataprocClusterCloudId'
    DeleteAzureLandingZoneJobResponse:
      description: Response to get the status of an async job to delete an Azure landing
        zone.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteAzureLandingZoneJobResult'
    DeleteAzureLandingZoneResponse:
      description: Response to starting an async job to delete an Azure landing zone.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteAzureLandingZoneResult'
    DeleteControlledAwsResourceResponse:
      description: Response Payload for deleting AWS controlled resources.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledAwsResourceResult'
    DeleteControlledAzureResourceResponse:
      description: Response Payload for deleting an Azure controlled resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledAzureResourceResult'
    DeleteControlledGcpAiNotebookInstanceResponse:
      description: Response Payload for deleting a GCP AI Notebook
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledGcpAiNotebookInstanceResult'
    DeleteControlledGcpDataprocClusterResponse:
      description: Response for deleting a controlled Dataproc cluster resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledGcpDataprocClusterResult'
    DeleteControlledGcpGceInstanceResponse:
      description: Response Payload for deleting a GCP GCE instance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledGcpGceInstanceResult'
    DeleteControlledGcpGcsBucketResponse:
      description: Response Payload for deleting a Gcs bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledGcpGcsBucketResult'
    GceInstanceCloudIdResponse:
      description: A valid GCE instance name per https://cloud.google.com/compute/docs/reference/rest/v1/instances.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GceInstanceCloudId'
    GcpBigQueryDataTableReferenceResponse:
      description: Response containing a reference to a BiqQuery data table.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpBigQueryDataTableResource'
    GcpBigQueryDatasetReferenceResponse:
      description: Response containing a reference to a BiqQuery dataset.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpBigQueryDatasetResource'
    GcpGcsBucketReferenceResponse:
      description: Response containing a reference to a Gcp bucket.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsBucketResource'
    GcpGcsObjectReferenceResponse:
      description: Response containing a reference to a Gcp GCS object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsObjectResource'
    GcsBucketCloudNameResponse:
      description: A valid bucket name per https://cloud.google.com/storage/docs/naming-buckets.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcsBucketCloudName'
    GenerateAwsResourceCloudNameResponse:
      description: Response to generate a AWS resource cloud name.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsResourceCloudName'
    GetControlledAwsResourceCredentialResponse:
      description: Response to get a AWS resource credential.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsCredential'
    GetControlledAwsS3StorageFolderResponse:
      description: Response to get AWS S3 Storage Folder resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsS3StorageFolderResource'
    GetControlledAwsSageMakerNotebookResponse:
      description: Response to get AWS SageMaker Notebook resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsSageMakerNotebookResource'
    GetControlledGcpGcsBucketResponse:
      description: Response to get bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsBucketResource'
    GitRepoReferenceResponse:
      description: Response containing a reference to a git repository.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitRepoResource'
    JobResultResponse:
      description: Result of a job (failed or succeeded)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobResult'
    LoadUrlListResponse:
      description: Response to start a storage data transfer from a url list to a
        gcs bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoadUrlListResult'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ResourceQuotaResponse:
      description: Response to get the quota information of an Azure landing zone
        resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceQuota'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    TerraWorkspaceReferenceResponse:
      description: Response containing a reference to a Terra workspace
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TerraWorkspaceResource'
    UpdateControlledAwsS3StorageFolderResponse:
      description: Response for an AWS S3 Storage Folder update.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsS3StorageFolderResource'
    UpdateControlledAwsSageMakerNotebookResponse:
      description: Response for an AWS SageMaker Notebook update.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsSageMakerNotebookResource'
    UpdateControlledGcpGcsBucketResponse:
      description: Reponse to GCP GCS Bucket update.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsBucketResource'
  schemas:
    AccessScope:
      type: string
      description: Specifies the resource as shared or private
      enum:
        - SHARED_ACCESS
        - PRIVATE_ACCESS
    AiNotebookCloudId:
      description: Ai notebook Cloud native ID
      type: object
      required:
        - generatedAiNotebookAiNotebookCloudId
      properties:
        generatedAiNotebookAiNotebookCloudId:
          type: string
    ApplicationState:
      description: State of an application in the system
      type: string
      enum:
        - OPERATING
        - DEPRECATED
        - DECOMMISSIONED
    AwsContext:
      type: object
      description: The AWS cloud context associated with a workspace.
      properties:
        majorVersion:
          description: The major version of the cloud context.
          type: string
        organizationId:
          description: The ID of the AWS organization associated with the workspace.
          type: string
        accountId:
          description: The ID of the AWS account associated with the workspace.
          type: string
        tenantAlias:
          description: The name of the Terra tenant associated with the workspace.
          type: string
        environmentAlias:
          description: The name of the Terra environment associated with the workspace.
          type: string
        applicationSecurityGroups:
          type: object
          additionalProperties:
            type: string
          description: 'Map of AWS Regions to Security Groups allowing connectivity
            between Workspace Application

            VM Instances within the Landing Zone in the region.

            '
        operationState:
          $ref: '#/components/schemas/OperationState'
    AwsCredential:
      description: AWS CLI/SDK-compatible credential to access AWS resources.
      type: object
      properties:
        Version:
          type: integer
        AccessKeyId:
          type: string
        SecretAccessKey:
          type: string
        SessionToken:
          type: string
        Expiration:
          type: string
          format: date-time
    AwsCredentialAccessScope:
      type: string
      enum:
        - READ_ONLY
        - WRITE_READ
    AwsCredentialDurationSeconds:
      type: integer
      minimum: 900
      maximum: 3600
    AwsResourceCloudName:
      description: A valid cloud name for resource.
      type: object
      required:
        - awsResourceCloudName
      properties:
        awsResourceCloudName:
          type: string
    AwsS3StorageFolderAttributes:
      description: AWS S3 Storage Folder resource properties included in post-creation
        get.
      type: object
      properties:
        bucketName:
          description: The name of the S3 bucket in which the Terra Storage Folder
            was allocated.
          type: string
        prefix:
          description: The prefix within the S3 bucket.
          type: string
    AwsS3StorageFolderCreationParameters:
      description: S3 Storage Folder specific properties to be set on creation. These
        are a subset of the values accepted by the AWS S3 Storage API.
      type: object
      properties:
        folderName:
          description: A valid folder name per https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html.
          type: string
        region:
          description: A valid S3 Storage Folder region per https://docs.aws.amazon.com/general/latest/gr/s3.html.
          type: string
          default: us-east-1
    AwsS3StorageFolderResource:
      type: object
      description: Description of an AWS S3 Storage Folder resource.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AwsS3StorageFolderAttributes'
    AwsSageMakerNotebookAttributes:
      description: AWS SageMaker Notebook instance resource properties included in
        post-creation get.
      type: object
      properties:
        instanceName:
          description: The name of the SageMaker Notebook instance
          type: string
        instanceType:
          description: The type of the SageMaker Notebook instance
          type: string
    AwsSageMakerNotebookCreationParameters:
      description: SageMaker Notebook specific properties to be set on creation. These
        are a subset of the values accepted by the AWS SageMaker Notebook API.
      type: object
      properties:
        instanceName:
          description: A valid instance name per https://docs.aws.amazon.com/sageMaker/latest/APIReference/API_CreateNotebookInstance.html#sageMaker-CreateNotebookInstance-request-NotebookInstanceName
          type: string
        instanceType:
          description: A valid instance type per https://docs.aws.amazon.com/general/latest/gr/sageMaker.html
          type: string
          default: ml.t3.medium
        region:
          description: A valid SageMaker Notebook region per https://docs.aws.amazon.com/general/latest/gr/sageMaker.html.
          type: string
          default: us-east-1
    AwsSageMakerNotebookResource:
      type: object
      description: Description of an AWS SageMaker Notebook instance resource.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AwsSageMakerNotebookAttributes'
    AzureBatchPoolApplicationPackageReference:
      description: 'Link to an application package inside the batch account.

        '
      type: object
      properties:
        id:
          description: The ID of the application package to install.
          type: string
        version:
          description: The version of the application to deploy.
          type: string
    AzureBatchPoolAttributes:
      description: Collection of nodes that an application runs on
      required:
        - id
        - vmSize
        - deploymentConfiguration
      type: object
      properties:
        id:
          description: A string that uniquely identifies the Pool within the Account.
          type: string
        vmSize:
          description: The size of virtual machines in the Pool. All virtual machines
            in a Pool are the same size.
          type: string
        displayName:
          description: 'The display name for the pool. The display name need not be
            unique and can contain any

            Unicode characters up to a maximum length of 1024.

            '
          type: string
        deploymentConfiguration:
          description: Batch pool deployment configuration properties.
          $ref: '#/components/schemas/AzureBatchPoolDeploymentConfiguration'
        userAssignedIdentities:
          description: 'User assigned identities associated with a batch pool. Batch
            pool supports up to 10 user assigned identities.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolUserAssignedIdentity'
        scaleSettings:
          description: 'Scale settings for the pool Defines the desired size of the
            pool.

            '
          $ref: '#/components/schemas/AzureBatchPoolScaleSettings'
        startTask:
          description: 'A task which is run when a compute node joins a pool in the
            Azure Batch service,

            or when the compute node is rebooted or reimaged.

            '
          $ref: '#/components/schemas/AzureBatchPoolStartTask'
        applicationPackages:
          description: 'The list of application packages to be installed on each compute
            node in the pool.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolApplicationPackageReference'
        networkConfiguration:
          description: 'The network configuration for a pool.

            '
          $ref: '#/components/schemas/AzureBatchPoolNetworkConfiguration'
    AzureBatchPoolAutoScaleSettings:
      description: AutoScale settings for the pool.
      type: object
      properties:
        formula:
          description: A formula for the desired number of compute nodes in the pool.
          type: string
        evaluationInterval:
          description: 'The time interval (in minutes) at which to automatically adjust
            the pool size according to the autoscale formula.

            If omitted, the default value is 15 minutes.

            '
          type: integer
    AzureBatchPoolAutoUserScope:
      description: Defines values for AutoUserScope.
      type: string
      enum:
        - Task
        - Pool
    AzureBatchPoolAutoUserSpecification:
      description: 'Specifies the parameters for the auto user that runs a task on
        the Batch service.

        '
      type: object
      properties:
        scope:
          description: The scope for the auto user The default value is Pool.
          $ref: '#/components/schemas/AzureBatchPoolAutoUserScope'
        elevationLevel:
          description: The elevation level of the user.
          $ref: '#/components/schemas/AzureBatchPoolElevationLevel'
    AzureBatchPoolCloudServiceConfiguration:
      type: object
      description: 'The configuration for nodes in a pool based on the Azure Cloud
        Services platform.

        '
      required:
        - osFamily
      properties:
        osFamily:
          description: 'The Azure Guest OS family to be installed on the virtual machines
            in the pool.

            '
          type: string
        osVersion:
          description: 'The Azure Guest OS version to be installed on the virtual
            machines in the pool.

            '
          type: string
    AzureBatchPoolComputeNodeDeallocationOption:
      description: 'Determines what to do with a node and its running task(s) after
        it has been selected for deallocation.

        '
      type: string
      enum:
        - Requeue
        - Terminate
        - TaskCompletion
        - RetainedData
    AzureBatchPoolComputeNodeIdentityReference:
      description: 'The reference to a user assigned identity associated with the
        Batch pool which a compute node will use.

        '
      type: object
      properties:
        resourceId:
          description: The ARM resource id of the user assigned identity.
          type: string
    AzureBatchPoolContainerRegistry:
      description: A private container registry.
      type: object
      properties:
        userName:
          description: The user name to log into the registry server.
          type: string
        password:
          description: The password to log into the registry server.
          type: string
        registryServer:
          description: The registry URL. If omitted, the default is "docker.io".
          type: string
        identityReference:
          description: 'The reference to a user assigned identity associated with
            the Batch pool

            which a compute node will use.

            '
          $ref: '#/components/schemas/AzureBatchPoolComputeNodeIdentityReference'
    AzureBatchPoolContainerWorkingDirectory:
      description: Defines values for ContainerWorkingDirectory.
      type: string
      enum:
        - TaskWorkingDirectory
        - ContainerImageDefault
    AzureBatchPoolCreationParameters:
      description: 'Batch Pool-specific properties to be set on creation. These are
        a subset of the values

        accepted by the azure resource API

        '
      type: object
      required:
        - id
        - vmSize
        - deploymentConfiguration
      properties:
        id:
          description: A string that uniquely identifies the Pool within the Batch
            Account.
          type: string
        displayName:
          description: 'The display name for the pool. The display name need not be
            unique and can contain any

            Unicode characters up to a maximum length of 1024.

            '
          type: string
        vmSize:
          description: 'The size of virtual machines in the Pool. All virtual machines
            in a Pool are the same size.

            '
          type: string
        deploymentConfiguration:
          description: Batch pool deployment configuration properties.
          $ref: '#/components/schemas/AzureBatchPoolDeploymentConfiguration'
        userAssignedIdentities:
          description: 'User assigned identities associated with a batch pool. Batch
            pool supports up to 10 user assigned identities.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolUserAssignedIdentity'
        scaleSettings:
          description: 'Scale settings for the pool Defines the desired size of the
            pool.

            '
          $ref: '#/components/schemas/AzureBatchPoolScaleSettings'
        startTask:
          description: 'A task which is run when a compute node joins a pool in the
            Azure Batch service, or

            when the compute node is rebooted or reimaged.

            '
          $ref: '#/components/schemas/AzureBatchPoolStartTask'
        applicationPackages:
          description: 'The list of application packages to be installed on each compute
            node in the pool.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolApplicationPackageReference'
        networkConfiguration:
          description: 'The network configuration for a pool.

            '
          $ref: '#/components/schemas/AzureBatchPoolNetworkConfiguration'
        metadata:
          description: 'A list of name-value pairs associated with the pool as metadata.
            The

            Batch service does not assign any meaning to metadata; it is solely for
            the use of user code.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolMetadataItem'
    AzureBatchPoolDeploymentConfiguration:
      type: object
      description: Batch pool deployment configuration properties.
      properties:
        virtualMachineConfiguration:
          description: 'The configuration for compute nodes in a pool based on the
            Azure Virtual Machines infrastructure.

            '
          $ref: '#/components/schemas/AzureBatchPoolVirtualMachineConfiguration'
        cloudServiceConfiguration:
          description: 'The configuration for nodes in a pool based on the Azure Cloud
            Services platform.

            '
          $ref: '#/components/schemas/AzureBatchPoolCloudServiceConfiguration'
    AzureBatchPoolElevationLevel:
      description: Defines values for ElevationLevel.
      type: string
      enum:
        - NonAdmin
        - Admin
    AzureBatchPoolEnvironmentSetting:
      description: An environment variable to be set on a task process.
      type: object
      properties:
        name:
          description: The name of the environment variable.
          type: string
        value:
          description: The value of the environment variable.
          type: string
    AzureBatchPoolFixedScaleSettings:
      type: object
      properties:
        resizeTimeout:
          description: The timeout (in minutes) for allocation of compute nodes to
            the pool. The minimum value is 5 minutes.
          type: integer
        targetDedicatedNodes:
          description: The desired number of dedicated compute nodes in the pool.
          type: integer
        targetLowPriorityNodes:
          description: The desired number of Spot/low-priority compute nodes in the
            pool.
          type: integer
        nodeDeallocationOption:
          $ref: '#/components/schemas/AzureBatchPoolComputeNodeDeallocationOption'
    AzureBatchPoolMetadataItem:
      description: 'A list of name-value pairs associated with the pool as metadata.
        The

        Batch service does not assign any meaning to metadata; it is solely for the
        use of user code.

        '
      type: object
      required:
        - name
        - value
      properties:
        name:
          description: The name of the metadata item.
          type: string
        value:
          description: The value of the metadata item.
          type: string
    AzureBatchPoolNetworkConfiguration:
      description: 'The network configuration for a pool.

        '
      type: object
      properties:
        subnetId:
          description: asdf
          type: string
        dynamicVNetAssignmentScope:
          description: The scope of dynamic vnet assignment.
          $ref: '#/components/schemas/DynamicVNetAssignmentScope'
        endpointConfiguration:
          description: The endpoint configuration for a pool.
          $ref: '#/components/schemas/PoolEndpointConfiguration'
        publicIpAddressConfiguration:
          description: "The public IP Address configuration of the networking configuration\
            \ of a Pool. This property is \nonly supported on Pools with the virtualMachineConfiguration\
            \ property.\n"
          $ref: '#/components/schemas/PublicIpAddressConfiguration'
    AzureBatchPoolResource:
      type: object
      description: Description of an Azure Batch Pool
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureBatchPoolAttributes'
    AzureBatchPoolResourceFile:
      description: 'A single file or multiple files to be downloaded to a compute
        node.

        '
      type: object
      properties:
        autoStorageContainerName:
          description: The storage container name in the auto storage account.
          type: string
        storageContainerUrl:
          description: The URL of the blob container within Azure Blob Storage.
          type: string
        httpUrl:
          description: The URL of the file to download.
          type: string
        blobPrefix:
          description: 'The blob prefix to use when downloading blobs from an Azure
            Storage container.

            '
          type: string
        filePath:
          description: 'The location on the compute node to which to download the
            file, relative

            to the task''s working directory.

            '
          type: string
        fileMode:
          description: The file permission mode attribute in octal format.
          type: string
        identityReference:
          description: 'The reference to a user assigned identity associated with
            the Batch pool which a compute node will use.

            '
          $ref: '#/components/schemas/AzureBatchPoolComputeNodeIdentityReference'
    AzureBatchPoolScaleSettings:
      type: object
      description: Scale settings for the pool Defines the desired size of the pool.
      properties:
        fixedScale:
          description: "Fixed scale settings for the pool. This property and autoScale\
            \ are mutually exclusive \nand one of the properties must be specified.\n"
          $ref: '#/components/schemas/AzureBatchPoolFixedScaleSettings'
        autoScale:
          description: 'AutoScale settings for the pool. This property and fixedScale
            are mutually exclusive

            and one of the properties must be specified.

            '
          $ref: '#/components/schemas/AzureBatchPoolAutoScaleSettings'
    AzureBatchPoolStartTask:
      description: 'A task which is run when a compute node joins a pool in the Azure
        Batch service, or

        when the compute node is rebooted or reimaged.

        '
      type: object
      properties:
        commandLine:
          description: The command line of the start task.
          type: string
        resourceFiles:
          description: 'A list of files that the Batch service will download to the
            compute node

            before running the command line.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolResourceFile'
        environmentSettings:
          description: 'A list of environment variable settings for the start task.

            '
          type: array
          items:
            $ref: '#/components/schemas/AzureBatchPoolEnvironmentSetting'
        userIdentity:
          description: The definition of the user identity under which the task is
            run.
          $ref: '#/components/schemas/AzureBatchPoolUserIdentity'
        maxTaskRetryCount:
          description: The maximum number of times the task may be retried.
          type: integer
        waitForSuccess:
          description: 'Whether the Batch service should wait for the start task to
            complete

            successfully (that is, to exit with exit code 0) before scheduling any
            tasks on the compute node.

            '
          type: boolean
        containerSettings:
          description: The container settings for a task.
          $ref: '#/components/schemas/AzureBatchPoolTaskContainerSettings'
    AzureBatchPoolTaskContainerSettings:
      description: The container settings for a task.
      type: object
      properties:
        containerRunOptions:
          description: Additional options to the container create command.
          type: string
        imageName:
          description: The image to use to create the container in which the task
            will run.
          type: string
        registry:
          description: A private container registry.
          $ref: '#/components/schemas/AzureBatchPoolContainerRegistry'
        workingDirectory:
          description: A flag to indicate where the container task working directory
            is.
          $ref: '#/components/schemas/AzureBatchPoolContainerWorkingDirectory'
    AzureBatchPoolUserAssignedIdentity:
      type: object
      description: User assigned identity associated with a batch pool.
      properties:
        name:
          description: 'The name of the user assigned identity. This parameter is
            mutually exclusive with clientId.

            '
          type: string
        clientId:
          description: "The client id of the UAMI. This parameter is mutually exclusive\
            \ with name. If this parameter \nis set instead of the name WSM will try\
            \ to locate specific UAMI based on it.\n"
          type: string
          format: uuid
        resourceGroupName:
          description: 'The resource group name where identity resides. Default value
            is MRG where Azure Batch account exists.

            '
          type: string
    AzureBatchPoolUserIdentity:
      description: The definition of the user identity under which the task is run.
      type: object
      properties:
        userName:
          description: The name of the user identity under which the task is run.
          type: string
        autoUser:
          description: 'Specifies the parameters for the auto user that runs a task
            on the Batch service.

            '
          $ref: '#/components/schemas/AzureBatchPoolAutoUserSpecification'
    AzureBatchPoolVirtualMachineConfiguration:
      type: object
      description: 'The configuration for compute nodes in a pool based on the Azure
        Virtual Machines infrastructure.

        '
      required:
        - imageReference
        - nodeAgentSkuId
      properties:
        imageReference:
          description: 'A reference to an Azure Virtual Machines Marketplace image
            or the Azure Image resource of a custom Virtual Machine.

            '
          $ref: '#/components/schemas/AzureBatchPoolVirtualMachineImageReference'
        nodeAgentSkuId:
          description: 'The SKU of the Batch node agent to be provisioned on compute
            nodes in the pool.

            '
          type: string
    AzureBatchPoolVirtualMachineImageReference:
      type: object
      description: 'A reference to an Azure Virtual Machines Marketplace image or
        the Azure Image resource of a custom Virtual Machine.

        Id is mutually exclusive with other properties.

        '
      properties:
        publisher:
          description: 'The publisher of the Azure Virtual Machines Marketplace image.
            For example, Canonical or MicrosoftWindowsServer.

            '
          type: string
        offer:
          description: 'The offer type of the Azure Virtual Machines Marketplace image.
            For example, UbuntuServer or WindowsServer.

            '
          type: string
        sku:
          description: 'The SKU of the Azure Virtual Machines Marketplace image. For
            example, 18.04-LTS or 2022-datacenter.

            '
          type: string
        version:
          description: 'The version of the Azure Virtual Machines Marketplace image.
            A value of

            ''latest'' can be specified to select the latest version of an image.
            If

            omitted, the default is ''latest''.

            '
          type: string
        id:
          description: "The ARM resource identifier of the Shared Image Gallery Image.\
            \ Compute Nodes in the Pool will \nbe created using this Image Id. This\
            \ is of the form\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionId}.\n\
            This property is mutually exclusive with other properties. The Shared\
            \ Image Gallery image must \nhave replicas in the same region as the Azure\
            \ Batch account. For information about the firewall \nsettings for the\
            \ Batch node agent to communicate with the Batch service see\nhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.\n"
          type: string
    AzureContext:
      type: object
      description: The Azure cloud context associated with a workspace.
      properties:
        tenantId:
          description: The ID of the Azure tenant associated with the workspace.
          type: string
        subscriptionId:
          description: The ID of the Azure subscription associated with the workspace.
          type: string
        resourceGroupId:
          description: The ID of the Azure resource group associated with the workspace.
          type: string
        operationState:
          $ref: '#/components/schemas/OperationState'
    AzureDatabaseAttributes:
      description: Database properties included in post-creation get and update. Others
        must be retrieved from Azure using the name.
      type: object
      properties:
        databaseName:
          description: Name of created database (not the resource name).
          type: string
        databaseOwner:
          description: Resource name of database owner.
          type: string
        allowAccessForAllWorkspaceUsers:
          description: Whether all workspace users have access to the database.
          type: boolean
    AzureDatabaseCreationParameters:
      description: Database-specific properties to be set on creation. These are a
        subset of the values accepted by the azure resource API
      type: object
      required:
        - name
      properties:
        name:
          description: A valid database name
          type: string
          pattern: ^[a-zA-Z][a-zA-Z0-9_]{0,31}$
        owner:
          description: Resource id or name of an azure managed identity in this workspace
            to be the owner of the database, required for shared databases. For private
            databases, the owner will be determined from privateResourceUser.
          type: string
        k8sNamespace:
          description: The kubernetes namespace from which the database will be accessed.
            A database created with this specified will not be usable with a KubernetesNamespace
            controlled resource. Will be removed once Leonardo switches to use KubernetesNamespace
            controlled resources.
          type: string
          deprecated: true
        allowAccessForAllWorkspaceUsers:
          description: Whether to allow users in the workspace to create kubernetes
            namespaces that can connect to this database.
          type: boolean
          default: false
    AzureDatabaseResource:
      type: object
      description: Description of an Azure database
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureDatabaseAttributes'
    AzureDiskAttributes:
      description: Disk properties included in post-creation get and update. Others
        must be retrieved from Azure using the name.
      type: object
      properties:
        diskName:
          description: Name of created disk (not the resource name).
          type: string
        region:
          description: Azure region of created disk
          type: string
    AzureDiskCreationParameters:
      description: Disk-specific properties to be set on creation. These are a subset
        of the values accepted by the azure resource API
      type: object
      required:
        - name
        - size
      properties:
        name:
          description: A valid disk name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        size:
          description: 'A valid size in GB integer representation

            '
          type: integer
    AzureDiskResource:
      type: object
      description: Description of an Azure disk
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureDiskAttributes'
    AzureKubernetesNamespaceAttributes:
      description: KubernetesNamespace properties included in post-creation get and
        update. Others must be retrieved from Azure using the name.
      type: object
      properties:
        kubernetesNamespace:
          description: Name of created kubernetesNamespace (not the resource name).
          type: string
        kubernetesServiceAccount:
          description: Name of the kubernetesServiceAccount created for the kubernetesNamespace.
            This value doubles as database user name. Null if no service account was
            created.
          type: string
        managedIdentity:
          description: The resource name of a managed identity to use for the kubernetesNamespace.
            Null for private namespaces.
          type: string
        databases:
          description: The resource names of databases within the workspace to be
            used by the kubernetesNamespace.
          type: array
          items:
            type: string
    AzureKubernetesNamespaceCreationParameters:
      description: KubernetesNamespace-specific properties to be set on creation.
        These are a subset of the values accepted by the azure resource API
      type: object
      required:
        - namespacePrefix
      properties:
        namespacePrefix:
          description: The full namespace name will be {namespacePrefix}-{workspaceId}
          type: string
          pattern: ^[a-z][a-z0-9-]{0,24}$
        managedIdentity:
          description: The resource id or name of a managed identity to use for the
            kubernetesNamespace. Omit for private namespaces.
          type: string
        databases:
          description: The resource IDs or names of databases within the workspace
            to be used by the kubernetesNamespace. Some form of identity (managed
            identity or private namespace) must be used to access databases.
          type: array
          items:
            type: string
    AzureKubernetesNamespaceResource:
      type: object
      description: Description of an Azure kubernetesNamespace
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureKubernetesNamespaceAttributes'
    AzureLandingZone:
      description: 'The landing zone identification information.

        '
      type: object
      required:
        - landingZoneId
        - billingProfileId
      properties:
        landingZoneId:
          description: An identifier of a Azure landing zone.
          type: string
          format: uuid
        billingProfileId:
          description: Identifier for the billing profile used for the landing zone.
          type: string
          format: uuid
        definition:
          description: A definition to create an Azure landing zone from
          type: string
        version:
          description: 'A version of the landing zone. If not set the most recent
            will be used.

            If two versions available - ''v1'' and ''v2'' then ''v2'' will be selected.

            '
          type: string
        createdDate:
          description: 'A string containing date and time of Landing Zone creation.

            It is set by the Landing Zone service and cannot be updated.

            '
          type: string
          format: date-time
    AzureLandingZoneDefinition:
      type: object
      required:
        - definition
        - name
        - description
        - version
      properties:
        definition:
          description: The name of the corresponding landing zone definition
          type: string
        name:
          description: User friendly name of the definition
          type: string
        description:
          description: Description of the definition
          type: string
        version:
          description: The version of the definition
          type: string
    AzureLandingZoneDefinitionList:
      type: object
      required:
        - landingzones
      properties:
        landingzones:
          description: A list of Azure landing zones definitions
          type: array
          items:
            $ref: '#/components/schemas/AzureLandingZoneDefinition'
    AzureLandingZoneDeployedResource:
      description: Details of an Azure resource.
      type: object
      properties:
        resourceId:
          description: Unique Azure resource identifier.
          type: string
        resourceType:
          description: 'The azure deployed resource type; e.g., ''Microsoft.Compute/virtualMachines''.

            The deployed resource type definition is located in ARM template documentation,
            under the Reference node.

            '
          type: string
        resourceName:
          description: Azure resource name. Present for a subnet resource.
          type: string
        resourceParentId:
          description: Azure resource Id of a resource parent. Present for a subnet
            resource.
          type: string
        region:
          description: A region where an Azure resource deployed.
          type: string
        tags:
          description: Tags for this Azure resource.
          type: object
          additionalProperties:
            type: string
    AzureLandingZoneDetails:
      description: Created Azure Landing Zone details.
      type: object
      properties:
        id:
          description: An identifier of created Azure landing zone.
          type: string
          format: uuid
        resources:
          description: List of Azure landing zone deployed resources.
          type: array
          items:
            $ref: '#/components/schemas/AzureLandingZoneDeployedResource'
    AzureLandingZoneList:
      type: object
      required:
        - landingzones
      properties:
        landingzones:
          description: A list of landing zones.
          type: array
          items:
            $ref: '#/components/schemas/AzureLandingZone'
    AzureLandingZoneParameter:
      description: Parameters to set user defined properties for resources in a landing
        zone
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Name of the parameter
          type: string
        value:
          description: Value of the parameter
          type: string
    AzureLandingZoneResourcesList:
      type: object
      required:
        - resources
      properties:
        id:
          description: An identifier of a Azure landing zone.
          type: string
          format: uuid
        resources:
          description: A list of deployed resources in a landing zone, grouped by
            purpose.
          type: array
          items:
            $ref: '#/components/schemas/AzureLandingZoneResourcesPurposeGroup'
    AzureLandingZoneResourcesPurposeGroup:
      description: 'The structure contains one landing zone purpose and a list of
        Azure deployed resources that

        are tagged with this purpose.

        '
      type: object
      required:
        - purpose
        - deployedResources
      properties:
        purpose:
          description: Purpose tag value string.
          type: string
        deployedResources:
          description: A list of Azure landing zones deployed resources.
          type: array
          items:
            $ref: '#/components/schemas/AzureLandingZoneDeployedResource'
    AzureLandingZoneResult:
      description: Result of creating Azure landing zone
      type: object
      properties:
        landingZone:
          $ref: '#/components/schemas/AzureLandingZoneDetails'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    AzureManagedIdentityAttributes:
      description: ManagedIdentity properties included in post-creation get and update.
        Others must be retrieved from Azure using the name.
      type: object
      properties:
        managedIdentityName:
          description: Name of created managedIdentity (not the resource name).
          type: string
    AzureManagedIdentityCreationParameters:
      description: ManagedIdentity-specific properties to be set on creation. These
        are a subset of the values accepted by the azure resource API
      type: object
      required:
        - name
      properties:
        name:
          description: A valid managed identity name
          type: string
          pattern: ^[a-zA-Z0-9][-a-zA-Z0-9_]{2,127}$
    AzureManagedIdentityResource:
      type: object
      description: Description of an Azure managedIdentity
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureManagedIdentityAttributes'
    AzureStorageContainerAttributes:
      description: Storage container properties included in post-creation get.
      type: object
      properties:
        storageContainerName:
          description: Name of the storage container.
          type: string
    AzureStorageContainerCreationParameters:
      description: Storage container-specific properties to be set on creation. These
        are a subset of the values accepted by the azure resource API (note that public
        access is disabled).
      type: object
      required:
        - storageContainerName
      properties:
        storageContainerName:
          description: A valid storage container name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
    AzureStorageContainerResource:
      type: object
      description: Description of an Azure storage container.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureStorageContainerAttributes'
    AzureVmAttributes:
      description: Vm properties included in post-creation get and update. Others
        must be retrieved from Azure using the name.
      type: object
      properties:
        vmName:
          description: Name of created vm (not the resource name).
          type: string
        region:
          description: Azure region of created vm
          type: string
        vmSize:
          description: A valid image size as per com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes
          type: string
        vmImage:
          description: A valid data which identifies the VM image
          type: string
        diskId:
          description: A valid WSM identifier for an Azure Disk that corresponds to
            a valid azure resource
          type: string
          format: uuid
    AzureVmCreationParameters:
      description: Vm-specific properties to be set on creation. These are a subset
        of the values accepted by the azure resource API
      type: object
      required:
        - name
        - vmSize
        - vmImage
      properties:
        name:
          description: A valid vm name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        vmSize:
          description: A valid image size as per https://learn.microsoft.com/en-us/azure/virtual-machines/sizes
          type: string
        diskId:
          description: A valid WSM identifier for an Azure Disk that corresponds to
            a valid azure resource
          type: string
          format: uuid
        vmImage:
          description: A valid data which identifies the VM image
          $ref: '#/components/schemas/AzureVmImage'
        vmUser:
          description: A valid VM user data. This data is required only for marketplace
            VM image.
          $ref: '#/components/schemas/AzureVmUser'
        customScriptExtension:
          description: A custom script extension
          $ref: '#/components/schemas/AzureVmCustomScriptExtension'
        ephemeralOSDisk:
          description: Whether or not to use an ephemeral OS disk and where to place
            it. https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks
          type: string
          enum:
            - NONE
            - OS_CACHE
            - TMP_DISK
        customData:
          description: Supply base64 encoded custom data for vm. https://docs.microsoft.com/en-us/azure/virtual-machines/custom-data
          type: string
          format: base64
    AzureVmCustomScriptExtension:
      description: Azure VM custom script extension definition. Azure documentation
        https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/custom-script-linux
      type: object
      required:
        - name
        - publisher
      properties:
        name:
          description: A name of the extension
          type: string
        publisher:
          description: A publisher of the extension
          type: string
        type:
          description: A type of the extension
          type: string
        version:
          description: A version of the extension
          type: string
        minorVersionAutoUpgrade:
          description: Flag which controls auto upgrade of the extension
          type: boolean
        publicSettings:
          description: List of public settings of the extension
          type: array
          items:
            $ref: '#/components/schemas/AzureVmCustomScriptExtensionSetting'
        protectedSettings:
          description: List of protected settings of the extension
          type: array
          items:
            $ref: '#/components/schemas/AzureVmCustomScriptExtensionSetting'
        tags:
          description: List of tags of the extension
          type: array
          items:
            $ref: '#/components/schemas/AzureVmCustomScriptExtensionTag'
    AzureVmCustomScriptExtensionSetting:
      description: Azure VM extension settings
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Name of the settings entry
          type: string
        value:
          description: Value of the settings entry
          type: object
    AzureVmCustomScriptExtensionTag:
      description: List of tags for VM extension
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Name of the tag
          type: string
        value:
          description: Value of the tag
          type: string
    AzureVmImage:
      description: 'A valid data which identifies the VM image. It supports custom
        and marketplace images. Properties are mutually exclusive. Either Uri can
        be defined or publisher, offer, sku and version. Uri should be assigned in
        order to refer to custom image. Custom image must be in the same region. For
        instance /subscriptions/3efc5bdf-be0e-44e7-b1d7-c08931e3c16c/resourceGroups/mrg-qi-1-preview-20210517084351/providers/Microsoft.Compute/galleries/msdsvm/images/customized_ms_dsvm/versions/0.1.0
        In order to use marketplace image following properties should be defined:
        publisher, offer, sku and version. The allowed formats for version are Major.Minor.Build
        or ''latest''. For instance publisher=microsoft-dsvm, offer=ubuntu-1804, sku=1804-gen2,
        version=22.04.27 If all parameters are defined then uri parameter will take
        precedence and vmUser parameter will be ignored.'
      type: object
      properties:
        uri:
          description: A valid image Uri
          type: string
        publisher:
          description: A publisher of an image
          type: string
        offer:
          description: An offer of an image
          type: string
        sku:
          description: A sku of an image
          type: string
        version:
          description: A version of an image
          type: string
    AzureVmResource:
      type: object
      description: Description of an Azure vm
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureVmAttributes'
    AzureVmUser:
      description: User credentials which are required for VM creation
      type: object
      required:
        - name
        - password
      properties:
        name:
          description: Specifies an SSH root user name for the Linux virtual machine
          type: string
        password:
          description: Specifies the SSH root password for the Linux virtual machine
          type: string
    BqDatasetCloudId:
      type: object
      required:
        - generatedDatasetCloudId
      properties:
        generatedDatasetCloudId:
          type: string
    CloneControlledAzureStorageContainerRequest:
      description: Values to assign to the cloned storage container for a given source
        container. Leave name and description null to take the source object's values.
        Any provided cloning instructions will override those previously set on the
        source container.
      type: object
      required:
        - destinationWorkspaceId
        - jobControl
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        prefixesToClone:
          description: if a non-empty value is specified, cloning will be limited
            to the blobs that start with a prefix in this array
          type: array
          items:
            type: string
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CloneControlledAzureStorageContainerResult:
      description: API result class for cloning an Azure Storage Container.
      type: object
      properties:
        container:
          $ref: '#/components/schemas/ClonedControlledAzureStorageContainer'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CloneControlledFlexibleResourceRequest:
      description: Values to be assigned with the cloned flex resource for a given
        source flex resource. Only COPY_RESOURCE and COPY_NOTHING are defined for
        flex resources. Set name and description null to maintain the original values.
      type: object
      required:
        - destinationWorkspaceId
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
    CloneControlledFlexibleResourceResult:
      description: Result of successful flexible resource clone.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: Workspace ID of the source resource for this clone.
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource.
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/FlexibleResource'
    CloneControlledGcpBigQueryDatasetRequest:
      description: Values to assign to the cloned dataset for a given source dataset.
        Leave name and description null to take the source object's values.
      type: object
      required:
        - destinationWorkspaceId
        - jobControl
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        destinationDatasetName:
          description: Name for destination dataset. Must not be set if cloningInstructions
            is COPY_REFERENCE. Letters, numbers and underscores only.
          type: string
        defaultTableLifetime:
          $ref: '#/components/schemas/DefaultTableLifetime'
        defaultPartitionLifetime:
          $ref: '#/components/schemas/DefaultPartitionLifetime'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        location:
          description: A valid dataset location per https://cloud.google.com/bigquery/docs/locations.
            Must not be set if cloningInstructions is COPY_REFERENCE. If null, will
            use source dataset's location.
          type: string
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CloneControlledGcpBigQueryDatasetResult:
      description: Result of successful BigQuery dataset clone
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/ClonedControlledGcpBigQueryDataset'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CloneControlledGcpGcsBucketRequest:
      description: Values to assign to the cloned bucket for a given source bucket.
        Leave name and description null to take the source object's values.
      type: object
      required:
        - destinationWorkspaceId
        - jobControl
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        bucketName:
          description: Name of created bucket (not the resource name). Must not be
            set if cloningInstructions is COPY_REFERENCE. This name must be globally
            unique, so it can't be a copy of the original bucket name. It also can't
            be a simple formula like copy-of-bucket-name, as that would fail on subsequent
            clone operations with bucket-name as the source bucket. If null, a random
            bucket name will be created.
          type: string
        location:
          description: A valid bucket location per https://cloud.google.com/storage/docs/locations.
            Must not be set if cloningInstructions is COPY_REFERENCE. If null, will
            use source bucket's location.
          type: string
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CloneControlledGcpGcsBucketResult:
      description: API result class for cloning a GCS bucket.
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/ClonedControlledGcpGcsBucket'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CloneReferencedGcpBigQueryDataTableResourceResult:
      description: API result class for cloning a referenced BigQuery data table resource.
        Includes source workspace and resource IDs for provenance. If the effective
        cloning instructions are not COPY_REFERENCE, then no clone is created and
        the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpBigQueryDataTableResource'
    CloneReferencedGcpBigQueryDatasetResourceResult:
      description: API result class for cloning a referenced BigQuery dataset resource.
        Includes source workspace and resource IDs for provenance. If the effective
        cloning instructions are not COPY_REFERENCE, then no clone is created and
        the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'
    CloneReferencedGcpDataRepoSnapshotResourceResult:
      description: API result class for cloning a referenced Data Repo snapshot resource.
        Includes source workspace and resource IDs for provenance. If the effective
        cloning instructions are not COPY_REFERENCE, then no clone is created and
        the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/DataRepoSnapshotResource'
    CloneReferencedGcpGcsBucketResourceResult:
      description: API result class for cloning a referenced GCS Bucket resource.
        Includes source workspace and resource IDs for provenance. If the effective
        cloning instructions are not COPY_REFERENCE, then no clone is created and
        the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpGcsBucketResource'
    CloneReferencedGcpGcsObjectResourceResult:
      description: API result class for cloning a referenced GCS object resource.
        Includes source workspace and resource IDs for provenance. If the effective
        cloning instructions are not COPY_REFERENCE, then no clone is created and
        the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpGcsObjectResource'
    CloneReferencedGitRepoResourceResult:
      description: API result class for cloning a referenced Git repo resource. Includes
        source workspace and resource IDs for provenance. If the effective cloning
        instructions are not COPY_REFERENCE, then no clone is created and the resource
        is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GitRepoResource'
    CloneReferencedResourceRequestBody:
      description: Cloning options for referenced resources. If optional parameters
        are omitted, the source values will be used.
      type: object
      required:
        - destinationWorkspaceId
      properties:
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        destinationWorkspaceId:
          type: string
          format: uuid
        name:
          $ref: '#/components/schemas/Name'
        description:
          description: Description for the referenced resource clone, or null to use
            original.
          type: string
    CloneResourceResult:
      type: string
      enum:
        - SUCCEEDED
        - FAILED
        - SKIPPED
    CloneWorkspaceRequest:
      description: Request body for cloning an entire workspace. Cloning instructions
        are taken from individual resources.
      type: object
      required:
        - spendProfile
      properties:
        destinationWorkspaceId:
          description: 'Optional identifier for the destination workspace. If not
            present, a UUID is generated

            '
          type: string
          format: uuid
        userFacingId:
          $ref: '#/components/schemas/UserFacingId'
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the cloned workspace
          type: string
        spendProfile:
          description: ID of provided spend profile
          type: string
        location:
          description: GCP Location to use for cloud-based resources. If omitted,
            the location of the source resource will be used.
          type: string
        additionalPolicies:
          description: 'Additional policies to attached to the cloned workspace. If
            the

            additional policies create a conflict with the existing workspace,

            cloning will fail.

            '
          $ref: '#/components/schemas/WsmPolicyInputs'
        projectOwnerGroupId:
          description: Optional Sam resource group ID which allows the group to be
            added as project owner on the destination workspace
          type: string
    CloneWorkspaceResult:
      description: Response for workspace clone, including details on each controlled
        or referenced resource either cloned or attempted to be cloned.
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        workspace:
          $ref: '#/components/schemas/ClonedWorkspace'
    ClonedControlledAzureStorageContainer:
      description: Response object for clone of an Azure storage container.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        storageContainer:
          $ref: '#/components/schemas/CreatedControlledAzureStorageContainer'
    ClonedControlledGcpBigQueryDataset:
      description: Response object for clone of a BigQuery dataset. Destination workspace
        and resource IDs are available in the bucket's metadata object.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        dataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'
    ClonedControlledGcpGcsBucket:
      description: 'Response object for clone of a GCS Bucket. Destination workspace
        and resource IDs are available in the bucket''s metadata object. TODO: generalize
        so there''s a single response type for all resource clones?'
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        bucket:
          $ref: '#/components/schemas/CreatedControlledGcpGcsBucket'
    ClonedWorkspace:
      description: Flight result class for workspace clone. Indicates status for each
        resource cloned (or skipped).
      type: object
      properties:
        sourceWorkspaceId:
          type: string
          format: uuid
        destinationWorkspaceId:
          type: string
          format: uuid
        destinationUserFacingId:
          $ref: '#/components/schemas/UserFacingId'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCloneDetails'
    CloningInstructionsEnum:
      type: string
      description: "How to clone resource:\n  * COPY_NOTHING: Don't clone resource.\n\
        \  * COPY_DEFINITION: Only used for controlled resources. Create new controlled\
        \ resource\n    and new cloud resource with same metadata, but don't copy\
        \ any data. For example\n    for GCS bucket, create new GCS bucket with same\
        \ region/lifecycle rules as source\n    bucket. Files will not be copied over.\n\
        \  * COPY_RESOURCE: Only used for controlled resources. Create new controlled\
        \ resource\n    and new cloud resource, with data copied over.  For example\
        \ for GCS bucket,\n    create new GCS bucket with same region/lifecycle rules\
        \ as source bucket. Copy files\n    from source bucket to new bucket.\n  *\
        \ COPY_REFERENCE: Used for controlled and referenced resources. Create new\
        \ referenced resource\n    that points to same cloud resource as source resource.\n\
        \  * COPY_LINK_REFERENCE: Used for controlled and referenced resources. Create\
        \ a new referenced resource\n    that points to the same cloud resource as\
        \ the source resource, AND link the source workspace\n    policy to the destination\
        \ workspace policy; changes in the source will propagate to the destination."
      enum:
        - COPY_NOTHING
        - COPY_DEFINITION
        - COPY_RESOURCE
        - COPY_REFERENCE
        - COPY_LINK_REFERENCE
    CloudPlatform:
      type: string
      description: Enum representing a cloud platform type.
      enum:
        - GCP
        - AZURE
        - AWS
    ControlledDataprocClusterUpdateParameters:
      description: Cluster parameters that can be updated. Cluster lifecycle rules
        can be modified or removed on clusters created with lifecycle rules, though
        this isn't documented. See https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.clusters/patch#query-parameters
        for list other updatable configurations.
      properties:
        numPrimaryWorkers:
          type: integer
          format: int32
          description: Number of primary workers to scale to.
        numSecondaryWorkers:
          type: integer
          format: int32
          description: Number of secondary workers to scale to.
        autoscalingPolicy:
          type: string
          description: URI of autoscaling policy.
        lifecycleConfig:
          $ref: '#/components/schemas/GcpDataprocClusterLifecycleConfig'
        gracefulDecommissionTimeout:
          type: string
          description: Duration to wait for graceful decommission to finish. See https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-cluster-lifecycle#graceful_decommission_timeout.
          example: 1800s
    ControlledFlexibleResourceCreationParameters:
      description: Properties specific to flexible resource set on creation.
      type: object
      required:
        - typeNamespace
        - type
      properties:
        typeNamespace:
          description: Namespace of the type; e.g., 'terra'
          type: string
        type:
          description: Type of the flexible resource.
          type: string
        data:
          description: JSON encoded in base 64.
          type: string
          format: byte
    ControlledResourceCommonFields:
      type: object
      required:
        - name
        - cloningInstructions
        - accessScope
        - managedBy
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        managedBy:
          $ref: '#/components/schemas/ManagedBy'
        privateResourceUser:
          $ref: '#/components/schemas/PrivateResourceUser'
        resourceId:
          type: string
          format: uuid
        properties:
          $ref: '#/components/schemas/Properties'
    ControlledResourceIamRole:
      description: Enum containing all IAM roles on controlled resources available
        to users
      type: string
      enum:
        - READER
        - WRITER
        - EDITOR
    ControlledResourceMetadata:
      type: object
      properties:
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        managedBy:
          $ref: '#/components/schemas/ManagedBy'
        privateResourceUser:
          $ref: '#/components/schemas/PrivateResourceUser'
        privateResourceState:
          $ref: '#/components/schemas/PrivateResourceState'
        region:
          description: 'A valid region string representation of the cloud resource.

            '
          type: string
    CreateAzureLandingZoneRequestBody:
      description: Payload for requesting a new Azure landing zone.
      type: object
      required:
        - definition
        - billingProfileId
      properties:
        landingZoneId:
          description: The ID of the landing zone (optional). If omitted an ID will
            be auto-generated.
          type: string
          format: uuid
        definition:
          description: A definition to create an Azure landing zone from
          type: string
        version:
          description: 'A version of the landing zone. If not set the most recent
            will be used.

            If two versions available - ''v1'' and ''v2'' then ''v2'' will be selected.

            '
          type: string
        parameters:
          description: List of Azure landing zone parameters
          type: array
          items:
            description: 'Parameters to set user defined properties for resources
              in a landing zone.

              The parameters vary per landing zone definition.

              Here is a list of some parameters - POSTGRES_SERVER_SKU, POSTGRESQL_SUBNET,
              VNET_ADDRESS_SPACE.

              These are example of assigned values - POSTGRES_SERVER_SKU=GP_Gen5_2,
              POSTGRESQL_SUBNET=10.1.0.16/29

              '
            $ref: '#/components/schemas/AzureLandingZoneParameter'
        billingProfileId:
          description: Identifier for the billing profile to be used for this landing
            zone.
          type: string
          format: uuid
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateCloudContextRequest:
      type: object
      required:
        - cloudPlatform
        - jobControl
      description: 'Request body for asynchronously creating a cloud context for a
        workspace.

        Contains the CloudPlatform for the context and the JobControl object.

        For GCP, a project is created to contain the cloud resources of the context.

        For Azure, a managed resource group (MRG) is created outside of WSM within
        a tenant

        and a subscription obtained from the spend profile linked to the parent workspace.

        '
      properties:
        cloudPlatform:
          $ref: '#/components/schemas/CloudPlatform'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateCloudContextResult:
      type: object
      description: 'The result of a call to create a cloud context for a workspace.
        Contains

        a JobReport detailing the async operation, and either a GcpContext, AzureContext
        or AwsContext (if operation complete)

        or an ErrorReport detailing an error.

        '
      required:
        - jobReport
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        gcpContext:
          $ref: '#/components/schemas/GcpContext'
        azureContext:
          $ref: '#/components/schemas/AzureContext'
        awsContext:
          $ref: '#/components/schemas/AwsContext'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CreateControlledAwsS3StorageFolderRequestBody:
      description: Payload for requesting a new controlled AWS S3 Storage Folder resource.
      type: object
      required:
        - common
        - awsS3StorageFolder
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        awsS3StorageFolder:
          $ref: '#/components/schemas/AwsS3StorageFolderCreationParameters'
    CreateControlledAwsSageMakerNotebookRequestBody:
      description: Payload for requesting a new controlled AWS SageMaker Notebook
        instance resource.
      type: object
      required:
        - common
        - awsSageMakerNotebook
        - jobControl
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        awsSageMakerNotebook:
          $ref: '#/components/schemas/AwsSageMakerNotebookCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledAwsSageMakerNotebookResult:
      description: Response Payload for requesting a new controlled AWS SageMaker
        Notebook instance resource.
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        awsSageMakerNotebook:
          $ref: '#/components/schemas/AwsSageMakerNotebookResource'
    CreateControlledAzureBatchPoolRequestBody:
      description: Payload for requesting a new controlled Azure Batch Pool resource.
      type: object
      required:
        - common
        - azureBatchPool
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureBatchPool:
          $ref: '#/components/schemas/AzureBatchPoolCreationParameters'
    CreateControlledAzureDatabaseRequestBody:
      description: Payload for requesting a new controlled Azure Database resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureDatabase:
          $ref: '#/components/schemas/AzureDatabaseCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledAzureDiskRequestBody:
      description: Payload for requesting a new controlled Azure Disk resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureDisk:
          $ref: '#/components/schemas/AzureDiskCreationParameters'
    CreateControlledAzureKubernetesNamespaceRequestBody:
      description: Payload for requesting a new controlled Azure KubernetesNamespace
        resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureKubernetesNamespace:
          $ref: '#/components/schemas/AzureKubernetesNamespaceCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledAzureManagedIdentityRequestBody:
      description: Payload for requesting a new controlled Azure Managed Identity
        resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureManagedIdentity:
          $ref: '#/components/schemas/AzureManagedIdentityCreationParameters'
    CreateControlledAzureStorageContainerRequestBody:
      description: Payload for requesting a new controlled Azure storage container
        resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureStorageContainer:
          $ref: '#/components/schemas/AzureStorageContainerCreationParameters'
    CreateControlledAzureVmRequestBody:
      description: Payload for requesting a new controlled Azure VM resource.
      type: object
      required:
        - common
        - azureVm
        - jobControl
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureVm:
          $ref: '#/components/schemas/AzureVmCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledFlexibleResourceRequestBody:
      description: Payload for requesting a new controlled flexible resource.
      type: object
      required:
        - common
        - flexibleResource
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        flexibleResource:
          $ref: '#/components/schemas/ControlledFlexibleResourceCreationParameters'
    CreateControlledGcpAiNotebookInstanceRequestBody:
      description: Payload for requesting a new controlled GCS Api notebook instance.
      type: object
      required:
        - common
        - aiNotebookInstance
        - jobControl
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        aiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledGcpBigQueryDatasetRequestBody:
      description: Payload for requesting a new controlled BigQuery dataset resource.
      type: object
      required:
        - common
        - dataset
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        dataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetCreationParameters'
    CreateControlledGcpDataprocClusterRequestBody:
      description: Payload for requesting a new controlled Dataproc cluster.
      type: object
      required:
        - common
        - dataprocCluster
        - jobControl
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        dataprocCluster:
          $ref: '#/components/schemas/GcpDataprocClusterCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledGcpGceInstanceRequestBody:
      description: Payload for requesting a new controlled GCP GCE instance.
      type: object
      required:
        - common
        - gceInstance
        - jobControl
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        gceInstance:
          $ref: '#/components/schemas/GcpGceInstanceCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateControlledGcpGcsBucketRequestBody:
      description: Payload for requesting a new controlled GCS bucket resource.
      type: object
      required:
        - common
        - gcsBucket
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        gcsBucket:
          $ref: '#/components/schemas/GcpGcsBucketCreationParameters'
    CreateDataRepoSnapshotReferenceRequestBody:
      type: object
      description: A request to create a reference to a Data Repo snapshot.
      required:
        - metadata
        - snapshot
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        snapshot:
          $ref: '#/components/schemas/DataRepoSnapshotAttributes'
    CreateFolderRequestBody:
      type: object
      required:
        - displayName
      properties:
        displayName:
          description: 'The human readable name of the folder. The folder name must
            be

            unique within its parent folder directories.

            '
          type: string
        description:
          description: A description of the folder
          type: string
        parentFolderId:
          $ref: '#/components/schemas/FolderId'
        properties:
          $ref: '#/components/schemas/Properties'
    CreateGcpBigQueryDataTableReferenceRequestBody:
      type: object
      description: A request to create a reference to a BigQuery data table.
      required:
        - metadata
        - dataTable
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        dataTable:
          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'
    CreateGcpBigQueryDatasetReferenceRequestBody:
      type: object
      description: A request to create a reference to a BigQuery dataset.
      required:
        - metadata
        - dataset
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        dataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'
    CreateGcpGcsBucketReferenceRequestBody:
      type: object
      description: A request to create a reference to a GCS bucket.
      required:
        - metadata
        - bucket
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        bucket:
          $ref: '#/components/schemas/GcpGcsBucketAttributes'
    CreateGcpGcsObjectReferenceRequestBody:
      type: object
      description: A request to create a reference to a GCS object.
      required:
        - metadata
        - file
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        file:
          $ref: '#/components/schemas/GcpGcsObjectAttributes'
    CreateGitRepoReferenceRequestBody:
      type: object
      description: A request to create a reference to a Git repo.
      required:
        - metadata
        - gitrepo
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        gitrepo:
          $ref: '#/components/schemas/GitRepoAttributes'
    CreateLandingZoneResult:
      description: Result of starting an async job to create an Azure landing zone
      type: object
      properties:
        landingZoneId:
          description: An identifier of the Azure landing zone.
          type: string
          format: uuid
        definition:
          description: Requested landing zone definition.
          type: string
        version:
          description: Requested version of the landing zone definition.
          type: string
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CreateTerraWorkspaceReferenceRequestBody:
      type: object
      description: A request to create a reference to a Terra workspace
      required:
        - metadata
        - referencedWorkspace
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        referencedWorkspace:
          $ref: '#/components/schemas/TerraWorkspaceAttributes'
    CreateWorkspaceRequestBody:
      type: object
      required:
        - id
      properties:
        id:
          description: The ID of the workspace
          type: string
          format: uuid
        userFacingId:
          $ref: '#/components/schemas/UserFacingId'
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
        spendProfile:
          description: ID of provided spend profile
          type: string
        policies:
          $ref: '#/components/schemas/WsmPolicyInputs'
        stage:
          $ref: '#/components/schemas/WorkspaceStageModel'
        properties:
          $ref: '#/components/schemas/Properties'
        applicationIds:
          description: List of application ids to enable for this workspace
          type: array
          items:
            type: string
        projectOwnerGroupId:
          description: Optional Sam resource group ID which allows the group to be
            added as project owner on the workspace
          type: string
    CreateWorkspaceV2Request:
      type: object
      required:
        - id
        - jobControl
      properties:
        id:
          description: The ID of the workspace
          type: string
          format: uuid
        userFacingId:
          $ref: '#/components/schemas/UserFacingId'
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
        policies:
          $ref: '#/components/schemas/WsmPolicyInputs'
        stage:
          $ref: '#/components/schemas/WorkspaceStageModel'
        properties:
          $ref: '#/components/schemas/Properties'
        applicationIds:
          description: List of application ids to enable for this workspace
          type: array
          items:
            type: string
        cloudPlatform:
          description: Optional cloud platform for the cloud context to create within
            the workspace
          $ref: '#/components/schemas/CloudPlatform'
        spendProfile:
          description: ID of the spend profile for the cloud context, if any
          type: string
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CreateWorkspaceV2Result:
      description: Result of an asynchronous workspace create
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        workspaceId:
          type: string
          format: uuid
    CreatedAzureStorageContainerSasToken:
      description: Response payload for requesting a SAS token to access an Azure
        storage container
      type: object
      properties:
        token:
          type: string
        url:
          type: string
    CreatedControlledAwsS3StorageFolder:
      description: Response Payload for requesting a new controlled AWS S3 Storage
        Folder resource.
      type: object
      required:
        - resourceId
        - awsS3StorageFolder
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        awsS3StorageFolder:
          $ref: '#/components/schemas/AwsS3StorageFolderResource'
    CreatedControlledAzureBatchPool:
      description: Response payload for requesting a new Azure Batch Pool
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureBatchPool:
          $ref: '#/components/schemas/AzureBatchPoolResource'
    CreatedControlledAzureDatabaseResult:
      description: Response payload for requesting a new Azure database
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureDatabase:
          $ref: '#/components/schemas/AzureDatabaseResource'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CreatedControlledAzureDisk:
      description: Response payload for requesting a new Azure disk
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureDisk:
          $ref: '#/components/schemas/AzureDiskResource'
    CreatedControlledAzureKubernetesNamespaceResult:
      description: Response payload for requesting a new Azure kubernetesNamespace
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureKubernetesNamespace:
          $ref: '#/components/schemas/AzureKubernetesNamespaceResource'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CreatedControlledAzureManagedIdentity:
      description: Response payload for requesting a new Azure Managed Identity
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureManagedIdentity:
          $ref: '#/components/schemas/AzureManagedIdentityResource'
    CreatedControlledAzureStorageContainer:
      description: Response payload for requesting a new Azure storage container
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureStorageContainer:
          $ref: '#/components/schemas/AzureStorageContainerResource'
    CreatedControlledAzureVmResult:
      description: Api result class for creating an azure vm
      type: object
      properties:
        azureVm:
          $ref: '#/components/schemas/AzureVmResource'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CreatedControlledFlexibleResource:
      description: Response payload for requesting a new controlled flexible resource.
      type: object
      required:
        - resourceId
        - flexibleResource
      properties:
        resourceId:
          description: UUID of newly-created resource.
          type: string
          format: uuid
        flexibleResource:
          $ref: '#/components/schemas/FlexibleResource'
    CreatedControlledGcpAiNotebookInstanceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        aiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceResource'
    CreatedControlledGcpBigQueryDataset:
      description: Response Payload for requesting a new controlled BigQuery dataset.
      type: object
      required:
        - resourceId
        - bigQueryDataset
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        bigQueryDataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'
    CreatedControlledGcpDataprocClusterResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        dataprocCluster:
          $ref: '#/components/schemas/GcpDataprocClusterResource'
    CreatedControlledGcpGceInstanceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        gceInstance:
          $ref: '#/components/schemas/GcpGceInstanceResource'
    CreatedControlledGcpGcsBucket:
      description: Response Payload for requesting a new controlled GCS bucket.
      type: object
      required:
        - resourceId
        - gcpBucket
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        gcpBucket:
          $ref: '#/components/schemas/GcpGcsBucketResource'
    CreatedWorkspace:
      type: object
      required:
        - id
      properties:
        id:
          description: UUID of a newly-created workspace
          type: string
          format: uuid
    DataRepoSnapshotAttributes:
      description: Attributes of a data repository snapshot
      type: object
      required:
        - instanceName
        - snapshot
      properties:
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string
    DataRepoSnapshotResource:
      type: object
      description: A Data Repo snapshot resource
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/DataRepoSnapshotAttributes'
    DataprocClusterCloudId:
      description: Dataproc cluster cloud native ID
      type: object
      required:
        - generatedDataprocClusterCloudId
      properties:
        generatedDataprocClusterCloudId:
          type: string
    DefaultPartitionLifetime:
      description: Optional. Default lifetime (in seconds) for partitions in newly
        created partitioned tables.
      type: integer
      format: int64
    DefaultTableLifetime:
      description: Optional. Default lifetime (in seconds) for newly created tables.
      type: integer
      format: int64
    DeleteAzureLandingZoneJobResult:
      description: Result of delete job for an Azure landing zone
      type: object
      properties:
        landingZoneId:
          type: string
          format: uuid
        resources:
          description: A list of resource IDs of the deleted resources.
          type: array
          items:
            type: string
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteAzureLandingZoneRequestBody:
      description: Payload for deleting an Azure landing zone.
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteAzureLandingZoneResult:
      description: Result of starting a job to delete an Azure landing zone
      type: object
      properties:
        landingZoneId:
          type: string
          format: uuid
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteCloudContextV2Request:
      type: object
      required:
        - jobControl
      description: 'Request body for asynchronously deleting a cloud context for a
        workspace.

        '
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledAwsResourceRequestBody:
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledAwsResourceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteControlledAzureResourceRequest:
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledAzureResourceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteControlledGcpAiNotebookInstanceRequest:
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledGcpAiNotebookInstanceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteControlledGcpDataprocClusterRequest:
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledGcpDataprocClusterResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteControlledGcpGceInstanceRequest:
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledGcpGceInstanceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteControlledGcpGcsBucketRequest:
      type: object
      required:
        - jobControl
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DeleteControlledGcpGcsBucketResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    DeleteWorkspaceV2Request:
      type: object
      required:
        - jobControl
      description: 'Request body for asynchronously deleting a workspace.

        '
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'
    DynamicVNetAssignmentScope:
      description: Defines values for AutoUserScope.
      type: string
      enum:
        - none
        - job
    EnumerateJobsResult:
      description: result of an enumerateJobs request
      type: object
      properties:
        totalResults:
          type: integer
        pageToken:
          type: string
        results:
          description: List of enumerated jobs
          type: array
          items:
            $ref: '#/components/schemas/EnumeratedJob'
    EnumeratedJob:
      description: 'One job returned by the enumerate jobs request. The jobReport
        is always present.

        If the job failed, the error report is present. Depending on the operation,
        the

        resource information

        '
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        jobDescription:
          type: string
        operationType:
          $ref: '#/components/schemas/OperationType'
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        resourceAttributes:
          description: Data specific to the type of resource and whether it is controlled
            or not
          $ref: '#/components/schemas/ResourceAttributesUnion'
        destinationResourceId:
          description: 'For resource clone operations, the ID of the destination resource.
            Null otherwise.

            '
          type: string
          format: uuid
    ErrorReport:
      type: object
      required:
        - message
        - statusCode
        - causes
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string
    FlexibleResource:
      type: object
      description: A flexible resource.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/FlexibleResourceAttributes'
    FlexibleResourceAttributes:
      description: Attributes of a flexible resource.
      type: object
      required:
        - typeNamespace
        - type
      properties:
        typeNamespace:
          description: Namespace of the type; e.g., 'terra'
          type: string
        type:
          description: Type of the flexible resource.
          type: string
        data:
          description: JSON (decoded from base64).
          type: string
    FlexibleResourceUpdateParameters:
      description: Parameters that may be changed by a user.
      properties:
        data:
          description: JSON encoded in base 64.
          type: string
          format: byte
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    Folder:
      type: object
      required:
        - id
        - displayName
        - createdBy
        - createdDate
        - lastUpdatedBy
        - lastUpdatedDate
      properties:
        id:
          description: The ID of the folder. Immutable.
          $ref: '#/components/schemas/FolderId'
        displayName:
          description: The human readable name of the folder.
          type: string
        description:
          type: string
        parentFolderId:
          $ref: '#/components/schemas/FolderId'
        properties:
          $ref: '#/components/schemas/Properties'
        createdBy:
          description: User email of whom created the folder
          type: string
        createdDate:
          description: Timestamp when the folder is created
          type: string
          format: date-time
        lastUpdatedBy:
          description: User email of whom last updated the folder
          type: string
        lastUpdatedDate:
          description: Timestamp where the folder was last updated
          type: string
          format: date-time
    FolderId:
      description: Id of a given folder. Unique and immutable within a workspace.
      type: string
      format: uuid
    FolderList:
      type: object
      required:
        - folders
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
    GceInstanceCloudId:
      description: GCE instance native ID
      type: object
      required:
        - generatedGceInstanceCloudId
      properties:
        generatedGceInstanceCloudId:
          type: string
    GcpAiNotebookInstanceAcceleratorConfig:
      description: The hardware accelerator used on this instance. If you use accelerators,
        make sure that your configuration has enough vCPUs and memory to support the
        machineType you have selected. See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#AcceleratorConfig
      type: object
      required:
        - type
        - coreCount
      properties:
        type:
          description: Type of this accelerator
          type: string
        coreCount:
          description: Count of cores of this accelerator.
          type: integer
          format: int64
    GcpAiNotebookInstanceAttributes:
      description: AI Notebook instance properties included in post-creation, get,
        and update. Others must be retrieved from GCP using the specification.
      type: object
      required:
        - projectId
        - location
        - instanceId
      properties:
        projectId:
          description: The GCP project id for the project containing the notebook
            instance.
          type: string
        location:
          description: The GCP location containing the notebook instance, e.g. 'us-east1-b'
          type: string
        instanceId:
          description: An instance id unique to this project and location.
          type: string
    GcpAiNotebookInstanceContainerImage:
      description: Either this or vmImage must be specified. Definition of a container
        image for starting a notebook instance with the environment installed in a
        container. See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/ContainerImage
      type: object
      required:
        - repository
      properties:
        repository:
          description: 'Required. The path to the container image repository. For
            example: ''gcr.io/{project_id}/{imageName}'''
          type: string
        tag:
          description: The tag of the container image. If not specified, this defaults
            to the latest tag.
          type: string
    GcpAiNotebookInstanceCreationParameters:
      description: AI Platform Notebook instance specific properties to be set on
        creation. These are a subset of the values accepted by the GCP AI Platforms
        API. See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances/create
      type: object
      required:
        - machineType
      properties:
        instanceId:
          description: An instanceId unique to this project and location. Must be
            1-63 characters, using lower case letters, numbers, and dashes. The first
            character must be a lower case letter, and the last character must not
            be a dash.
          type: string
        location:
          description: The canonical GCP id for this location. For example, \'us-east1\'.
          type: string
        postStartupScript:
          description: Path to a Bash script that automatically runs after a notebook
            instance fully boots up. If path is not specified, a default startup script
            will run to install NextFlow and Terra CLI to the notebook instance. The
            path must be a URL or Cloud Storage path (gs://path-to-file/file-name).
            If the path is a cloud storage path, the created VM instance's service
            account's credentials is used to access it.
          type: string
        machineType:
          description: The Compute Engine machine type of this instance, see https://cloud.google.com/compute/docs/machine-types
          type: string
        acceleratorConfig:
          $ref: '#/components/schemas/GcpAiNotebookInstanceAcceleratorConfig'
        installGpuDriver:
          description: Whether the end user authorizes Google Cloud to install GPU
            driver on this instance. If this field is empty or set to false, the GPU
            driver won't be installed. Only applicable to instances with GPUs.
          type: boolean
        customGpuDriverPath:
          description: Specify a custom Cloud Storage path where the GPU driver is
            stored. If not specified, we'll automatically choose from official GPU
            drivers.
          type: string
        bootDiskType:
          description: The type of the boot disk attached to this instance, defaults
            to standard persistent disk (PD_STANDARD). See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#DiskType
          type: string
        bootDiskSizeGb:
          description: Input only. The size of the boot disk in GB attached to this
            instance, up to a maximum of 64000 GB (64 TB). The minimum recommended
            value is 100 GB. If not specified, this defaults to 100.
          type: integer
          format: int64
        dataDiskType:
          description: Input only. The type of the data disk attached to this instance,
            defaults to standard persistent disk (PD_STANDARD). See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#DiskType
          type: string
        dataDiskSizeGb:
          description: Input only. The size of the data disk in GB attached to this
            instance, up to a maximum of 64000 GB (64 TB). If not specified, this
            defaults to 100.
          type: integer
          format: int64
        metadata:
          description: 'Custom metadata to apply to this instance. Some metadata keys
            are reserved by Terra and will throw a bad request error if specified:
            ''proxy-mode''.'
          type: object
          additionalProperties:
            type: string
        vmImage:
          $ref: '#/components/schemas/GcpAiNotebookInstanceVmImage'
        containerImage:
          $ref: '#/components/schemas/GcpAiNotebookInstanceContainerImage'
    GcpAiNotebookInstanceResource:
      type: object
      description: Description of a AI Notebook Instance resource.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpAiNotebookInstanceAttributes'
    GcpAiNotebookInstanceVmImage:
      description: Either this or containerImage must be specified. Definition of
        a custom Compute Engine virtual machine image for starting a notebook instance
        with the environment installed directly on the VM. See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/VmImage
      type: object
      required:
        - projectId
      properties:
        projectId:
          description: 'The name of the Google Cloud project that this VM image belongs
            to. Format: ''projects/{project_id}'''
          type: string
        imageName:
          description: Either this or imageFamily must be specified. Use VM image
            name to find the image.
          type: string
        imageFamily:
          description: Either this or imageName must be specified. Use this VM image
            family to find the image; the newest image in this family will be used.
          type: string
    GcpAiNotebookUpdateParameters:
      description: Parameters that may be changed by a user. Location and dataset
        id are fixed upon create.
      properties:
        metadata:
          description: 'A map of custom metadata to apply to this instance. Some metadata  keys
            are reserved by Terra and will throw a bad request error if  specified:
            ''proxy-mode'', ''terra-workspace-id'', ''terra-cli-server''.'
          type: object
          additionalProperties:
            type: string
    GcpBigQueryDataTableAttributes:
      description: Attributes of a BigQuery data table
      type: object
      required:
        - projectId
        - datasetId
        - dataTableId
      properties:
        projectId:
          type: string
        datasetId:
          type: string
        dataTableId:
          type: string
    GcpBigQueryDataTableResource:
      type: object
      description: A reference to a BigQuery data table.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'
    GcpBigQueryDatasetAttributes:
      description: Attributes of a BigQuery dataset
      type: object
      required:
        - projectId
        - datasetId
      properties:
        projectId:
          type: string
        datasetId:
          type: string
    GcpBigQueryDatasetCreationParameters:
      description: Dataset-specific properties to be set on creation. These are a
        subset of the values accepted by the BigQuery API.
      type: object
      properties:
        datasetId:
          description: A valid dataset name per https://cloud.google.com/bigquery/docs/datasets#dataset-naming.
            Optional. If not set, resource name is used.
          type: string
        location:
          description: A valid dataset location per https://cloud.google.com/bigquery/docs/locations.
          type: string
        defaultTableLifetime:
          $ref: '#/components/schemas/DefaultTableLifetime'
        defaultPartitionLifetime:
          $ref: '#/components/schemas/DefaultPartitionLifetime'
    GcpBigQueryDatasetResource:
      type: object
      description: A reference to a BigQuery dataset.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'
    GcpBigQueryDatasetUpdateParameters:
      description: Parameters that may be changed by a user. Location and dataset
        id are fixed upon create.
      properties:
        defaultTableLifetime:
          description: Optional. Default lifetime (in seconds) for newly created tables.
            Specify zero (0) to unset an existing value. The default table lifetime
            will not be updated if this is omitted.
          type: integer
          format: int64
        defaultPartitionLifetime:
          description: Optional. Default lifetime (in seconds) for partitions in newly
            created partitioned tables. Specify zero (0) to unset an existing value.
            The default partition lifetime will not be updated if this is omitted.
          type: integer
          format: int64
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    GcpContext:
      type: object
      description: The GCP cloud context associated with a workspace.
      required:
        - projectId
      properties:
        projectId:
          description: The ID of the GCP project associated with the workspace.
          type: string
        operationState:
          $ref: '#/components/schemas/OperationState'
    GcpDataprocClusterAcceleratorConfig:
      description: The hardware accelerator used on instances. If you use accelerators,
        make sure that your configuration has enough vCPUs and memory to support the
        machineType you have selected. See https://cloud.google.com/dataproc/docs/reference/rest/v1/InstanceGroupConfig#AcceleratorConfig
      type: object
      required:
        - type
        - cardCount
      properties:
        type:
          description: Type of this accelerator
          type: string
        cardCount:
          description: Number of cards of this accelerator.
          type: integer
          format: int32
    GcpDataprocClusterAttributes:
      description: Dataproc cluster properties included in post-creation, get, and
        update. Others must be retrieved from GCP using the specification.
      type: object
      required:
        - projectId
        - region
        - clusterId
      properties:
        projectId:
          description: The GCP project id for the project containing the dataproc
            cluster.
          type: string
        region:
          description: The GCP region containing the dataproc cluster, e.g. 'us-east1'
          type: string
        clusterId:
          description: An dataproc cluster id unique to this project and region.
          type: string
    GcpDataprocClusterCreationParameters:
      type: object
      required:
        - configBucket
        - tempBucket
        - managerNodeConfig
      properties:
        clusterId:
          type: string
          description: Dataproc cluster name.
        region:
          type: string
          description: GCP region.
        imageVersion:
          type: string
          description: Dataproc image version with specific software versions installed
            for Spark, Hadoop, etc. Defaults to the latest debian image if not specified.
            See https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-version-clusters#supported_dataproc_versions.
        initializationScripts:
          type: array
          items:
            type: string
          description: List of initialization scripts to run on create. In gs url
            format.
        components:
          type: array
          items:
            type: string
          uniqueItems: true
          description: List of optional components to install on the cluster manager
            node. See full list of available components here https://cloud.google.com/dataproc/docs/concepts/components/overview.
        properties:
          type: object
          additionalProperties:
            type: string
          description: Map of additional properties to set on the cluster. See https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/cluster-properties.
        softwareFramework:
          type: string
          enum:
            - HAIL
          description: Software framework to setup the cluster with. Currently supported
            values are ['hail'].
        configBucket:
          type: string
          format: uuid
          description: Staging bucket controlled resource uuid.
        tempBucket:
          type: string
          format: uuid
          description: Temp bucket controlled resource uuid.
        autoscalingPolicy:
          type: string
          description: URI of autoscaling policy.
        metadata:
          type: object
          description: Metadata key-value pairs.
          additionalProperties:
            type: string
        managerNodeConfig:
          $ref: '#/components/schemas/GcpDataprocClusterInstanceGroupConfig'
        primaryWorkerConfig:
          $ref: '#/components/schemas/GcpDataprocClusterInstanceGroupConfig'
        secondaryWorkerConfig:
          $ref: '#/components/schemas/GcpDataprocClusterInstanceGroupConfig'
        lifecycleConfig:
          $ref: '#/components/schemas/GcpDataprocClusterLifecycleConfig'
    GcpDataprocClusterDiskConfig:
      description: Specifies the config of disk options for a group of VM instances.
        See https://cloud.google.com/dataproc/docs/reference/rest/v1/InstanceGroupConfig#DiskConfig
      type: object
      properties:
        bootDiskType:
          type: string
          default: pd-standard
          description: The type of the boot disk.
        bootDiskSizeGb:
          type: integer
          format: int32
          default: 500
          description: The size of the boot disk in GB.
        numLocalSsds:
          type: integer
          format: int32
          default: 0
          description: The number of local SSDs.
        localSsdInterface:
          type: string
          default: scsi
          description: The interface of local SSDs.
    GcpDataprocClusterInstanceGroupConfig:
      type: object
      required:
        - numInstances
        - machineType
      properties:
        numInstances:
          type: integer
          format: int32
          description: Number of instances in the instance group.
        machineType:
          type: string
          description: Compute engine machine type.
        imageUri:
          type: string
          description: Compute engine image used for cluster instances.
        acceleratorConfig:
          $ref: '#/components/schemas/GcpDataprocClusterAcceleratorConfig'
        diskConfig:
          $ref: '#/components/schemas/GcpDataprocClusterDiskConfig'
        preemptibility:
          type: string
          enum:
            - NON_PREEMPTIBLE
            - PREEMPTIBLE
            - SPOT
          description: Optionally specify instance preemptibility. Default is "NON_PREEMPTIBLE".
            See https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms.
    GcpDataprocClusterLifecycleConfig:
      description: Specifies the config of lifecycle options for a cluster. See https://cloud.google.com/dataproc/docs/reference/rest/v1/ClusterConfig#LifecycleConfig
      type: object
      properties:
        idleDeleteTtl:
          type: string
          description: Duration of idling before cluster is deleted. See https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/scheduled-deletion.
          example: 1800s
        autoDeleteTime:
          type: string
          format: date-time
          description: Date of cluster deletion in UTC "Zulu" format. Must not be
            specified if autoDeleteTtl is specified.
          example: 2014-10-02 15:01:23.045123+00:00
        autoDeleteTtl:
          type: string
          description: Duration of cluster life in seconds. Must not be specified
            if autoDeleteTime is specified.
          example: 3.5s
    GcpDataprocClusterResource:
      type: object
      description: Description of a Dataproc cluster resource.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpDataprocClusterAttributes'
    GcpGceInstanceAttributes:
      description: GCE instance properties included in post-creation, get, and update.
        Others must be retrieved from GCP using the specification.
      type: object
      required:
        - projectId
        - zone
        - instanceId
      properties:
        projectId:
          description: The GCP project id for the project containing the instance.
          type: string
        zone:
          description: The GCP zone containing the instance, e.g. 'us-east1-b'
          type: string
        instanceId:
          description: An instance name unique to this project and zone.
          type: string
    GcpGceInstanceCreationParameters:
      description: GCE instance specific properties to be set on creation. These are
        a subset of the values accepted by the GCP Compute API. See https://cloud.google.com/compute/docs/reference/rest/v1/instances/insert
      type: object
      required:
        - machineType
      properties:
        instanceId:
          description: An instanceId unique to this project and location. Must be
            1-63 characters, using lower case letters, numbers, and dashes. The first
            character must be a lower case letter, and the last character must not
            be a dash.
          type: string
        zone:
          description: The name of the zone for this request. For example, \'us-east1-b\'.
          type: string
        machineType:
          description: The Compute Engine machine type of this instance, see https://cloud.google.com/compute/docs/machine-types
          type: string
        guestAccelerators:
          type: array
          items:
            $ref: '#/components/schemas/GcpGceInstanceGuestAccelerator'
        metadata:
          description: 'Custom metadata to apply to this instance. Some metadata keys
            are reserved by Terra and will throw a bad request error if specified:
            \''terra-workspace-id\'', \''terra-cli-server\''.'
          type: object
          additionalProperties:
            type: string
        vmImage:
          description: Custom Compute Engine virtual machine image for starting the
            instance with the environment installed directly on the VM. Specify the
            image by its family name, or use a specific version of a public operating
            system image.
          type: string
        dataDiskType:
          description: The type of the data disk attached to this instance, defaults
            to standard persistent disk (pd-standard). See https://cloud.google.com/compute/docs/disks#disk-types
          type: string
        dataDiskSizeGb:
          description: The size of the data disk in GB attached to this instance,
            up to a maximum of 64000 GB (64 TB). If not specified, this defaults to
            500.
          type: integer
          format: int64
    GcpGceInstanceGuestAccelerator:
      description: The hardware accelerator used on this instance. If you use accelerators,
        make sure that your configuration has enough vCPUs and memory to support the
        machineType you have selected.
      type: object
      required:
        - type
        - cardCount
      properties:
        type:
          description: Type of this accelerator
          type: string
        cardCount:
          description: Count of cards of this accelerator.
          type: integer
    GcpGceInstanceResource:
      type: object
      description: Description of a GCE Instance resource.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpGceInstanceAttributes'
    GcpGceUpdateParameters:
      description: Parameters that may be changed by a user.
      properties:
        metadata:
          description: 'A map of custom metadata to apply to this instance. Some metadata  keys
            are reserved by Terra and will throw a bad request error if  specified:
            ''terra-workspace-id'', ''terra-cli-server''.'
          type: object
          additionalProperties:
            type: string
    GcpGcsBucketAttributes:
      description: Bucket properties included in post-creation, get, and update. Others
        must be retrieved from GCS using the name.
      type: object
      required:
        - bucketName
      properties:
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string
    GcpGcsBucketCreationParameters:
      description: Bucket-specific properties to be set on creation. These are a subset
        of the values accepted by the Gcp Storage API.
      type: object
      properties:
        name:
          description: A valid bucket name per https://cloud.google.com/storage/docs/naming-buckets.
          type: string
        location:
          description: A valid bucket location per https://cloud.google.com/storage/docs/locations.
          type: string
        defaultStorageClass:
          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        lifecycle:
          $ref: '#/components/schemas/GcpGcsBucketLifecycle'
    GcpGcsBucketDefaultStorageClass:
      description: Type and availability of objects in a bucket, described at https://cloud.google.com/storage/docs/storage-classes.
        This list does not include legacy types that apply to some existing buckets.
      type: string
      enum:
        - STANDARD
        - NEARLINE
        - COLDLINE
        - ARCHIVE
    GcpGcsBucketLifecycle:
      description: Options to control automatic deletion or storage class change for
        a bucket. Described at https://cloud.google.com/storage/docs/lifecycle.
      type: object
      required:
        - rules
      properties:
        rules:
          description: List of rules for this bucket
          type: array
          items:
            $ref: '#/components/schemas/GcpGcsBucketLifecycleRule'
    GcpGcsBucketLifecycleRule:
      description: A lifecycle rule for a bucket.
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleAction'
        condition:
          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleCondition'
    GcpGcsBucketLifecycleRuleAction:
      description: The lifecycle action to take. See https://cloud.google.com/storage/docs/lifecycle#actions.
      type: object
      required:
        - type
      properties:
        storageClass:
          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        type:
          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleActionType'
    GcpGcsBucketLifecycleRuleActionType:
      description: Type of action to perform. Formatted like our Java enums, but spelled
        in Camel case in Gcp API.
      type: string
      enum:
        - DELETE
        - SET_STORAGE_CLASS
    GcpGcsBucketLifecycleRuleCondition:
      description: The condition(s) under which the action will be taken.
      type: object
      properties:
        age:
          description: Age of an object (in days). This condition is satisfied when
            an object reaches the specified age.
          type: integer
        createdBefore:
          description: This condition is satisfied when an object is created before
            midnight of the specified date in UTC.
          type: string
          format: date-time
        customTimeBefore:
          description: This condition is satisfied when the customTime metadata for
            the object is set to an earlier date than the date used in this lifecycle
            condition.
          type: string
          format: date-time
        daysSinceCustomTime:
          description: Days since the date set in the customTime metadata for the
            object. This condition is satisfied when the current date and time is
            at least the specified number of days after the customTime.
          type: integer
        daysSinceNoncurrentTime:
          description: Relevant only for versioned objects. This condition is satisfied
            when an object has been noncurrent for more than the specified number
            of days.
          type: integer
        live:
          description: Relevant only for versioned objects. If the value is true,
            this condition matches the live version of objects; if the value is false,
            it matches noncurrent versions of objects.
          type: boolean
        matchesStorageClass:
          description: Objects having any of the storage classes specified by this
            condition will be matched. Values include "STANDARD", "NEARLINE", "COLDLINE",
            "ARCHIVE", "MULTI_REGIONAL", "REGIONAL", and "DURABLE_REDUCED_AVAILABILITY".
          type: array
          items:
            $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        noncurrentTimeBefore:
          description: Relevant only for versioned objects. This condition is satisfied
            for objects that became noncurrent on a date prior to the one specified
            in this condition.
          type: string
          format: date-time
        numNewerVersions:
          description: Relevant only for versioned objects. If the value is N, this
            condition is satisfied when there are at least N versions (including the
            live version) newer than this version of the object.
          type: integer
    GcpGcsBucketResource:
      type: object
      description: Description of a GCS bucket.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpGcsBucketAttributes'
    GcpGcsBucketUpdateParameters:
      description: Parameters that may be changed by a user. Location and Bucket name
        are fixed upon create.
      type: object
      properties:
        defaultStorageClass:
          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        lifecycle:
          $ref: '#/components/schemas/GcpGcsBucketLifecycle'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    GcpGcsObjectAttributes:
      description: GCS object properties included in post-creation, get, and update.
        Others must be retrieved from GCS using the name.
      type: object
      required:
        - bucketName
        - fileName
      properties:
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string
        fileName:
          description: Full path to the file in the gcs bucket.
          type: string
    GcpGcsObjectResource:
      type: object
      description: Description of a GCS object.
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpGcsObjectAttributes'
    GcsBucketCloudName:
      type: object
      required:
        - generatedBucketCloudName
      properties:
        generatedBucketCloudName:
          type: string
    GenerateAwsResourceCloudNameRequestBody:
      type: object
      required:
        - awsResourceName
      properties:
        awsResourceName:
          type: string
    GenerateGcpAiNotebookCloudIdRequestBody:
      type: object
      required:
        - aiNotebookName
      properties:
        aiNotebookName:
          type: string
    GenerateGcpBigQueryDatasetCloudIDRequestBody:
      type: object
      required:
        - bigQueryDatasetName
      properties:
        bigQueryDatasetName:
          type: string
    GenerateGcpDataprocClusterCloudIdRequestBody:
      type: object
      required:
        - dataprocClusterName
      properties:
        dataprocClusterName:
          type: string
    GenerateGcpGceInstanceCloudIdRequestBody:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          type: string
    GenerateGcpGcsBucketCloudNameRequestBody:
      type: object
      required:
        - gcsBucketName
      properties:
        gcsBucketName:
          type: string
    GitRepoAttributes:
      description: Attributes of a Git repository
      type: object
      required:
        - gitRepoUrl
      properties:
        gitRepoUrl:
          description: URL for cloning the git repository, could be an HTTPs or SSH
            url.
          type: string
    GitRepoResource:
      type: object
      description: A git repository resource
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GitRepoAttributes'
    GrantRoleRequestBody:
      description: The body for a request to grant a role to a single user.
      type: object
      required:
        - memberEmail
      properties:
        memberEmail:
          type: string
    IamRole:
      description: Enum containing all valid IAM roles on a Workspace
      type: string
      enum:
        - DISCOVERER
        - READER
        - WRITER
        - APPLICATION
        - OWNER
        - PROJECT_OWNER
    InboundEndpointProtocol:
      description: The protocol of the endpoint.
      type: string
      enum:
        - TCP
        - UDP
    InboundNatPool:
      description: 'A list of inbound NAT pools that can be used to address specific
        ports on an individual compute node externally.

        '
      properties:
        name:
          description: The name of the endpoint.
          type: string
        protocol:
          description: The protocol of the endpoint.
          $ref: '#/components/schemas/InboundEndpointProtocol'
        backendPort:
          description: The port number on the compute node.
          type: integer
        frontendPortRangeStart:
          description: "The first port number in the range of external ports that\
            \ will be used to provide inbound access \nto the backendPort on individual\
            \ compute nodes.\n"
          type: integer
        frontendPortRangeEnd:
          description: "The last port number in the range of external ports that will\
            \ be used to provide inbound access \nto the backendPort on individual\
            \ compute nodes.\n"
          type: integer
        networkSecurityGroupRules:
          description: 'A list of network security group rules that will be applied
            to the endpoint.

            '
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityGroupRule'
    IpAddressProvisioningType:
      description: 'Defines values for IpAddressProvisioningType.

        '
      type: string
      enum:
        - BatchManaged
        - UserManaged
        - NoPublicIPAddresses
    JobControl:
      type: object
      required:
        - id
      properties:
        id:
          description: Unique identifier for the job. Best practice is for job identifier
            to be a UUID, a ShortUUID, or other globally unique identifier.
          type: string
    JobReport:
      type: object
      required:
        - id
        - status
        - statusCode
        - resultURL
      properties:
        id:
          description: caller-provided unique identifier for the job
          type: string
        description:
          description: caller-provided description of the job
          type: string
        status:
          description: status of the job
          type: string
          enum:
            - RUNNING
            - SUCCEEDED
            - FAILED
        statusCode:
          description: HTTP code providing status of the job.
          type: integer
        submitted:
          description: timestamp when the job was submitted; in ISO-8601 format
          type: string
        completed:
          description: timestamp when the job completed - in ISO-8601 format. Present
            if status is SUCCEEDED or FAILED.
          type: string
        resultURL:
          description: URL where the result of the job can be retrieved. Equivalent
            to a Location header in HTTP.
          type: string
    JobResult:
      type: object
      description: 'The result of an async call that triggers a stairway job in WSM.

        '
      required:
        - jobReport
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    JobStateFilter:
      type: string
      enum:
        - ALL
        - ACTIVE
        - COMPLETED
    LoadUrlListRequestBody:
      description: 'Request to load signed urls files to a gcs bucket.

        '
      type: object
      properties:
        manifestFileUrl:
          description: "public url (http or https only) to the tsv file that contains\
            \ the \nlist of files.\n"
          type: string
    LoadUrlListResult:
      description: Response for loading signed url lists to gcs bucket.
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    ManagedBy:
      type: string
      description: Specifies the controller of the resource, workspace users or an
        application
      enum:
        - USER
        - APPLICATION
    MergeCheckRequest:
      description: Request with a workspace id
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          $ref: '#/components/schemas/WsmPolicyObjectId'
    Name:
      type: string
      pattern: ^[a-zA-Z0-9][-_a-zA-Z0-9]{0,1023}$
    NetworkSecurityGroupRule:
      description: 'A network security group rule to apply to an inbound endpoint.

        '
      type: object
      properties:
        priority:
          description: The priority for this rule.
          type: integer
        access:
          description: 'The action that should be taken for a specified IP address,
            subnet range or tag.

            '
          $ref: '#/components/schemas/NetworkSecurityGroupRuleAccess'
        sourceAddressPrefix:
          description: 'The source address prefix or tag to match for the rule.

            '
          type: string
        sourcePortRanges:
          description: 'The source port ranges to match for the rule.

            '
          type: array
          items:
            type: string
    NetworkSecurityGroupRuleAccess:
      description: 'The action that should be taken for a specified IP address, subnet
        range or tag.

        '
      type: string
      enum:
        - Allow
        - Deny
    OperationState:
      type: object
      description: Common operation state properties for cloud context and workspaces
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/State'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        jobId:
          type: string
    OperationType:
      type: string
      description: Types of job operations
      enum:
        - APPLICATION_DISABLED
        - APPLICATION_ENABLED
        - CLONE
        - CREATE
        - DELETE
        - GRANT_WORKSPACE_ROLE
        - REMOVE_WORKSPACE_ROLE
        - SYSTEM_CLEANUP
        - UPDATE
        - ADMIN_UPDATE
        - DATA_TRANSFER
        - UNKNOWN
    PoolEndpointConfiguration:
      description: The endpoint configuration for a pool.
      type: object
      properties:
        inboundNatPools:
          description: "A list of inbound NAT pools that can be used to address specific\
            \ ports \non an individual compute node externally.\n"
          type: array
          items:
            $ref: '#/components/schemas/InboundNatPool'
    PrivateResourceState:
      description: The possible states of ownership of a private resource. When a
        resource is abandoned, the assigned user loses permission to access it.
      type: string
      enum:
        - ABANDONED
        - ACTIVE
        - INITIALIZING
        - NOT_APPLICABLE
    PrivateResourceUser:
      description: 'This text describes the target state: Applications may optionally
        specify a workspace user to have access to the private resource by providing
        this element. If this element is not specified, workspace users will have
        no direct access to the associated cloud resource. If this element is specified
        both fields are required.'
      type: object
      required:
        - userName
        - privateResourceIamRole
      properties:
        userName:
          description: email of the workspace user to grant access
          type: string
        privateResourceIamRole:
          $ref: '#/components/schemas/ControlledResourceIamRole'
    Properties:
      description: Optional list of key-value pairs of strings
      type: array
      items:
        $ref: '#/components/schemas/Property'
    Property:
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: 'String to identify the key. Keys must be 1-1024 characters,
            using letters,

            numbers, dashes, and underscores and must not start with a dash or underscore.

            '
          type: string
        value:
          description: Arbitrary string value
          type: string
    PropertyKeys:
      description: A list of property keys that in the properties
      type: array
      items:
        type: string
    PublicIpAddressConfiguration:
      description: 'The public IP Address configuration of the networking configuration
        of a Pool.

        '
      type: object
      properties:
        provision:
          description: 'The provisioning type for Public IP Addresses for the Batch
            Pool.

            '
          $ref: '#/components/schemas/IpAddressProvisioningType'
        ipAddressIds:
          description: 'The list of public IPs which the Batch service will use when
            provisioning Compute Nodes.

            '
          type: array
          items:
            type: string
    ReferenceResourceCommonFields:
      type: object
      required:
        - name
        - cloningInstructions
      description: Common information used in all reference requests
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        properties:
          $ref: '#/components/schemas/Properties'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    Regions:
      type: array
      description: List of regions (e.g. us-central1, us-west1)
      items:
        uniqueItems: true
        type: string
    ResourceAttributesUnion:
      type: object
      description: 'This object is a union of reference to each resource type''s attributes.

        Exactly one will be populated based on the ResourceType in the

        ResourceDescription. The value of the other references is undefined.

        '
      properties:
        gcpBqDataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'
        gcpBqDataTable:
          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'
        gcpDataRepoSnapshot:
          $ref: '#/components/schemas/DataRepoSnapshotAttributes'
        gcpDataprocCluster:
          $ref: '#/components/schemas/GcpDataprocClusterAttributes'
        gcpGceInstance:
          $ref: '#/components/schemas/GcpGceInstanceAttributes'
        gcpGcsBucket:
          $ref: '#/components/schemas/GcpGcsBucketAttributes'
        gcpGcsObject:
          $ref: '#/components/schemas/GcpGcsObjectAttributes'
        gcpAiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceAttributes'
        azureKubernetesNamespace:
          $ref: '#/components/schemas/AzureKubernetesNamespaceAttributes'
        azureManagedIdentity:
          $ref: '#/components/schemas/AzureManagedIdentityAttributes'
        azureDatabase:
          $ref: '#/components/schemas/AzureDatabaseAttributes'
        azureDisk:
          $ref: '#/components/schemas/AzureDiskAttributes'
        azureStorageContainer:
          $ref: '#/components/schemas/AzureStorageContainerAttributes'
        azureVm:
          $ref: '#/components/schemas/AzureVmAttributes'
        azureBatchPool:
          $ref: '#/components/schemas/AzureBatchPoolAttributes'
        awsS3StorageFolder:
          $ref: '#/components/schemas/AwsS3StorageFolderAttributes'
        awsSageMakerNotebook:
          $ref: '#/components/schemas/AwsSageMakerNotebookAttributes'
        gitRepo:
          $ref: '#/components/schemas/GitRepoAttributes'
        terraWorkspace:
          $ref: '#/components/schemas/TerraWorkspaceAttributes'
        flexibleResource:
          $ref: '#/components/schemas/FlexibleResourceAttributes'
    ResourceCloneDetails:
      description: A structure to give provenance of a controlled or referenced resource
        clone
      type: object
      properties:
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        stewardshipType:
          $ref: '#/components/schemas/StewardshipType'
        sourceResourceId:
          description: resource ID of the original resource
          type: string
          format: uuid
        destinationResourceId:
          description: resource ID of the cloned resource, or null if failed or skipped
          type: string
          format: uuid
        result:
          $ref: '#/components/schemas/CloneResourceResult'
        errorMessage:
          description: If result is FAILED, a short description of the cause, if available.
          type: string
        name:
          description: name of the resource (same as source)
          type: string
        description:
          description: description of the destination resource (same as source)
          type: string
    ResourceDescription:
      type: object
      required:
        - metadata
        - resourceAttributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        resourceAttributes:
          description: Data specific to the type of resource and whether it is controlled
            or not
          $ref: '#/components/schemas/ResourceAttributesUnion'
    ResourceLineage:
      type: array
      items:
        $ref: '#/components/schemas/ResourceLineageEntry'
    ResourceLineageEntry:
      type: object
      required:
        - sourceWorkspaceId
        - sourceResourceId
      description: Resource lineage entry describing a single clone operation
      properties:
        sourceWorkspaceId:
          type: string
          format: uuid
        sourceResourceId:
          type: string
          format: uuid
    ResourceList:
      type: object
      required:
        - resources
      properties:
        resources:
          description: Enumerated list of controlled and referenced resources
          type: array
          items:
            $ref: '#/components/schemas/ResourceDescription'
    ResourceMetadata:
      type: object
      required:
        - workspaceId
        - resourceId
        - name
        - resourceType
        - stewardshipType
        - createdBy
        - createdDate
        - lastUpdatedBy
        - lastUpdatedDate
      properties:
        workspaceId:
          type: string
          format: uuid
        resourceId:
          type: string
          format: uuid
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        stewardshipType:
          $ref: '#/components/schemas/StewardshipType'
        cloudPlatform:
          $ref: '#/components/schemas/CloudPlatform'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        controlledResourceMetadata:
          description: Present if stewardship type is CONTROLLED
          $ref: '#/components/schemas/ControlledResourceMetadata'
        resourceLineage:
          $ref: '#/components/schemas/ResourceLineage'
        properties:
          $ref: '#/components/schemas/Properties'
        createdBy:
          description: User email of whom created the resource
          type: string
        createdDate:
          description: Timestamp when the resource is created
          type: string
          format: date-time
        lastUpdatedBy:
          description: User email of whom last updated the resource
          type: string
        lastUpdatedDate:
          description: Timestamp where the resource was last updated
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/State'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        jobId:
          type: string
    ResourceQuota:
      description: Resource quota information of an Azure landing zone resource.
      type: object
      properties:
        landingZoneId:
          description: An identifier of the Azure landing zone.
          type: string
          format: uuid
        azureResourceId:
          description: The fully qualified ID of the Azure resource.
          type: string
        resourceType:
          description: Azure resource type.
          type: string
        quotaValues:
          description: A key-value pair of quota information values for the resource.
          type: object
          additionalProperties: true
    ResourceType:
      description: Enum containing valid resource types. Used for enumeration
      type: string
      enum:
        - AI_NOTEBOOK
        - BIG_QUERY_DATASET
        - BIG_QUERY_DATA_TABLE
        - DATA_REPO_SNAPSHOT
        - GCE_INSTANCE
        - GCS_BUCKET
        - GCS_OBJECT
        - DATAPROC_CLUSTER
        - AZURE_KUBERNETES_NAMESPACE
        - AZURE_MANAGED_IDENTITY
        - AZURE_DATABASE
        - AZURE_DISK
        - AZURE_VM
        - AZURE_STORAGE_CONTAINER
        - AZURE_BATCH_POOL
        - AWS_S3_STORAGE_FOLDER
        - AWS_SAGEMAKER_NOTEBOOK
        - GIT_REPO
        - TERRA_WORKSPACE
        - FLEXIBLE_RESOURCE
    ResourceUnion:
      type: object
      description: 'This object is a union of reference to each resource type''s resource
        object.

        Exactly one will be populated based on the ResourceType.

        The value of the other references is undefined.

        '
      properties:
        gcpBqDataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'
        gcpBqDataTable:
          $ref: '#/components/schemas/GcpBigQueryDataTableResource'
        gcpDataRepoSnapshot:
          $ref: '#/components/schemas/DataRepoSnapshotResource'
        gcpDataprocCluster:
          $ref: '#/components/schemas/GcpDataprocClusterResource'
        gcpGceInstance:
          $ref: '#/components/schemas/GcpGceInstanceResource'
        gcpGcsBucket:
          $ref: '#/components/schemas/GcpGcsBucketResource'
        gcpGcsObject:
          $ref: '#/components/schemas/GcpGcsObjectResource'
        gcpAiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceResource'
        azureDisk:
          $ref: '#/components/schemas/AzureDiskResource'
        azureVm:
          $ref: '#/components/schemas/AzureVmResource'
        azureStorageContainer:
          $ref: '#/components/schemas/AzureStorageContainerResource'
        azureBatchPool:
          $ref: '#/components/schemas/AzureBatchPoolResource'
        awsS3StorageFolder:
          $ref: '#/components/schemas/AwsS3StorageFolderResource'
        awsSageMakerNotebook:
          $ref: '#/components/schemas/AwsSageMakerNotebookResource'
        gitRepo:
          $ref: '#/components/schemas/GitRepoResource'
        terraWorkspace:
          $ref: '#/components/schemas/TerraWorkspaceResource'
        flexibleResource:
          $ref: '#/components/schemas/FlexibleResource'
    RoleBinding:
      description: A binding between an IAM role and users with that role
      type: object
      required:
        - role
      properties:
        role:
          $ref: '#/components/schemas/IamRole'
        members:
          description: A list of users that this role applies to
          type: array
          items:
            type: string
    RoleBindingList:
      description: A list of role bindings
      type: array
      items:
        $ref: '#/components/schemas/RoleBinding'
    State:
      type: string
      description: WSM object state
      enum:
        - BROKEN
        - CREATING
        - DELETING
        - READY
        - UPDATING
    StewardshipType:
      description: Enum containing valid stewardship types. Used for enumeration
      type: string
      enum:
        - REFERENCED
        - CONTROLLED
    SystemVersion:
      type: object
      required:
        - gitTag
        - gitHash
        - github
        - build
      properties:
        gitTag:
          type: string
          description: Git tag of currently deployed app.
        gitHash:
          type: string
          description: Git hash of currently deployed app.
        github:
          type: string
          description: Github link to currently deployed commit.
        build:
          type: string
          description: Version of the currently deployed app declared in build.gradle.
            Client and server versions are linked.
        oldestSupportedCliVersion:
          type: string
          description: 'For the terra CLI client, the oldest version known to work
            with the current version of WSM.

            '
    TerraWorkspaceAttributes:
      description: Terra workspace attributes
      type: object
      required:
        - referencedWorkspaceId
      properties:
        referencedWorkspaceId:
          description: UUID for the workspace that this resource points to
          type: string
          format: uuid
    TerraWorkspaceResource:
      type: object
      description: A reference to a Terra workspace
      required:
        - metadata
        - attributes
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/TerraWorkspaceAttributes'
    UpdateBigQueryDataTableReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        projectId:
          type: string
        datasetId:
          type: string
        dataTableId:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    UpdateBigQueryDatasetReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        projectId:
          type: string
        datasetId:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    UpdateControlledAwsS3StorageFolderRequestBody:
      type: object
      description: Update an AWS S3 Storage folder's metadata.
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
    UpdateControlledAwsSageMakerNotebookRequestBody:
      type: object
      description: Update an AWS SageMaker Notebook resource's metadata.
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
    UpdateControlledFlexibleResourceRequestBody:
      type: object
      description: Update a flexible resource's metadata and attributes (type, data,
        and the type's namespace). This operation completely overrides the data field
        (if specified in the update parameters).
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/FlexibleResourceUpdateParameters'
    UpdateControlledGcpAiNotebookInstanceRequestBody:
      type: object
      description: Update an AI notebook's metadata
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/GcpAiNotebookUpdateParameters'
    UpdateControlledGcpBigQueryDatasetRequestBody:
      type: object
      description: Update a BigQuery dataset's metadata and expiration times.
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/GcpBigQueryDatasetUpdateParameters'
    UpdateControlledGcpDataprocClusterRequestBody:
      type: object
      description: Update a Dataproc cluster's metadata
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/ControlledDataprocClusterUpdateParameters'
    UpdateControlledGcpGceInstanceRequestBody:
      type: object
      description: Update an GCE instance metadata
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/GcpGceUpdateParameters'
    UpdateControlledGcpGcsBucketRequestBody:
      type: object
      description: Update a GCS bucket's metadata and lifecycle rules.
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name
            will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource
            description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/GcpGcsBucketUpdateParameters'
    UpdateDataRepoSnapshotReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    UpdateFolderRequestBody:
      type: object
      properties:
        displayName:
          description: The human readable name of the folder
          type: string
        description:
          description: A description of the folder
          type: string
        parentFolderId:
          description: "The parent folder id to update this folder to. When null and\
            \ \nupdateParent is false, do not update. When null and\nupdateParent\
            \ is true, move the folder to be the top-level.\n"
          $ref: '#/components/schemas/FolderId'
        updateParent:
          description: 'Whether to update parent folder id.

            '
          type: boolean
          default: false
    UpdateGcsBucketObjectReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string
        objectName:
          description: Full path to the file in the gcs bucket.
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    UpdateGcsBucketReferenceRequestBody:
      type: object
      description: Fields updatable on a GCS bucket. Leave properties null to keep
        them the same.
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    UpdateGitRepoReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        description:
          type: string
        gitRepoUrl:
          description: the url for cloning the corresponding git repository
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
    UpdateWorkspaceRequestBody:
      type: object
      properties:
        userFacingId:
          $ref: '#/components/schemas/UserFacingId'
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
    UserFacingId:
      description: 'Human-settable, mutable id. Must have 3-63 characters, contain
        lowercase letters, numbers, dashes, or

        underscores, and start with lowercase letter or number.

        '
      type: string
    WorkspaceApplicationDescription:
      type: object
      required:
        - workspaceId
        - applicationId
        - applicationState
        - workspaceApplicationState
      properties:
        workspaceId:
          description: The ID of the workspace
          type: string
          format: uuid
        applicationId:
          description: The ID of the application
          type: string
          format: string
        displayName:
          description: The human readable name of the application
          type: string
        description:
          description: A description of the application
          type: string
        applicationState:
          $ref: '#/components/schemas/ApplicationState'
        workspaceApplicationState:
          $ref: '#/components/schemas/WorkspaceApplicationState'
    WorkspaceApplicationDescriptionList:
      type: object
      required:
        - applications
      properties:
        applications:
          description: A list of known applications and their relationship to the
            workspace
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceApplicationDescription'
    WorkspaceApplicationState:
      description: State of the application in the workspace.
      type: string
      enum:
        - ENABLED
        - DISABLED
    WorkspaceDescription:
      type: object
      required:
        - id
        - userFacingId
        - highestRole
        - createdBy
        - lastUpdatedBy
        - createdDate
        - lastUpdatedDate
      properties:
        id:
          description: The ID of the workspace. Immutable.
          type: string
          format: uuid
        userFacingId:
          $ref: '#/components/schemas/UserFacingId'
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
        highestRole:
          description: 'Highest role of requester. If requester is both reader and
            writer, writer will be

            returned.

            '
          $ref: '#/components/schemas/IamRole'
        spendProfile:
          deprecated: true
          description: ID of provided spend profile. DEPRECATED. Use spend profile
            in the cloud context
          type: string
        stage:
          $ref: '#/components/schemas/WorkspaceStageModel'
        gcpContext:
          description: GCP context, if one exists
          $ref: '#/components/schemas/GcpContext'
        azureContext:
          description: Azure context, if one exists
          $ref: '#/components/schemas/AzureContext'
        awsContext:
          description: AWS context, if one exists
          $ref: '#/components/schemas/AwsContext'
        properties:
          $ref: '#/components/schemas/Properties'
        createdDate:
          description: Timestamp when the workspace is created
          type: string
          format: date-time
        createdBy:
          description: User email of whom created the workspace
          type: string
        lastUpdatedDate:
          description: Timestamp of the latest workspace change
          type: string
          format: date-time
        lastUpdatedBy:
          description: User email of whom made the last update to the workspace
          type: string
        policies:
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyInput'
        missingAuthDomains:
          type: array
          description: The auth domains that the user is missing for this workspace
          items:
            type: string
        operationState:
          $ref: '#/components/schemas/OperationState'
    WorkspaceDescriptionList:
      type: object
      required:
        - workspaces
      properties:
        workspaces:
          description: A list of workspaces
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceDescription'
    WorkspaceStageModel:
      description: Enum for possible stages of a workspace along the Rawls migration
        path
      type: string
      enum:
        - RAWLS_WORKSPACE
        - MC_WORKSPACE
    WsmPolicy:
      type: object
      required:
        - objectId
        - component
        - objectType
      properties:
        objectId:
          $ref: '#/components/schemas/WsmPolicyObjectId'
        component:
          $ref: '#/components/schemas/WsmPolicyComponent'
        objectType:
          $ref: '#/components/schemas/WsmPolicyObjectType'
        attributes:
          $ref: '#/components/schemas/WsmPolicyInputs'
        effectiveAttributes:
          $ref: '#/components/schemas/WsmPolicyInputs'
        deleted:
          type: boolean
        sourcesObjectIds:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/WsmPolicyObjectId'
        createdDate:
          description: ISO 8601 format date-time of when TPS created the policy
          type: string
        lastUpdatedDate:
          description: ISO 8601 format date-time of the last update of the effective
            policy
          type: string
    WsmPolicyComponent:
      type: string
      description: Enum representing a policy-bearing Terra component.
      enum:
        - BPM
        - TDR
        - WSM
    WsmPolicyConflict:
      type: object
      description: Describes a policy conflict between two policies
      required:
        - targetPolicy
        - conflictPolicy
        - namespace
        - name
      properties:
        namespace:
          description: Namespace of the conflicting policy; e.g., terra
          type: string
        name:
          description: Name of the conflicting policy; e.g., group-constraint
          type: string
        targetPolicy:
          description: The target policy object under change
          $ref: '#/components/schemas/WsmPolicyDescription'
        conflictPolicy:
          description: The policy object attempting to combine the conflicting policy
          $ref: '#/components/schemas/WsmPolicyDescription'
    WsmPolicyDepth:
      type: integer
      description: Explain source depth.
      minimum: 0
      default: 1
    WsmPolicyDescription:
      type: object
      description: Description of a PAO
      required:
        - objectId
        - component
        - objectType
      properties:
        objectId:
          $ref: '#/components/schemas/WsmPolicyObjectId'
        component:
          $ref: '#/components/schemas/WsmPolicyComponent'
        objectType:
          $ref: '#/components/schemas/WsmPolicyObjectType'
    WsmPolicyExplainResult:
      type: object
      properties:
        depth:
          $ref: '#/components/schemas/WsmPolicyDepth'
        objectId:
          $ref: '#/components/schemas/WsmPolicyObjectId'
        explainObjects:
          description: List of WSM policy objects referenced in the explanation
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyObject'
        explanation:
          description: One explanation for each policy in the effective policies array
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyExplanation'
    WsmPolicyExplanation:
      description: 'Explanation of one policy input, providing the input and the sources

        that were combined to result in the policy. One of the sources can be the

        requested object itself. The policyExplanations may be empty/not present if

        this is a leaf in the explain graph.

        '
      type: object
      required:
        - objectId
        - policyInput
      properties:
        objectId:
          $ref: '#/components/schemas/WsmPolicyObjectId'
        policyInput:
          $ref: '#/components/schemas/WsmPolicyInput'
        policyExplanations:
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyExplanation'
    WsmPolicyInput:
      type: object
      required:
        - namespace
        - name
      properties:
        namespace:
          description: Namespace of the policy input; e.g., 'terra'
          type: string
        name:
          description: Name of the policy input; e.g., 'region-constraint'
          type: string
        additionalData:
          description: Key-value pairs of additional data
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyPair'
    WsmPolicyInputs:
      type: object
      required:
        - inputs
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyInput'
    WsmPolicyLocation:
      description: TPS location object description.
      type: object
      required:
        - name
        - description
      properties:
        name:
          description: The location name
          type: string
        description:
          description: The location description
          type: string
        sublocations:
          description: Sub-locations contained within this location.
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyLocation'
        regions:
          $ref: '#/components/schemas/Regions'
    WsmPolicyMergeCheckResult:
      type: object
      required:
        - conflicts
        - resourcesWithConflict
      properties:
        conflicts:
          description: 'List of workspace conflicts.

            '
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyConflict'
        resourcesWithConflict:
          description: 'List of resources (by ID) in the target workspace with conflicting
            policy.

            '
          type: array
          items:
            type: string
            format: uuid
    WsmPolicyObject:
      type: object
      properties:
        objectId:
          $ref: '#/components/schemas/WsmPolicyObjectId'
        objectType:
          $ref: '#/components/schemas/WsmPolicyObjectType'
        component:
          $ref: '#/components/schemas/WsmPolicyComponent'
        deleted:
          description: Policy source has been deleted. Policies from the source still
            apply.
          type: boolean
        access:
          description: No access to the policy object. Policies from the source still
            apply.
          type: boolean
        name:
          description: Name of the policy object. Null if no access.
          type: string
        properties:
          description: The properties of the policy object. Empty if no access.
          $ref: '#/components/schemas/Properties'
        createdDate:
          description: ISO 8601 format date-time of when TPS created the policy
          type: string
        lastUpdatedDate:
          description: ISO 8601 format date-time of the last update of the effective
            policy
          type: string
    WsmPolicyObjectId:
      description: "The Terra object associated with this PAO; for example, a workspace\
        \ UUID associated \nwith its policy attribute object. Since these are UUIDs,\
        \ they will not conflict even \nthey are generated by different Terra components.\n"
      type: string
      format: uuid
    WsmPolicyObjectType:
      type: string
      description: Enum representing an object type of a policy-bearing Terra component.
      enum:
        - billing-profile
        - dataset
        - snapshot
        - workspace
    WsmPolicyPair:
      description: Container for key-value pairs of policy inputs
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    WsmPolicyUpdateMode:
      type: string
      description: "Enum controlling how policy updates are processed.\nDRY_RUN -\
        \ conflict checking is done, but no updates are done\nFAIL_ON_CONFLICT - updates\
        \ are made if there are no conflicts\nENFORCE_CONFLICT - updates are made\
        \ and conflicts are propagated\n  to policy dependents. (Only valid on policy\
        \ update.)\n"
      enum:
        - DRY_RUN
        - FAIL_ON_CONFLICT
        - ENFORCE_CONFLICT
    WsmPolicyUpdateRequest:
      description: Update request body
      type: object
      required:
        - updateMode
      properties:
        removeAttributes:
          $ref: '#/components/schemas/WsmPolicyInputs'
        addAttributes:
          $ref: '#/components/schemas/WsmPolicyInputs'
        updateMode:
          $ref: '#/components/schemas/WsmPolicyUpdateMode'
    WsmPolicyUpdateResult:
      type: object
      required:
        - updateApplied
        - conflicts
      properties:
        updateApplied:
          description: 'true if the update was applied; false if it was not. The response
            code will be 200

            even if the update was not applied.

            '
          type: boolean
        resultingPolicy:
          description: 'resulting policy; this reflects the state of the policy as
            it would be if the update

            was applied. It does not necessarily reflect the policy state in Terra
            Policy Service

            '
          $ref: '#/components/schemas/WsmPolicy'
        conflicts:
          description: 'list of conflicts; may be present on success or failure, depending
            on the updateMode setting

            '
          type: array
          items:
            $ref: '#/components/schemas/WsmPolicyConflict'
  securitySchemes:
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
  - authorization:
      - openid
      - email
      - profile
