# Partialy copied from https://github.com/broadinstitute/firecloud-orchestration/blob/develop/src/main/resources/swagger/api-docs.yaml
# Once workbench use Java 11, we can consider switch to use SAM generated Client Library.
openapi: 3.0.1
info:
  title: Sam
  description: |
    Workbench identity and access management.
  termsOfService: https://github.com/broadinstitute/sam
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  version: "0.1"
servers:
  - url: /
security:
  - googleoauth:
      - openid
      - email
      - profile
paths:
  /api/google/v1/user/petServiceAccount/{project}:
    get:
      tags:
        - Google
      summary: gets the pet service account for the specified user
      operationId: getPetServiceAccount
      parameters:
        - name: project
          in: path
          description: Google project of the pet
          required: true
          schema:
            type: string
      responses:
        200:
          description: user pet service account
          content:
            application/json:
              schema:
                type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'

  /api/resources/v2/{resourceTypeName}/{resourceId}:
    post:
      tags:
        - Resources
      summary: Create a new resource with default owner policy
      operationId: createResourceWithDefaultsV2
      parameters:
        - name: resourceTypeName
          in: path
          description: Type of resource to create
          required: true
          schema:
            type: string
        - name: resourceId
          in: path
          description: Id of resource to create, must be unique for all resources of
            given type
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
      responses:
        204:
          description: Successfully created resource
          content: { }
        409:
          description: Resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      tags:
        - Resources
      summary: Delete a resource
      operationId: deleteResourceV2
      parameters:
        - name: resourceTypeName
          in: path
          description: Type of the resource
          required: true
          schema:
            type: string
        - name: resourceId
          in: path
          description: Id of the resource
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully deleted resource
          content: { }
        400:
          description: Cannot delete a resource with children. Delete the children first then try again.
          content: { }
        403:
          description: You do not have permission to perform this action on the resource or permissions on the resource's parent
          content: { }
        404:
          description: Resource type does not exist or you are not a member of any
            policy on the resource
          content: { }

  /api/resources/v2/{resourceTypeName}/{resourceId}/children:
    get:
      tags:
        - Resources
      summary: List all the direct children of a resource
      operationId: listResourceChildren
      parameters:
        - name: resourceTypeName
          in: path
          description: Type of resource to query
          required: true
          schema:
            type: string
        - name: resourceId
          in: path
          description: Id of resource to query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ids and types of child resources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullyQualifiedResourceId'
        403:
          description: You do not have permission to list the children of this resource
          content: { }
        404:
          description: You do not have access to this resource or it does not exist
          content: { }
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'

components:
  schemas:
    FullyQualifiedResourceId:
      required:
        - resourceTypeName
        - resourceId
      type: object
      properties:
        resourceTypeName:
          type: string
          description: The type of the resource
        resourceId:
          type: string
          description: The id of the resource
      description: type and id of a resource

    ErrorReport:
      required:
        - causes
        - message
        - source
        - stackTrace
      type: object
      properties:
        source:
          type: string
          description: service causing error
        message:
          type: string
          description: what went wrong
        exceptionClass:
          type: string
          description: class of exception thrown
        statusCode:
          type: integer
          description: HTTP status code
        causes:
          type: array
          description: errors triggering this one
          items:
            $ref: '#/components/schemas/ErrorReport'
        stackTrace:
          type: array
          description: stack trace
          items:
            $ref: '#/components/schemas/StackTraceElement'
      description: ""
    StackTraceElement:
      required:
        - className
        - fileName
        - lineNumber
        - methodName
      type: object
      properties:
        className:
          type: string
          description: class name
        methodName:
          type: string
          description: method name
        fileName:
          type: string
          description: source file name
        lineNumber:
          type: integer
          description: line number
      description: ""
  securitySchemes:
    googleoauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
