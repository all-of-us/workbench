# This file is a hand-crafted combination of Leo and its proxy APIs.
#  - A subset of Welder (modified for runtime/path prefix): https://github.com/DataBiosphere/welder/blob/master/server/src/main/resources/api-docs.yaml
#  - A subset of Jupyter (modified for runtime/path prefix): https://github.com/jupyter/notebook/blob/master/notebook/services/api/api.yaml
#  - Subset of Leo API used client-side (downgraded to Swagger2): https://github.com/broadinstitute/leonardo/blob/develop/http/src/main/resources/swagger/api-docs.yaml

swagger: '2.0'
info:
  title: Leonardo
  description: |
    Workbench notebooks service.
  version: '0.1'
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  termsOfService: 'https://github.com/broadinstitute/leonardo'
host:  notebooks.firecloud.org
basePath: /
produces:
  - application/json
tags:
  - name: runtimes
    description: Runtimes API
  - name: proxy
    description: Notebook proxy API
  - name: jupyter
    description: Jupyter API
  - name: apps
    description: Experimental App API

security:
  - googleoauth:
      - openid
      - email
      - profile

securityDefinitions:
  googleoauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization

##########################################################################################
## Subset of Leo APIs needed by the frontend. Just leave them here for ease of
## access. If we want to consolidate these APIs, we can later decide to migrate
## the Welder and Jupyter spec to OAS3 as well, and move typescript codegen.
##########################################################################################

paths:

  /api/google/v1/runtimes/{googleProject}/{name}/stop:
    post:
      summary: Stops a Dataproc cluster or Google Compute Engine instance
      description: >
        Stops the running compute, but retains any data persisted on disk. The runtime may be restarted with the /start endpoint.
      operationId: stopRuntime
      tags:
        - runtimes
      parameters:
        - in: path
          name: googleProject
          description: googleProject
          required: true
          type: string
        - in: path
          name: name
          description: runtime name
          required: true
          type: string
      responses:
        "202":
          description: Runtime stop request accepted
        "403":
          description: User does not have permission to perform action on runtime
        "404":
          description: Runtime not found
        "409":
          description: Runtime cannot be stopped
        "500":
          description: Internal Error
  /api/google/v1/runtimes/{googleProject}/{name}/start:
    post:
      summary: Starts a Dataproc cluster or Google Compute Engine instance
      description: Starts the a stopped runtime
      operationId: startRuntime
      tags:
        - runtimes
      parameters:
        - in: path
          name: googleProject
          description: googleProject
          required: true
          type: string
        - in: path
          name: name
          description: runtimeName
          required: true
          type: string
      responses:
        "202":
          description: Runtime start request accepted
        "403":
          description: User does not have permission to perform action on runtime
        "404":
          description: Runtime not found
        "409":
          description: Runtime cannot be started
        "500":
          description: Internal Error

  "/proxy/{googleProject}/{runtimeName}/setCookie":
    get:
      summary: Sets a browser cookie needed to authorize connections to a Dataproc
        runtime
      description: >
        If using Google token-based authorization to a runtime, the Leo proxy
        accepts a

        Google token passed as a cookie value. This endpoint facilitates setting that cookie.

        It accepts a bearer token in an Authorization header and responds with a Set-Cookie header.
      operationId: setCookie
      tags:
        - proxy
      parameters:
        - in: path
          name: googleProject
          required: true
          type: string
        - in: path
          name: runtimeName
          description: runtimeName
          required: true
          type: string
      responses:
        "204":
          description: Successfully set a cookie
        "401":
          description: Proxy connection unauthorized
        "404":
          description: Runtime not found
        "500":
          description: Internal Error

  "/proxy/{googleProject}/{runtimeName}/jupyter/terminals/{terminalName}":
    get:
      summary: Connect to a jupyter terminal
      operationId: connectToTerminal
      tags:
        - proxy
      parameters:
        - in: path
          name: googleProject
          required: true
          type: string
        - in: path
          name: runtimeName
          description: runtimeName
          required: true
          type: string
        - in: path
          name: terminalName
          description: terminalName
          required: true
          type: string
      responses:
        "204":
          description: Successfully connect to a terminal
        "401":
          description: Proxy connection unauthorized
        "404":
          description: Runtime not found
        "500":
          description: Internal Error

  /proxy/invalidateToken:
    get:
      summary: Invalidates a token
      description: >
        If using Google token-based auth, call this endpoint when a user's
        Google token is invalidated

        (e.g. when logging out of the application). This ensures that the token is also invalidated in Leo

        and that the user's proxied connections stop working.
      operationId: invalidateToken
      tags:
        - proxy
      responses:
        "200":
          description: Successfully invalidated a token
        "500":
          description: Internal Error

  "/api/google/v1/apps/{googleProject}/{appName}/stop":
    post:
      summary: Stops an app with the given project and name
      description: >
        Stops the running compute, but retains any data persisted on disk. The app may be restarted with the /start endpoint.
      operationId: stopApp
      tags:
        - apps
      parameters:
        - in: path
          name: googleProject
          description: googleProject
          required: true
          schema:
            type: string
        - in: path
          name: appName
          description: appName
          required: true
          schema:
            type: string
      responses:
        "202":
          description: App stop request accepted
        "403":
          description: User does not have permission to perform action on app
        "404":
          description: App not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"
        "409":
          description: App cannot be stopped
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"
  "/api/google/v1/apps/{googleProject}/{appName}/start":
    post:
      summary: Starts an app with the given project and name
      description: Starts the stopped app
      operationId: startApp
      tags:
        - apps
      parameters:
        - in: path
          name: googleProject
          description: googleProject
          required: true
          schema:
            type: string
        - in: path
          name: appName
          description: appName
          required: true
          schema:
            type: string
      responses:
        "202":
          description: App start request accepted
        "403":
          description: User does not have permission to perform action on app
        "404":
          description: App not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"
        "409":
          description: App cannot be started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReport"

##########################################################################################
## Subset of the Welder API
## https://github.com/DataBiosphere/welder/blob/master/server/src/main/resources/api-docs.yaml
##########################################################################################

  '/proxy/{googleProject}/{runtimeName}/welder/objects':
    parameters:
      - in: path
        name: googleProject
        description: googleProject
        required: true
        type: string
      - in: path
        name: runtimeName
        description: runtimeName
        required: true
        type: string
    post:
      summary: ''
      operationId: welderLocalize
      tags:
        - proxy
      parameters:
        - in: body
          description: ''
          name: body
          required: true
          schema:
            $ref: '#/definitions/Localize'
      responses:
        '204':
          description: ''
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WelderErrorReport'
  '/proxy/{googleProject}/{runtimeName}/welder/storageLinks':
    parameters:
      - in: path
        name: googleProject
        description: googleProject
        required: true
        type: string
      - in: path
        name: runtimeName
        description: runtimeName
        required: true
        type: string
    post:
      summary: 'creates the specified storage link configuration for the runtime'
      operationId: welderCreateStorageLink
      tags:
        - proxy
      parameters:
        - in: body
          description: ''
          name: body
          required: true
          schema:
            $ref: '#/definitions/StorageLink'
      responses:
        '200':
          description: 'storage link successfully created'
          schema:
            $ref: '#/definitions/StorageLink'

##########################################################################################
## Subset of the Jupyter API
## https://github.com/jupyter/notebook/blob/master/notebook/services/api/api.yaml
##########################################################################################

  # In Swagger 2, path params are escaped so we need to hardcode any known "/"
  # delimiters. With Swagger 3, allowReserved would allow us to collapse the
  # "workspaces/..." fragment into a single "path" var, as is used in Jupyter's
  # own Swagger definition. Note: this does not initialize any parent
  # directories. The Leo proxy localize API can be used for this purpose.
  /proxy/{googleProject}/{runtimeName}/jupyter/api/contents/{fileName}:
    parameters:
      - in: path
        name: googleProject
        description: googleProject
        required: true
        type: string
      - in: path
        name: runtimeName
        description: runtimeName
        required: true
        type: string
      - in: path
        name: fileName
        description: fileName
        required: true
        type: string
    get:
      summary: Get contents of file or directory
      description: "A client can optionally specify a type and/or format argument via URL parameter. When given, the Contents service shall return a model in the requested type and/or format. If the request cannot be satisfied, e.g. type=text is requested, but the file is binary, then the request shall fail with 400 and have a JSON response containing a 'reason' field, with the value 'bad format' or 'bad type', depending on what was requested."
      tags:
        - jupyter
      operationId: getRootContents
      parameters:
        - name: type
          in: query
          description: File type ('file', 'directory')
          type: string
          enum:
            - file
            - directory
        - name: format
          in: query
          description: "How file content should be returned ('text', 'base64')"
          type: string
          enum:
            - text
            - base64
        - name: content
          in: query
          description: "Return content (0 for no content, 1 for return content)"
          type: integer
      responses:
        404:
          description: No item found
        400:
          description: Bad request
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error condition
              reason:
                type: string
                description: Explanation of error reason
        200:
          description: Contents of file or directory
          headers:
            Last-Modified:
              description: Last modified date for file
              type: string
              format: dateTime
          schema:
            $ref: '#/definitions/JupyterContents'
        500:
          description: Model key error
  /proxy/{googleProject}/{runtimeName}/jupyter/api/contents/workspaces/{workspaceDir}:
    parameters:
      - in: path
        name: googleProject
        description: googleProject
        required: true
        type: string
      - in: path
        name: runtimeName
        description: runtimeName
        required: true
        type: string
      - in: path
        name: workspaceDir
        description: workspaceDir
        required: true
        type: string
    post:
      summary: Create a new file in the specified path
      description: "A POST to /api/contents/path creates a New untitled, empty file or directory. A POST to /api/contents/path with body {'copy_from': '/path/to/OtherNotebook.ipynb'} creates a new copy of OtherNotebook in path."
      tags:
        - jupyter
      consumes:
        - application/json
      operationId: postContents
      parameters:
        - name: model
          in: body
          description: Path of file to copy
          schema:
            type: object
            properties:
              ext:
                type: string
              type:
                type: string
      responses:
        201:
          description: File created
          headers:
            Location:
              description: URL for the new file
              type: string
              format: url
          schema:
            $ref: '#/definitions/JupyterContents'
        404:
          description: No item found
        400:
          description: Bad request
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error condition
              reason:
                type: string
                description: Explanation of error reason
  /proxy/{googleProject}/{runtimeName}/jupyter/api/contents/workspaces/{workspaceDir}/{fileName}:
    parameters:
      - in: path
        name: googleProject
        description: googleProject
        required: true
        type: string
      - in: path
        name: runtimeName
        description: runtimeName
        required: true
        type: string
      - in: path
        name: workspaceDir
        description: workspaceDir
        required: true
        type: string
      - in: path
        name: fileName
        description: fileName
        required: true
        type: string
    put:
      summary: Save or upload file.
      description: "Saves the file in the location specified by name and path.  PUT is very similar to POST, but the requester specifies the name, whereas with POST, the server picks the name."
      tags:
        - jupyter
      consumes:
        - application/json
      operationId: putContents
      parameters:
        - name: model
          in: body
          description: New path for file or directory
          schema:
            $ref: '#/definitions/JupyterModel'
      responses:
        200:
          description: File saved
          headers:
            Location:
              description: Updated URL for the file or directory
              type: string
              format: url
          schema:
            $ref: '#/definitions/JupyterContents'
        201:
          description: Path created
          headers:
            Location:
              description: URL for the file or directory
              type: string
              format: url
          schema:
            $ref: '#/definitions/JupyterContents'
        400:
          description: No data provided
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error condition
              reason:
                type: string
                description: Explanation of error reason

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:
  ErrorReport:
    description: ''
    required:
      - source
      - message
      - causes
      - stackTrace
    properties:
      source:
        type: string
        description: service causing error
      message:
        type: string
        description: what went wrong
      exceptionClass:
        type: string
        description: class of exception thrown
      statusCode:
        type: integer
        description: HTTP status code
      causes:
        type: array
        description: errors triggering this one
        items:
          $ref: '#/definitions/ErrorReport'
      stackTrace:
        type: array
        description: stack trace
        items:
          $ref: '#/definitions/StackTraceElement'

  StackTraceElement:
    description: ''
    required:
      - className
      - methodName
      - fileName
      - lineNumber
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number


##########################################################################################
## Subset of Welder API models
## https://github.com/DataBiosphere/welder/blob/master/server/src/main/resources/api-docs.yaml
##########################################################################################

  Localize:
    description: ''
    properties:
      action:
        type: string
        default: "localize"
      entries:
        type: array
        items:
          $ref: '#/definitions/LocalizationEntry'
  LocalizationEntry:
    properties:
      sourceUri:
        type: string
      localDestinationPath:
        type: string
  StorageLink:
    description: ''
    properties:
      localBaseDirectory:
        type: string
      localSafeModeBaseDirectory:
        type: string
      cloudStorageDirectory:
        type: string
      pattern:
        type: string
  WelderErrorReport:
    properties:
      errorMessage:
        type: string
      errorCode:
        type: integer

##########################################################################################
## Subset of Jupyter API models
## https://github.com/jupyter/notebook/blob/master/notebook/services/api/api.yaml
##########################################################################################

  JupyterModel:
    type: object
    properties:
      name:
        type: string
        description: The new filename if changed
      path:
        type: string
        description: New path for file or directory
      type:
        type: string
        description: Path dtype ('notebook', 'file', 'directory')
      format:
        type: string
        description: File format ('json', 'text', 'base64')
      content:
        type: string
        description: The actual body of the document excluding directory type

  JupyterContents:
    description: "A contents object.  The content and format keys may be null if content is not contained.  If type is 'file', then the mimetype will be null."
    type: object
    required:
      - type
      - name
      - path
      - writable
      - created
      - last_modified
      - mimetype
      - format
      - content
    properties:
      name:
        type: string
        description: "Name of file or directory, equivalent to the last part of the path"
      path:
        type: string
        description: Full path for file or directory
      type:
        type: string
        description: Type of content
        enum:
          - directory
          - file
          - notebook
      writable:
        type: boolean
        description: indicates whether the requester has permission to edit the file
      created:
        type: string
        description: Creation timestamp
        format: dateTime
      last_modified:
        type: string
        description: Last modified timestamp
        format: dateTime
      mimetype:
        type: string
        description: "The mimetype of a file.  If content is not null, and type is 'file', this will contain the mimetype of the file, otherwise this will be null."
      content:
        type: string
        description: "The content, if requested (otherwise null).  Will be an array if type is 'directory'"
      format:
        type: string
        description: Format of content (one of null, 'text', 'base64', 'json')
