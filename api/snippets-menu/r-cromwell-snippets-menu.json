{
  "name": "All of Us Cromwell Setup snippets",
  "sub-menu": [
    {
      "name": "(1) Setup",
      "snippet": "library(httr)\nlibrary(jsonlite)\nlibrary(rprojroot)\nlibrary(glue)\nlibrary(stringr)\n\n# Check for the CROMWELL app\ncheck_for_app <- function(env) {\n  list_apps_url <- glue(\"{env$leonardo_url}/api/google/v1/apps/{env$google_project}\")\n\n  res <- GET(\n    url = list_apps_url,\n    query = list(includeDeleted = \"false\"),\n    add_headers(Authorization = paste(\"Bearer\", env$token))\n  )\n  stop_for_status(res)\n\n  for (potential_app in content(res, as = \"parsed\")) {\n    if (potential_app$appType == \"CROMWELL\" &&\n        (toString(potential_app$auditInfo$creator) == env$owner_email ||\n         toString(potential_app$auditInfo$creator) == env$user_email)) {\n      potential_app_name <- potential_app$appName\n      potential_app_status <- potential_app$status\n\n      # We found a CROMWELL app in the correct google project and owned by the user. Now just check the workspace:\n      app_details <- get_app_details(env, potential_app_name)\n      workspace_namespace <- app_details[[2]]\n      proxy_url <- app_details[[3]]\n      if (workspace_namespace == env$workspace_namespace) {\n        return(list(potential_app_name, potential_app_status, proxy_url))\n      }\n    }\n  }\n  return(list(NULL, NULL, NULL))\n}\n\n# Get the details of the specified app\nget_app_details <- function(env, app_name) {\n  get_app_url <- glue(\"{env$leonardo_url}/api/google/v1/apps/{env$google_project}/{app_name}\")\n\n  res <- GET(\n    url = get_app_url,\n    query = list(includeDeleted = \"true\", role = \"creator\"),\n    add_headers(Authorization = paste(\"Bearer\", env$token))\n  )\n  if (status_code(res) == 404) {\n    return(list(\"DELETED\", NULL, NULL))\n  } else {\n    stop_for_status(res)\n  }\n\n  result_json <- content(res, as = \"parsed\")\n  custom_environment_variables <- result_json$customEnvironmentVariables\n\n  list(result_json$status, custom_environment_variables$WORKSPACE_NAMESPACE, result_json$proxyUrls)\n}\n\n# Check if cromshell is installed\nvalidate_cromshell <- function() {\n  cat('Scanning for correct cromshell version...\\n')\n  tryCatch({\n    validate_cromshell_beta()\n  }, error = function(e) {\n    validate_cromshell_alpha()\n  })\n  return\n}\n\nvalidate_cromshell_alpha <- function() {\n  cat('Scanning for cromshell 2 alpha..')\n  tryCatch({\n    system2('cromshell-alpha', args = 'version', stdout = TRUE, stderr = TRUE)\n    cat('\\nFound cromshell-alpha, please use cromshell-alpha\\n')\n  }, error = function(e) {\n    cat('cromshell-alpha not found\\n')\n      stop(e)\n  })\n\n  return\n}\n\nvalidate_cromshell_beta <- function() {\n  cat('Scanning for cromshell 2 beta...\\n')\n  tryCatch({\n    system2('cromshell-beta', args = 'version', stdout = TRUE, stderr = TRUE)\n    cat('\\nFound cromshell-beta, please use cromshell-beta\\n')\n  }, error = function(e) {\n    stop(e)\n  })\n}\n\n# Configure Cromwell\nconfigure_cromwell <- function(env, proxy_url) {\n  cat(\"Updating cromwell config\\n\")\n  file_path <- file.path(path.expand(\"~\"), \".cromshell\", \"cromshell_config.json\")\n  configuration <- list(\n    cromwell_server = ifelse(!is.null(proxy_url), proxy_url, \"invalid url\"),\n    requests_timeout = 5,\n    gcloud_token_email = env$user_email,\n    referer_header_url = env$leonardo_url\n  )\n  write(toJSON(configuration, auto_unbox = TRUE, pretty = TRUE), file_path)\n}\n\n# Find the status of the app\nfind_app_status <- function(env) {\n  cat('Checking status for CROMWELL app\\n')\n  app_info <- check_for_app(env)\n  app_name <- app_info[[1]]\n  app_status <- app_info[[2]]\n  proxy_url <- app_info[[3]]\n\n  configure_cromwell(env, proxy_url[[1]])\n\n  if (is.null(app_name)) {\n    cat('CROMWELL app does not exist. Please create cromwell server from workbench\\n')\n  } else {\n    cat(sprintf('app_name=%s; app_status=%s\\n', app_name, app_status))\n    cat(sprintf('Existing CROMWELL app found (app_name=%s; app_status=%s).\\n', app_name, app_status))\n    quit(save = \"no\", status = 1, runLast = FALSE)\n  }\n}\n\nmain <- function() {\n  # Iteration 1: these ENV reads will throw errors if not set.\n  env <- list(\n    workspace_namespace = Sys.getenv('WORKSPACE_NAMESPACE'),\n    workspace_bucket = Sys.getenv('WORKSPACE_BUCKET'),\n    user_email = ifelse(is.null(Sys.getenv('PET_SA_EMAIL')), Sys.getenv('OWNER_EMAIL'), Sys.getenv('PET_SA_EMAIL')),\n    owner_email = Sys.getenv('OWNER_EMAIL'),\n    google_project = Sys.getenv('GOOGLE_PROJECT'),\n    leonardo_url = Sys.getenv('LEONARDO_BASE_URL')\n  )\n\n  # Before going any further, check that cromshell2 is installed:\n  validate_cromshell()\n\n  # Fetch the token:\n  token <- system2('gcloud', args = c(\"auth\", \"print-access-token\"), stdout = TRUE)\n\n  env['token'] <- token\n\n  find_app_status(env)\n}\n\n main()\n\n"
    }
  ]
}
